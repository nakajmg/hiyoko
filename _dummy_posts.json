[
  {
    "number": 756,
    "name": "esaエディタ - hiyoko",
    "full_name": "esaエディタ - hiyoko",
    "wip": false,
    "body_md": "## esa.io用のエディタを作りました\r\n\r\n![SS 2015-10-07 1.12.16.png (191.4 kB)](https://img.esa.io/uploads/production/attachments/1700/2015/10/07/4496/23f95200-391d-4b84-8f90-e7a0d5a97980.png)\r\n\r\n## [nakajmg/hiyoko](https://github.com/nakajmg/hiyoko)\r\n\r\n## なにこれ\r\n\r\n* :pencil2: マークダウンエディタ \r\n* :apple: Mac用のアプリだよ :smile: ローカルで動かせるよ \r\n* :muscle:編集だけならオフラインで\r\n\r\n## なにができるの\r\n\r\n* 記事の〜\r\n    * 作成/更新/削除\r\n    * 同期（リモートから）\r\n\r\n## esaのAPI\r\n\r\n* https://docs.esa.io/posts/102\r\n* 💪簡単に使える\r\n* :memo: 記事\r\n  * 一覧取得・投稿・更新・削除 \r\n* コメント\r\n* :no_good: テンプレートが使えない\r\n\r\n## 画面1\r\n\r\n![SS 2015-10-07 1.24.03.png (224.3 kB)](https://img.esa.io/uploads/production/attachments/1700/2015/10/07/4496/647ae8a2-5fe1-487a-ae94-686e33ffc171.png)\r\n\r\n## 画面2\r\n\r\n![SS 2015-10-07 10.56.10.png (197.5 kB)](https://img.esa.io/uploads/production/attachments/1700/2015/10/07/4496/96aae8f7-cbfe-4d29-8ae9-5198c7064fee.png)\r\n\r\n(👆のトークンは適当。\r\n*チーム名とアクセストークンを入れてAPIとの疎通確認が必要*\r\n\r\n## 画面3\r\n\r\n![SS 2015-10-07 11.03.33.png (186.0 kB)](https://img.esa.io/uploads/production/attachments/1700/2015/10/07/4496/9c238699-5287-4e60-a802-8a4c80124072.png)\r\n\r\n通知も出せるよ。\r\n\r\n## デモ\r\n\r\n## 使ったもの\r\n\r\n* Electron\r\n* Vue.js\r\n* PouchDB\r\n\r\n## Markdownまわり\r\n\r\n* marked\r\n* highlight.js\r\n* emosa\r\n* <del>CodeMirror</del>\r\n\r\n## 操作してるやつ\r\n\r\n![2015-10-07 01_43_19.gif (113.9 kB)](https://img.esa.io/uploads/production/attachments/1700/2015/10/07/4496/1c1fd19c-0b0e-4c53-a9ab-f3d241a811ff.gif)\r\n\r\n## 学び\r\n\r\n* :heart_eyes:  Electronで簡単にアプれる\r\n* :relaxed: サッと作るにはVue.jsらくちん\r\n* :muscle: dialog要素が強くて便利\r\n* :sob: ローカルとリモートでデータが存在してると色々大変\r\n\r\n## 今後の展開\r\n\r\n* リリース？\r\n* esaの入力エリアと同じようにする\r\n* スライドショーができるように\r\n\r\n## APIがもっと充実したらesa用エディタできそう :bird: \r\n\r\n## \\(\\\\( ⁰⊖⁰)/) < end",
    "body_html": "<h2 id=\"0-1-0\" name=\"0-1-0\">\n<a class=\"anchor\" href=\"#0-1-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"esa.io用のエディタを作りました\"> &gt; esa.io用のエディタを作りました</span></a>esa.io用のエディタを作りました</h2>\n\n<p><a href=\"https://img.esa.io/uploads/production/attachments/1700/2015/10/07/4496/23f95200-391d-4b84-8f90-e7a0d5a97980.png\" target=\"_blank\"><img src=\"https://img.esa.io/uploads/production/attachments/1700/2015/10/07/4496/23f95200-391d-4b84-8f90-e7a0d5a97980.png\" alt=\"SS 2015-10-07 1.12.16.png (191.4 kB)\"></a></p>\n\n<h2 id=\"0-2-0\" name=\"0-2-0\">\n<a class=\"anchor\" href=\"#0-2-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"nakajmg/hiyoko\"> &gt; nakajmg/hiyoko</span></a><a target=\"_blank\" href=\"https://github.com/nakajmg/hiyoko\">nakajmg/hiyoko</a>\n</h2>\n\n<h2 id=\"0-3-0\" name=\"0-3-0\">\n<a class=\"anchor\" href=\"#0-3-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"なにこれ\"> &gt; なにこれ</span></a>なにこれ</h2>\n\n<ul>\n<li>:pencil2: マークダウンエディタ </li>\n<li>:apple: Mac用のアプリだよ :smile: ローカルで動かせるよ </li>\n<li>:muscle:編集だけならオフラインで</li>\n</ul>\n\n<h2 id=\"0-4-0\" name=\"0-4-0\">\n<a class=\"anchor\" href=\"#0-4-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"なにができるの\"> &gt; なにができるの</span></a>なにができるの</h2>\n\n<ul>\n<li>記事の〜\n\n<ul>\n<li>作成/更新/削除</li>\n<li>同期（リモートから）</li>\n</ul>\n</li>\n</ul>\n\n<h2 id=\"0-5-0\" name=\"0-5-0\">\n<a class=\"anchor\" href=\"#0-5-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"esaのAPI\"> &gt; esaのAPI</span></a>esaのAPI</h2>\n\n<ul>\n<li><a target=\"_blank\" href=\"https://docs.esa.io/posts/102\">https://docs.esa.io/posts/102</a></li>\n<li>💪簡単に使える</li>\n<li>:memo: 記事\n\n<ul>\n<li>一覧取得・投稿・更新・削除 </li>\n</ul>\n</li>\n<li>コメント</li>\n<li>:no_good: テンプレートが使えない</li>\n</ul>\n\n<h2 id=\"0-6-0\" name=\"0-6-0\">\n<a class=\"anchor\" href=\"#0-6-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"画面1\"> &gt; 画面1</span></a>画面1</h2>\n\n<p><a href=\"https://img.esa.io/uploads/production/attachments/1700/2015/10/07/4496/647ae8a2-5fe1-487a-ae94-686e33ffc171.png\" target=\"_blank\"><img src=\"https://img.esa.io/uploads/production/attachments/1700/2015/10/07/4496/647ae8a2-5fe1-487a-ae94-686e33ffc171.png\" alt=\"SS 2015-10-07 1.24.03.png (224.3 kB)\"></a></p>\n\n<h2 id=\"0-7-0\" name=\"0-7-0\">\n<a class=\"anchor\" href=\"#0-7-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"画面2\"> &gt; 画面2</span></a>画面2</h2>\n\n<p><a href=\"https://img.esa.io/uploads/production/attachments/1700/2015/10/07/4496/96aae8f7-cbfe-4d29-8ae9-5198c7064fee.png\" target=\"_blank\"><img src=\"https://img.esa.io/uploads/production/attachments/1700/2015/10/07/4496/96aae8f7-cbfe-4d29-8ae9-5198c7064fee.png\" alt=\"SS 2015-10-07 10.56.10.png (197.5 kB)\"></a></p>\n\n<p>(👆のトークンは適当。<br>\n<em>チーム名とアクセストークンを入れてAPIとの疎通確認が必要</em></p>\n\n<h2 id=\"0-8-0\" name=\"0-8-0\">\n<a class=\"anchor\" href=\"#0-8-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"画面3\"> &gt; 画面3</span></a>画面3</h2>\n\n<p><a href=\"https://img.esa.io/uploads/production/attachments/1700/2015/10/07/4496/9c238699-5287-4e60-a802-8a4c80124072.png\" target=\"_blank\"><img src=\"https://img.esa.io/uploads/production/attachments/1700/2015/10/07/4496/9c238699-5287-4e60-a802-8a4c80124072.png\" alt=\"SS 2015-10-07 11.03.33.png (186.0 kB)\"></a></p>\n\n<p>通知も出せるよ。</p>\n\n<h2 id=\"0-9-0\" name=\"0-9-0\">\n<a class=\"anchor\" href=\"#0-9-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"デモ\"> &gt; デモ</span></a>デモ</h2>\n\n<h2 id=\"0-10-0\" name=\"0-10-0\">\n<a class=\"anchor\" href=\"#0-10-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"使ったもの\"> &gt; 使ったもの</span></a>使ったもの</h2>\n\n<ul>\n<li>Electron</li>\n<li>Vue.js</li>\n<li>PouchDB</li>\n</ul>\n\n<h2 id=\"0-11-0\" name=\"0-11-0\">\n<a class=\"anchor\" href=\"#0-11-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"Markdownまわり\"> &gt; Markdownまわり</span></a>Markdownまわり</h2>\n\n<ul>\n<li>marked</li>\n<li>highlight.js</li>\n<li>emosa</li>\n<li><del>CodeMirror</del></li>\n</ul>\n\n<h2 id=\"0-12-0\" name=\"0-12-0\">\n<a class=\"anchor\" href=\"#0-12-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"操作してるやつ\"> &gt; 操作してるやつ</span></a>操作してるやつ</h2>\n\n<p><a href=\"https://img.esa.io/uploads/production/attachments/1700/2015/10/07/4496/1c1fd19c-0b0e-4c53-a9ab-f3d241a811ff.gif\" target=\"_blank\"><img src=\"https://img.esa.io/uploads/production/attachments/1700/2015/10/07/4496/1c1fd19c-0b0e-4c53-a9ab-f3d241a811ff.gif\" alt=\"2015-10-07 01_43_19.gif (113.9 kB)\"></a></p>\n\n<h2 id=\"0-13-0\" name=\"0-13-0\">\n<a class=\"anchor\" href=\"#0-13-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"学び\"> &gt; 学び</span></a>学び</h2>\n\n<ul>\n<li>:heart_eyes:  Electronで簡単にアプれる</li>\n<li>:relaxed: サッと作るにはVue.jsらくちん</li>\n<li>:muscle: dialog要素が強くて便利</li>\n<li>:sob: ローカルとリモートでデータが存在してると色々大変</li>\n</ul>\n\n<h2 id=\"0-14-0\" name=\"0-14-0\">\n<a class=\"anchor\" href=\"#0-14-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"今後の展開\"> &gt; 今後の展開</span></a>今後の展開</h2>\n\n<ul>\n<li>リリース？</li>\n<li>esaの入力エリアと同じようにする</li>\n<li>スライドショーができるように</li>\n</ul>\n\n<h2 id=\"0-15-0\" name=\"0-15-0\">\n<a class=\"anchor\" href=\"#0-15-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"APIがもっと充実したらesa用エディタできそう __colon__bird__colon__\"> &gt; APIがもっと充実したらesa用エディタできそう __colon__bird__colon__</span></a>APIがもっと充実したらesa用エディタできそう :bird:</h2>\n\n<h2 id=\"0-16-0\" name=\"0-16-0\">\n<a class=\"anchor\" href=\"#0-16-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"(\\( ⁰⊖⁰)/) &lt; end\"> &gt; (\\( ⁰⊖⁰)/) &lt; end</span></a>(\\( ⁰⊖⁰)/) &lt; end</h2>\n",
    "created_at": "2015-10-07T01:13:10+09:00",
    "message": "Update post.",
    "kind": "stock",
    "comments_count": 0,
    "tasks_count": 0,
    "done_tasks_count": 0,
    "url": "https://pxgrid.esa.io/posts/756",
    "updated_at": "2015-10-07T12:47:25+09:00",
    "tags": [],
    "category": null,
    "revision_number": 9,
    "created_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "updated_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "stargazers_count": 0,
    "watchers_count": 1,
    "star": false,
    "watch": true,
    "_uid": 1446574748005,
    "_modified_at": ""
  },
  {
    "number": 712,
    "name": "合宿前のやつ",
    "full_name": "社内情報/開発合宿/2015/合宿前のやつ",
    "wip": false,
    "body_md": "## りい\r\n- 個人用の音楽視聴サービス\r\n\r\n## よもつ\r\n- 水のシェーダを作りたい\r\n- MMOのチャットの機能\r\n  - Socket.ioが動くサーバほしい\r\n    - http://qiita.com/KENJU/items/9ae9b353870277f4adf5\r\n    - Firebase\r\n      - https://www.infoscoop.org/blogjp/2015/01/24/realtime-app-firebase/\r\n    - [Azure](https://azure.microsoft.com/ja-jp/)\r\n- 今年のサンタさん\r\n- SVG自体を作る（Skia）\r\n\r\n## きょうすけ\r\n\r\n- ポイントの見積もりする何か\r\n  - GitHubと連携したい（Issue作ったり）\r\n  - Firebaseとか\r\n  - 複数人でリモート見積もり的な\r\n- お客さん用GitHubのIssue Viewer\r\n  - 特定のラベルが付いたIssueだけが見れる、または作成\r\n  - お客さんの認証どうしよ\r\n- CodeGridのadmin\r\n\r\n## ずどさん\r\n\r\n- GoogleカレンダーのAPIを使ってメモ読んだり書いたりする\r\n  - Googleカレンダーに日報とか書いてるが、いろいろ使いづらいので、UI作る\r\n  - 画像とか載せたい\r\n  - マークダウンで書いたり\r\n  - アプリ化してみるとか（ガワネイティブ）\r\n- 猫の健康管理カレンダーがあるので、可視化する\r\n\r\n## じまぐ\r\n\r\n- aigisのドキュメント書いて、ウェブサイト公開する\r\n- esaに投稿できるマークダウンエディタつくる（kobito.app的な）\r\n- 簡単に使えるメモアプリ的な何か（Firebase使ってみたい的な）\r\n- 3Dとか（普段やらないし）\r\n  - ゲームのキャラのモデルを拾ってきて、ウォークスルー的な\r\n\r\n## げこたん\r\n\r\n- Amazonのスクレイピングするやつ\r\n  - 新刊\r\n\r\n## 魔王\r\n\r\n- 外注との見積もりやり取り用の何か\r\n    - とりあえず実用できるものを作りたい\r\n\r\n## 編集チーム（そとむら、まるやま）\r\n\r\n- CodeGridの原稿の表記チェック用辞書を作成する\r\n- https://gist.github.com/inao/f55e8232e150aee918b9\r\n- https://github.com/pxgrid/codegrid-draft/tree/topic/textlint/dic\r\n\r\n## 誰か\r\n\r\n- 子供がキーボード叩くの喜ぶので、そういう何か\r\n  - 物理キー押すような奴\r\n- MacにChatworkの通知ほしい\r\n- クローズドなコミュニティがほしい\r\n",
    "body_html": "<h2 id=\"0-1-0\" name=\"0-1-0\">\n<a class=\"anchor\" href=\"#0-1-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"りい\"> &gt; りい</span></a>りい</h2>\n\n<ul>\n<li>個人用の音楽視聴サービス</li>\n</ul>\n\n<h2 id=\"0-2-0\" name=\"0-2-0\">\n<a class=\"anchor\" href=\"#0-2-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"よもつ\"> &gt; よもつ</span></a>よもつ</h2>\n\n<ul>\n<li>水のシェーダを作りたい</li>\n<li>MMOのチャットの機能\n\n<ul>\n<li>Socket.ioが動くサーバほしい</li>\n<li><a target=\"_blank\" href=\"http://qiita.com/KENJU/items/9ae9b353870277f4adf5\">http://qiita.com/KENJU/items/9ae9b353870277f4adf5</a></li>\n<li>Firebase\n\n<ul>\n<li><a target=\"_blank\" href=\"https://www.infoscoop.org/blogjp/2015/01/24/realtime-app-firebase/\">https://www.infoscoop.org/blogjp/2015/01/24/realtime-app-firebase/</a></li>\n</ul>\n</li>\n<li><a target=\"_blank\" href=\"https://azure.microsoft.com/ja-jp/\">Azure</a></li>\n</ul>\n</li>\n<li>今年のサンタさん</li>\n<li>SVG自体を作る（Skia）</li>\n</ul>\n\n<h2 id=\"0-3-0\" name=\"0-3-0\">\n<a class=\"anchor\" href=\"#0-3-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"きょうすけ\"> &gt; きょうすけ</span></a>きょうすけ</h2>\n\n<ul>\n<li>ポイントの見積もりする何か\n\n<ul>\n<li>GitHubと連携したい（Issue作ったり）</li>\n<li>Firebaseとか</li>\n<li>複数人でリモート見積もり的な</li>\n</ul>\n</li>\n<li>お客さん用GitHubのIssue Viewer\n\n<ul>\n<li>特定のラベルが付いたIssueだけが見れる、または作成</li>\n<li>お客さんの認証どうしよ</li>\n</ul>\n</li>\n<li>CodeGridのadmin</li>\n</ul>\n\n<h2 id=\"0-4-0\" name=\"0-4-0\">\n<a class=\"anchor\" href=\"#0-4-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"ずどさん\"> &gt; ずどさん</span></a>ずどさん</h2>\n\n<ul>\n<li>GoogleカレンダーのAPIを使ってメモ読んだり書いたりする\n\n<ul>\n<li>Googleカレンダーに日報とか書いてるが、いろいろ使いづらいので、UI作る</li>\n<li>画像とか載せたい</li>\n<li>マークダウンで書いたり</li>\n<li>アプリ化してみるとか（ガワネイティブ）</li>\n</ul>\n</li>\n<li>猫の健康管理カレンダーがあるので、可視化する</li>\n</ul>\n\n<h2 id=\"0-5-0\" name=\"0-5-0\">\n<a class=\"anchor\" href=\"#0-5-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"じまぐ\"> &gt; じまぐ</span></a>じまぐ</h2>\n\n<ul>\n<li>aigisのドキュメント書いて、ウェブサイト公開する</li>\n<li>esaに投稿できるマークダウンエディタつくる（kobito.app的な）</li>\n<li>簡単に使えるメモアプリ的な何か（Firebase使ってみたい的な）</li>\n<li>3Dとか（普段やらないし）\n\n<ul>\n<li>ゲームのキャラのモデルを拾ってきて、ウォークスルー的な</li>\n</ul>\n</li>\n</ul>\n\n<h2 id=\"0-6-0\" name=\"0-6-0\">\n<a class=\"anchor\" href=\"#0-6-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"げこたん\"> &gt; げこたん</span></a>げこたん</h2>\n\n<ul>\n<li>Amazonのスクレイピングするやつ\n\n<ul>\n<li>新刊</li>\n</ul>\n</li>\n</ul>\n\n<h2 id=\"0-7-0\" name=\"0-7-0\">\n<a class=\"anchor\" href=\"#0-7-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"魔王\"> &gt; 魔王</span></a>魔王</h2>\n\n<ul>\n<li>外注との見積もりやり取り用の何か\n\n<ul>\n<li>とりあえず実用できるものを作りたい</li>\n</ul>\n</li>\n</ul>\n\n<h2 id=\"0-8-0\" name=\"0-8-0\">\n<a class=\"anchor\" href=\"#0-8-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"編集チーム（そとむら、まるやま）\"> &gt; 編集チーム（そとむら、まるやま）</span></a>編集チーム（そとむら、まるやま）</h2>\n\n<ul>\n<li>CodeGridの原稿の表記チェック用辞書を作成する</li>\n<li><a target=\"_blank\" href=\"https://gist.github.com/inao/f55e8232e150aee918b9\">https://gist.github.com/inao/f55e8232e150aee918b9</a></li>\n<li><a target=\"_blank\" href=\"https://github.com/pxgrid/codegrid-draft/tree/topic/textlint/dic\">https://github.com/pxgrid/codegrid-draft/tree/topic/textlint/dic</a></li>\n</ul>\n\n<h2 id=\"0-9-0\" name=\"0-9-0\">\n<a class=\"anchor\" href=\"#0-9-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"誰か\"> &gt; 誰か</span></a>誰か</h2>\n\n<ul>\n<li>子供がキーボード叩くの喜ぶので、そういう何か\n\n<ul>\n<li>物理キー押すような奴</li>\n</ul>\n</li>\n<li>MacにChatworkの通知ほしい</li>\n<li>クローズドなコミュニティがほしい</li>\n</ul>\n",
    "created_at": "2015-09-30T11:00:18+09:00",
    "message": "Update post.",
    "kind": "stock",
    "comments_count": 0,
    "tasks_count": 0,
    "done_tasks_count": 0,
    "url": "https://pxgrid.esa.io/posts/712",
    "updated_at": "2015-09-30T13:10:45+09:00",
    "tags": [],
    "category": "社内情報/開発合宿/2015",
    "revision_number": 8,
    "created_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "updated_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "stargazers_count": 0,
    "watchers_count": 2,
    "star": false,
    "watch": true,
    "_uid": 1446574748007,
    "_modified_at": ""
  },
  {
    "number": 667,
    "name": "02",
    "full_name": "社内勉強会/2015/09/02",
    "wip": false,
    "body_md": "## @cyokodog \r\n* https://github.com/hokaccha/apimock-middleware\r\n* Kで使ってるほかちゃん作\r\n* モックサーバ\r\n* ソース変えたらHTMLも返せた\r\n* 気軽に使える\r\n\r\n## @geckotang\r\n* https://pxgrid.esa.io/posts/664 \r\n* 合宿について\r\n* 作るものきめてから行こう\r\n* 仕事は極力しない\r\n    * 仕事はいつでもできる\r\n* アイデアソンとか\r\n\r\n## @soto3 \r\n* 文は短く\r\n* 言い切る\r\n* 短く言う\r\n    * 計算することができます\r\n    * 計算できます\r\n* 反対にならない\"が\"は使わない\r\n* 言い切る\r\n    * 含みを持たせる言い方は気をつける\r\n\r\n## @cancer \r\n* https://pxgrid.esa.io/posts/666\r\n* Angular + Flux\r\n* Fat Controllerはいやだ\r\n* ヨサソウ\r\n\r\n## @kyosuke \r\n* https://pxgrid.esa.io/posts/665\r\n* 組織構造\r\n* ヒエラルキー/ホラクラシー\r\n* ホラクラシーに近い\r\n* 4チームある\r\n    * R\r\n    * CMS\r\n    * K\r\n    * CodeGrid編集\r\n* 短期案件・研究チームをつくる\r\n\r\n## @obara \r\n* イラレでJSドリル解いた\r\n* テキストオブジェクトからテキストオブジェクトをつくるよ\r\n* JSXにJSONオブジェクトがない\r\n    * JSON.parseが使えない\r\n    * JSON.parseできるライブラリのコードをもってきて貼り付けた\r\n\r\n## @tacamy \r\n* https://pxgrid.esa.io/posts/668\r\n* Node学園祭のサイト\r\n* Polymer Starter Kit\r\n    * FullとLightがあってFull使った\r\n* paper element\r\n    *  いっぱい用意されてて便利\r\n* 自分でエレメント作れる\r\n* Web Componentsが拡張されてる\r\n    * repeatとかできる\r\n    * よいよ\r\n\r\n## @ykhs \r\n* Redux\r\n* Flux\r\n    * 一方通行\r\n* Elem\r\n    * 1ソース\r\n    * 関数型\r\n* Redux\r\n    * Storeは1つ\r\n    * Propsバケツリレーが避けれる\r\n* Action\r\n* Store\r\n* Reducer\r\n* MIddleware\r\n\r\n## @5509 \r\n* プロジェクトのやりとり\r\n* 利用サービス多い\r\n    * youRoom\r\n    * skype\r\n    * pivotal\r\n    * いろいろ…\r\n* 使いにくいのおおい\r\n* 減らすことに\r\n* skypeとyouRoomからchatworkに…\r\n* 社内管理をesa.ioに…\r\n* 増えてるやん\r\n* chatwork最高に使いづらい\r\n    * メンションおえない\r\n    * ブラウザしかない\r\n* GitHubとPivotalは期限を管理するには向いてない\r\n* なんかいいのないの？？？\r\n\r\n## @oosugi\r\n* 返事はちゃんとする\r\n* 相手の質問に答えてから自分の言いたいことを言う\r\n* 頭の中で答えたつもりで返事しない\r\n\r\n## 次回\r\n\r\nA",
    "body_html": "<h2 id=\"0-1-0\" name=\"0-1-0\">\n<a class=\"anchor\" href=\"#0-1-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"__at__cyokodog\"> &gt; __at__cyokodog</span></a><a href=\"/users/cyokodog\" class=\"user-mention\" title=\"cyokodog\" target=\"_blank\">@cyokodog</a>\n</h2>\n\n<ul>\n<li><a target=\"_blank\" href=\"https://github.com/hokaccha/apimock-middleware\">https://github.com/hokaccha/apimock-middleware</a></li>\n<li>Kで使ってるほかちゃん作</li>\n<li>モックサーバ</li>\n<li>ソース変えたらHTMLも返せた</li>\n<li>気軽に使える</li>\n</ul>\n\n<h2 id=\"0-2-0\" name=\"0-2-0\">\n<a class=\"anchor\" href=\"#0-2-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"__at__geckotang\"> &gt; __at__geckotang</span></a><a href=\"/users/geckotang\" class=\"user-mention\" title=\"geckotang\" target=\"_blank\">@geckotang</a>\n</h2>\n\n<ul>\n<li>\n<a target=\"_blank\" href=\"https://pxgrid.esa.io/posts/664\">https://pxgrid.esa.io/posts/664</a> </li>\n<li>合宿について</li>\n<li>作るものきめてから行こう</li>\n<li>仕事は極力しない\n\n<ul>\n<li>仕事はいつでもできる</li>\n</ul>\n</li>\n<li>アイデアソンとか</li>\n</ul>\n\n<h2 id=\"0-3-0\" name=\"0-3-0\">\n<a class=\"anchor\" href=\"#0-3-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"__at__soto3\"> &gt; __at__soto3</span></a><a href=\"/users/soto3\" class=\"user-mention\" title=\"soto3\" target=\"_blank\">@soto3</a>\n</h2>\n\n<ul>\n<li>文は短く</li>\n<li>言い切る</li>\n<li>短く言う\n\n<ul>\n<li>計算することができます</li>\n<li>計算できます</li>\n</ul>\n</li>\n<li>反対にならない\"が\"は使わない</li>\n<li>言い切る\n\n<ul>\n<li>含みを持たせる言い方は気をつける</li>\n</ul>\n</li>\n</ul>\n\n<h2 id=\"0-4-0\" name=\"0-4-0\">\n<a class=\"anchor\" href=\"#0-4-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"__at__cancer\"> &gt; __at__cancer</span></a><a href=\"/users/cancer\" class=\"user-mention\" title=\"cancer\" target=\"_blank\">@cancer</a>\n</h2>\n\n<ul>\n<li><a target=\"_blank\" href=\"https://pxgrid.esa.io/posts/666\">https://pxgrid.esa.io/posts/666</a></li>\n<li>Angular + Flux</li>\n<li>Fat Controllerはいやだ</li>\n<li>ヨサソウ</li>\n</ul>\n\n<h2 id=\"0-5-0\" name=\"0-5-0\">\n<a class=\"anchor\" href=\"#0-5-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"__at__kyosuke\"> &gt; __at__kyosuke</span></a><a href=\"/users/kyosuke\" class=\"user-mention\" title=\"kyosuke\" target=\"_blank\">@kyosuke</a>\n</h2>\n\n<ul>\n<li><a target=\"_blank\" href=\"https://pxgrid.esa.io/posts/665\">https://pxgrid.esa.io/posts/665</a></li>\n<li>組織構造</li>\n<li>ヒエラルキー/ホラクラシー</li>\n<li>ホラクラシーに近い</li>\n<li>4チームある\n\n<ul>\n<li>R</li>\n<li>CMS</li>\n<li>K</li>\n<li>CodeGrid編集</li>\n</ul>\n</li>\n<li>短期案件・研究チームをつくる</li>\n</ul>\n\n<h2 id=\"0-6-0\" name=\"0-6-0\">\n<a class=\"anchor\" href=\"#0-6-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"__at__obara\"> &gt; __at__obara</span></a><a href=\"/users/obara\" class=\"user-mention\" title=\"obara\" target=\"_blank\">@obara</a>\n</h2>\n\n<ul>\n<li>イラレでJSドリル解いた</li>\n<li>テキストオブジェクトからテキストオブジェクトをつくるよ</li>\n<li>JSXにJSONオブジェクトがない\n\n<ul>\n<li>JSON.parseが使えない</li>\n<li>JSON.parseできるライブラリのコードをもってきて貼り付けた</li>\n</ul>\n</li>\n</ul>\n\n<h2 id=\"0-7-0\" name=\"0-7-0\">\n<a class=\"anchor\" href=\"#0-7-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"__at__tacamy\"> &gt; __at__tacamy</span></a><a href=\"/users/tacamy\" class=\"user-mention\" title=\"tacamy\" target=\"_blank\">@tacamy</a>\n</h2>\n\n<ul>\n<li><a target=\"_blank\" href=\"https://pxgrid.esa.io/posts/668\">https://pxgrid.esa.io/posts/668</a></li>\n<li>Node学園祭のサイト</li>\n<li>Polymer Starter Kit\n\n<ul>\n<li>FullとLightがあってFull使った</li>\n</ul>\n</li>\n<li>paper element\n\n<ul>\n<li> いっぱい用意されてて便利</li>\n</ul>\n</li>\n<li>自分でエレメント作れる</li>\n<li>Web Componentsが拡張されてる\n\n<ul>\n<li>repeatとかできる</li>\n<li>よいよ</li>\n</ul>\n</li>\n</ul>\n\n<h2 id=\"0-8-0\" name=\"0-8-0\">\n<a class=\"anchor\" href=\"#0-8-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"__at__ykhs\"> &gt; __at__ykhs</span></a><a href=\"/users/ykhs\" class=\"user-mention\" title=\"ykhs\" target=\"_blank\">@ykhs</a>\n</h2>\n\n<ul>\n<li>Redux</li>\n<li>Flux\n\n<ul>\n<li>一方通行</li>\n</ul>\n</li>\n<li>Elem\n\n<ul>\n<li>1ソース</li>\n<li>関数型</li>\n</ul>\n</li>\n<li>Redux\n\n<ul>\n<li>Storeは1つ</li>\n<li>Propsバケツリレーが避けれる</li>\n</ul>\n</li>\n<li>Action</li>\n<li>Store</li>\n<li>Reducer</li>\n<li>MIddleware</li>\n</ul>\n\n<h2 id=\"0-9-0\" name=\"0-9-0\">\n<a class=\"anchor\" href=\"#0-9-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"__at__5509\"> &gt; __at__5509</span></a><a href=\"/users/5509\" class=\"user-mention\" title=\"5509\" target=\"_blank\">@5509</a>\n</h2>\n\n<ul>\n<li>プロジェクトのやりとり</li>\n<li>利用サービス多い\n\n<ul>\n<li>youRoom</li>\n<li>skype</li>\n<li>pivotal</li>\n<li>いろいろ…</li>\n</ul>\n</li>\n<li>使いにくいのおおい</li>\n<li>減らすことに</li>\n<li>skypeとyouRoomからchatworkに…</li>\n<li>社内管理をesa.ioに…</li>\n<li>増えてるやん</li>\n<li>chatwork最高に使いづらい\n\n<ul>\n<li>メンションおえない</li>\n<li>ブラウザしかない</li>\n</ul>\n</li>\n<li>GitHubとPivotalは期限を管理するには向いてない</li>\n<li>なんかいいのないの？？？</li>\n</ul>\n\n<h2 id=\"0-10-0\" name=\"0-10-0\">\n<a class=\"anchor\" href=\"#0-10-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"__at__oosugi\"> &gt; __at__oosugi</span></a><a href=\"/users/oosugi\" class=\"user-mention\" title=\"oosugi\" target=\"_blank\">@oosugi</a>\n</h2>\n\n<ul>\n<li>返事はちゃんとする</li>\n<li>相手の質問に答えてから自分の言いたいことを言う</li>\n<li>頭の中で答えたつもりで返事しない</li>\n</ul>\n\n<h2 id=\"0-11-0\" name=\"0-11-0\">\n<a class=\"anchor\" href=\"#0-11-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"次回\"> &gt; 次回</span></a>次回</h2>\n\n<p>A</p>\n",
    "created_at": "2015-09-02T11:01:14+09:00",
    "message": "Update post.",
    "kind": "stock",
    "comments_count": 0,
    "tasks_count": 0,
    "done_tasks_count": 0,
    "url": "https://pxgrid.esa.io/posts/667",
    "updated_at": "2015-09-14T18:43:53+09:00",
    "tags": [],
    "category": "社内勉強会/2015/09",
    "revision_number": 13,
    "created_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "updated_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "stargazers_count": 0,
    "watchers_count": 1,
    "star": false,
    "watch": true,
    "_uid": 1446574748009,
    "_modified_at": ""
  },
  {
    "number": 675,
    "name": "nakajmg",
    "full_name": "CodeGrid/ブックレビューアンケート/nakajmg",
    "wip": false,
    "body_md": "## 1 パーフェクトJavaScript\r\n\r\n1. パーフェクトJavaScript\r\n1. JavaScript\r\n1. JavaScriptの本質、言語仕様を理解したい人、中級になりたい人\r\n1. JavaScriptの言語仕様についてとても詳しく書かれた本。JavaScriptの書籍といえばオライリー社のサイ本が有名だが、本書はより仕様の解説に力を割いていて、かつ、サイ本よりわかりやすく書かれていると感じた。jQueryを使って色々とできるようになった人、jQueryなしでJavaScriptがある程度書けるようになった人は、本書を読んでJavaScriptをより深く理解できれば、よりよいコードが書けるようになると思います。\r\n\r\n## 2 開発者のためのChromeガイドブック\r\n\r\n1. 開発者のためのChromeガイドブック\r\n1. JavaScript（デバッグ）\r\n1. ChromeのDevToolsの基礎から活用までを知りたい人、効率的なデバッグ方法を知りたい人\r\n1. Chromeのデベロッパーツールの使い方をこれでもか、といった量で解説されている。`console.log`やブレークポイントは知っている、というレベルの人であれば本書を読めばすぐに開発効率を高めることができると思います。発刊から少し時間が経っていますが、デベロッパーツールの基本的な使い方について、日本語で体系的にまとまった解説をしている本は珍しいと思うのでオススメです。\r\n\r\n## 3 ハイパフォーマンスブラウザネットワーキング\r\n\r\n1. ハイパフォーマンスブラウザネットワーキング\r\n1. ブラウザ、JavaScript、ネットワーク\r\n1. ブラウザの中で何が起こっているのか知りたい人、または知らない人\r\n1. ネットワークの仕組みからフロントエンドでの最適化の取り組みまで、幅広いレイヤーのパフォーマンスについて書かれている。本書を読めばサーバから配信されるページが、どういった経路を経て、どういった仕組みでブラウザでレンダリングされるかを知ることができる。本書が扱っているのは小手先のテクニックではなく、普遍的なネットワーキングの仕組みを理解した上で、パフォーマンスを向上させる知識です。",
    "body_html": "<h2 id=\"0-1-0\" name=\"0-1-0\">\n<a class=\"anchor\" href=\"#0-1-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"1 パーフェクトJavaScript\"> &gt; 1 パーフェクトJavaScript</span></a>1 パーフェクトJavaScript</h2>\n\n<ol>\n<li>パーフェクトJavaScript</li>\n<li>JavaScript</li>\n<li>JavaScriptの本質、言語仕様を理解したい人、中級になりたい人</li>\n<li>JavaScriptの言語仕様についてとても詳しく書かれた本。JavaScriptの書籍といえばオライリー社のサイ本が有名だが、本書はより仕様の解説に力を割いていて、かつ、サイ本よりわかりやすく書かれていると感じた。jQueryを使って色々とできるようになった人、jQueryなしでJavaScriptがある程度書けるようになった人は、本書を読んでJavaScriptをより深く理解できれば、よりよいコードが書けるようになると思います。</li>\n</ol>\n\n<h2 id=\"0-2-0\" name=\"0-2-0\">\n<a class=\"anchor\" href=\"#0-2-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"2 開発者のためのChromeガイドブック\"> &gt; 2 開発者のためのChromeガイドブック</span></a>2 開発者のためのChromeガイドブック</h2>\n\n<ol>\n<li>開発者のためのChromeガイドブック</li>\n<li>JavaScript（デバッグ）</li>\n<li>ChromeのDevToolsの基礎から活用までを知りたい人、効率的なデバッグ方法を知りたい人</li>\n<li>Chromeのデベロッパーツールの使い方をこれでもか、といった量で解説されている。<code>console.log</code>やブレークポイントは知っている、というレベルの人であれば本書を読めばすぐに開発効率を高めることができると思います。発刊から少し時間が経っていますが、デベロッパーツールの基本的な使い方について、日本語で体系的にまとまった解説をしている本は珍しいと思うのでオススメです。</li>\n</ol>\n\n<h2 id=\"0-3-0\" name=\"0-3-0\">\n<a class=\"anchor\" href=\"#0-3-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"3 ハイパフォーマンスブラウザネットワーキング\"> &gt; 3 ハイパフォーマンスブラウザネットワーキング</span></a>3 ハイパフォーマンスブラウザネットワーキング</h2>\n\n<ol>\n<li>ハイパフォーマンスブラウザネットワーキング</li>\n<li>ブラウザ、JavaScript、ネットワーク</li>\n<li>ブラウザの中で何が起こっているのか知りたい人、または知らない人</li>\n<li>ネットワークの仕組みからフロントエンドでの最適化の取り組みまで、幅広いレイヤーのパフォーマンスについて書かれている。本書を読めばサーバから配信されるページが、どういった経路を経て、どういった仕組みでブラウザでレンダリングされるかを知ることができる。本書が扱っているのは小手先のテクニックではなく、普遍的なネットワーキングの仕組みを理解した上で、パフォーマンスを向上させる知識です。</li>\n</ol>\n",
    "created_at": "2015-09-03T00:00:24+09:00",
    "message": "レビュー書いた",
    "kind": "stock",
    "comments_count": 0,
    "tasks_count": 0,
    "done_tasks_count": 0,
    "url": "https://pxgrid.esa.io/posts/675",
    "updated_at": "2015-09-07T21:57:37+09:00",
    "tags": [],
    "category": "CodeGrid/ブックレビューアンケート",
    "revision_number": 4,
    "created_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "updated_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "stargazers_count": 1,
    "watchers_count": 1,
    "star": false,
    "watch": true,
    "_uid": 1446574748013,
    "_modified_at": ""
  },
  {
    "number": 677,
    "name": "README_eng",
    "full_name": "OSS/Aigis/README_eng",
    "wip": true,
    "body_md": "# aigis\r\n\r\nHere's an example aigis comment.\r\n\r\n<pre>\r\n/*\r\n---\r\nname: module_name\r\ncategory:\r\n    - button/standard\r\n    - base\r\n---\r\n\r\n## This is a standard button module\r\n\r\n* You can write markdown.\r\n\r\n```html\r\n<a class=\"btn\">\r\n  This is a Button\r\n</a>\r\n```\r\n\r\n.btn {\r\n  color: white;\r\n  background-color: tomato;\r\n  text-align: center;\r\n  width: 200px;\r\n  line-height: 40px;\r\n  display: inline-block;\r\n}\r\n\r\n*/\r\n</pre>\r\n\r\n## Installation\r\n\r\n```sh\r\nnpm install -g node-aigis\r\n```\r\n\r\n## config\r\n\r\n```yaml\r\nname: StyleGuide Name\r\nsource: \r\n    - ./path/to/source/foder\r\n    - /path/to/source/file.css\r\ndest: ./path/to/destination\r\ndependencies:\r\n    - ./build\r\ntimestamp_format: YYYY/MM/DD HH:mm\r\ntemplate: ./path/to/template\r\nmd_class:\r\n    blockquote: [className]\r\n    heading: [className]\r\n    hr: [className]\r\n    list: [className]\r\n    paragraph: [className]\r\n    table: [className]\r\n    tablrow: [className]\r\n    tablecell: [className]\r\n    link: [className]\r\n    image: [className]\r\nhighlight: true\r\nhighlight_theme: dracula\r\ninject: \r\n    - html\r\n    - jade\r\n    - js\r\n    - coffee\r\n```",
    "body_html": "<h1 id=\"1-0-0\" name=\"1-0-0\">\n<a class=\"anchor\" href=\"#1-0-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"aigis\"> &gt; aigis</span></a>aigis</h1>\n\n<p>Here's an example aigis comment.</p>\n\n<pre>\n/*\n---\nname: module_name\ncategory:\n    - button/standard\n    - base\n---\n\n## This is a standard button module\n\n* You can write markdown.\n\n```html\n<a class=\"btn\">\n  This is a Button\n</a>\n```\n\n.btn {\n  color: white;\n  background-color: tomato;\n  text-align: center;\n  width: 200px;\n  line-height: 40px;\n  display: inline-block;\n}\n\n*/\n</pre>\n\n<h2 id=\"1-1-0\" name=\"1-1-0\">\n<a class=\"anchor\" href=\"#1-1-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"Installation\"> &gt; Installation</span></a>Installation</h2>\n<div class=\"code-block\">\n<pre class=\"highlight shell\"><code>npm install -g node-aigis\n</code></pre>\n</div>\n<h2 id=\"1-2-0\" name=\"1-2-0\">\n<a class=\"anchor\" href=\"#1-2-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"config\"> &gt; config</span></a>config</h2>\n<div class=\"code-block\">\n<pre class=\"highlight yaml\"><code><span class=\"s\">name</span><span class=\"pi\">:</span> <span class=\"s\">StyleGuide Name</span>\n<span class=\"s\">source</span><span class=\"pi\">:</span> \n    <span class=\"pi\">-</span> <span class=\"s\">./path/to/source/foder</span>\n    <span class=\"pi\">-</span> <span class=\"s\">/path/to/source/file.css</span>\n<span class=\"s\">dest</span><span class=\"pi\">:</span> <span class=\"s\">./path/to/destination</span>\n<span class=\"s\">dependencies</span><span class=\"pi\">:</span>\n    <span class=\"pi\">-</span> <span class=\"s\">./build</span>\n<span class=\"s\">timestamp_format</span><span class=\"pi\">:</span> <span class=\"s\">YYYY/MM/DD HH:mm</span>\n<span class=\"s\">template</span><span class=\"pi\">:</span> <span class=\"s\">./path/to/template</span>\n<span class=\"s\">md_class</span><span class=\"pi\">:</span>\n    <span class=\"s\">blockquote</span><span class=\"pi\">:</span> <span class=\"pi\">[</span><span class=\"nv\">className</span><span class=\"pi\">]</span>\n    <span class=\"s\">heading</span><span class=\"pi\">:</span> <span class=\"pi\">[</span><span class=\"nv\">className</span><span class=\"pi\">]</span>\n    <span class=\"s\">hr</span><span class=\"pi\">:</span> <span class=\"pi\">[</span><span class=\"nv\">className</span><span class=\"pi\">]</span>\n    <span class=\"s\">list</span><span class=\"pi\">:</span> <span class=\"pi\">[</span><span class=\"nv\">className</span><span class=\"pi\">]</span>\n    <span class=\"s\">paragraph</span><span class=\"pi\">:</span> <span class=\"pi\">[</span><span class=\"nv\">className</span><span class=\"pi\">]</span>\n    <span class=\"s\">table</span><span class=\"pi\">:</span> <span class=\"pi\">[</span><span class=\"nv\">className</span><span class=\"pi\">]</span>\n    <span class=\"s\">tablrow</span><span class=\"pi\">:</span> <span class=\"pi\">[</span><span class=\"nv\">className</span><span class=\"pi\">]</span>\n    <span class=\"s\">tablecell</span><span class=\"pi\">:</span> <span class=\"pi\">[</span><span class=\"nv\">className</span><span class=\"pi\">]</span>\n    <span class=\"s\">link</span><span class=\"pi\">:</span> <span class=\"pi\">[</span><span class=\"nv\">className</span><span class=\"pi\">]</span>\n    <span class=\"s\">image</span><span class=\"pi\">:</span> <span class=\"pi\">[</span><span class=\"nv\">className</span><span class=\"pi\">]</span>\n<span class=\"s\">highlight</span><span class=\"pi\">:</span> <span class=\"s\">true</span>\n<span class=\"s\">highlight_theme</span><span class=\"pi\">:</span> <span class=\"s\">dracula</span>\n<span class=\"s\">inject</span><span class=\"pi\">:</span> \n    <span class=\"pi\">-</span> <span class=\"s\">html</span>\n    <span class=\"pi\">-</span> <span class=\"s\">jade</span>\n    <span class=\"pi\">-</span> <span class=\"s\">js</span>\n    <span class=\"pi\">-</span> <span class=\"s\">coffee</span>\n</code></pre>\n</div>",
    "created_at": "2015-09-03T03:58:28+09:00",
    "message": "Update post.",
    "kind": "stock",
    "comments_count": 0,
    "tasks_count": 0,
    "done_tasks_count": 0,
    "url": "https://pxgrid.esa.io/posts/677",
    "updated_at": "2015-09-06T20:58:01+09:00",
    "tags": [],
    "category": "OSS/Aigis",
    "revision_number": 2,
    "created_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "updated_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "stargazers_count": 0,
    "watchers_count": 1,
    "star": false,
    "watch": true,
    "_uid": 1446574748015,
    "_modified_at": ""
  },
  {
    "number": 635,
    "name": "19",
    "full_name": "社内勉強会/2015/08/19",
    "wip": false,
    "body_md": "## nakajmg\r\n\r\n### スタイルガイドジェネレータの進捗報告\r\n- もう使えるといっても過言ではない\r\n- gulp-aigisからもう実行できる\r\n- yamlで設定かける\r\n- 出力されるHTMLがインデントきれいにした\r\n- /で階層指定するとメニューに出てくる\r\n- 色の一覧も勝手につくるようにした\r\n- オープンハウスで使いつつ不具合報告もらって改善中\r\n- handlebarsのtemplateをいじればクラス名や構造を自由に改変できる\r\n- もうすぐ公開予定\r\n\r\n## takazudo\r\n\r\n### 絶対配置時にmargin:auto;で中央寄せになるやつ\r\n\r\nhttp://takazudo.github.io/presentation-absolute-margin-auto/#/\r\n\r\n-  ` top` `right` `bottom` `left`の値を`0`にすると中央配置になる理由\r\n- `margin`を`auto`にすると、包含ブロックの幅と等しくなるように`margin`の値が計算が行われる仕様だから\r\n- 飛び出すと勝手に`margin`がマイナス値に調整される\r\n- `auto`奥が深かった\r\n\r\n補足\r\n\r\nhttp://codepen.io/anon/pen/ZGNPjL?editors=110\r\n\r\nbottomとmargin-bottomだけがautoだったらどうなるの？というやつ、\r\n\r\nhttp://www.w3.org/TR/css3-box/#abs-non-replaced-width\r\n\r\nの節の終わりあたりの6に書いてある以下で決まってました\r\n\r\n> ‘bottom’ is ‘auto’, ‘top’ and ‘height’ are not ‘auto’: The used values of ‘margin-top’ and ‘margin-bottom’ are their computed values, except that any ‘auto’ gives a used value of 0. The constraint gives the used value for ‘bottom’.\r\n\r\nbottomがautoでtopとheightがautoじゃない場合、margin-topとmargin-bottomには指定された値が示す長さ（computed value）になる。もしautoが指定されていた場合は0になる。そんで、包含ブロックから他の長さ引いたぶんはbottomに割り当てられる。\r\n\r\nつまり、margin-bottomが0になり、bottomが余った長さ全て（=160px）になるっぽいです\r\n\r\n## leader22\r\n\r\n### MQTT（もきゅっと）\r\n\r\n- TCP/IPで動く軽く動くプロトコル\r\n- 軽いのでIoTによい\r\n- topicをpub/subする\r\n- MQTTの特徴的な機能いろいろ紹介\r\n- ブラウザで使うには、WebSocketに乗せてつかう必要がある\r\n- WebならWebSocketだけでいいのでは？⇢そのとおり\r\n- Node学園祭でつかったのでデモとコード紹介\r\n\r\n## ykhs\r\n\r\n### ServiceWorker\r\n\r\n- オフラインとセットで語られるけど、オフラインのためのものでもない\r\n- 低レベルな機能で、使いこなすことでキャッシュなどのオフライン機能を実装できる\r\n- 別のレイヤーで動くJavaScript\r\n- リクエストの横取りとかできることいろいろある\r\n- フロントエンドバックエンドみたいな層ができる\r\n- キャッシュ管理の手順\r\n    - インストール\r\n    - キャッシュ返却\r\n    - キャッシュ戦略\r\n- 続きはCodeGridで！（？）\r\n\r\n## y-maru\r\n\r\n### インタビューあれこれ\r\n\r\n- インタビュー形式\r\n    - 質疑応答スタイル\r\n        - 一般的\r\n    - 対談スタイル\r\n        - インタビューする側もネームバリューがある場合\r\n    - 三人称スタイル\r\n        - ライターの知識が必要\r\n    - ひとり語りスタイル、一人称スタイル\r\n        - まるでライターが書いたような文章\r\n        - （談）構成を入れないとインタビュアーがこんなこと言ってないと嫌がる場合がある\r\n- 録音アプリ\r\n    - HT Recorderオススメ（1800円）\r\n- インタビュー起こしソフト\r\n    - Interview（無料）\r\n    - タイムスタンプを置いてジャンプできる\r\n\r\n## yomotsu\r\n\r\n### Math in Nature\r\n\r\n- ランダムな点から三角形を作り出す仕組み\r\n- Viewportをつくって点を打つ\r\n    - Viewportが全部入るように円をつくって、そこに接する三角形をつくると、初期の点がうてる\r\n    - 円を共有する三角形をつくって円をつくると他の点を含まない新しい三角形になる？\r\n- Volonoi\r\n    - 円の中心を結ぶ\r\n    - 亀とかキリンとかコーンとか細胞がVolonoiでできている\r\n    - コンビニの勢力図がつくれるからもよおしても安心\r\n    - Volonoiエディタつくった\r\n\r\n## 次回\r\n\r\nBグループ + tacamy cancer oosugi",
    "body_html": "<h2 id=\"0-1-0\" name=\"0-1-0\">\n<a class=\"anchor\" href=\"#0-1-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"nakajmg\"> &gt; nakajmg</span></a>nakajmg</h2>\n\n<h3 id=\"0-1-1\" name=\"0-1-1\">\n<a class=\"anchor\" href=\"#0-1-1\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"スタイルガイドジェネレータの進捗報告\"> &gt; スタイルガイドジェネレータの進捗報告</span></a>スタイルガイドジェネレータの進捗報告</h3>\n\n<ul>\n<li>もう使えるといっても過言ではない</li>\n<li>gulp-aigisからもう実行できる</li>\n<li>yamlで設定かける</li>\n<li>出力されるHTMLがインデントきれいにした</li>\n<li>/で階層指定するとメニューに出てくる</li>\n<li>色の一覧も勝手につくるようにした</li>\n<li>オープンハウスで使いつつ不具合報告もらって改善中</li>\n<li>handlebarsのtemplateをいじればクラス名や構造を自由に改変できる</li>\n<li>もうすぐ公開予定</li>\n</ul>\n\n<h2 id=\"0-2-0\" name=\"0-2-0\">\n<a class=\"anchor\" href=\"#0-2-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"takazudo\"> &gt; takazudo</span></a>takazudo</h2>\n\n<h3 id=\"0-2-1\" name=\"0-2-1\">\n<a class=\"anchor\" href=\"#0-2-1\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"絶対配置時にmargin__colon__auto;で中央寄せになるやつ\"> &gt; 絶対配置時にmargin__colon__auto;で中央寄せになるやつ</span></a>絶対配置時にmargin:auto;で中央寄せになるやつ</h3>\n\n<p><a target=\"_blank\" href=\"http://takazudo.github.io/presentation-absolute-margin-auto/#/\">http://takazudo.github.io/presentation-absolute-margin-auto/#/</a></p>\n\n<ul>\n<li> <code>top</code> <code>right</code> <code>bottom</code> <code>left</code>の値を<code>0</code>にすると中央配置になる理由</li>\n<li>\n<code>margin</code>を<code>auto</code>にすると、包含ブロックの幅と等しくなるように<code>margin</code>の値が計算が行われる仕様だから</li>\n<li>飛び出すと勝手に<code>margin</code>がマイナス値に調整される</li>\n<li>\n<code>auto</code>奥が深かった</li>\n</ul>\n\n<p>補足</p>\n\n<p><a target=\"_blank\" href=\"http://codepen.io/anon/pen/ZGNPjL?editors=110\">http://codepen.io/anon/pen/ZGNPjL?editors=110</a></p>\n\n<p>bottomとmargin-bottomだけがautoだったらどうなるの？というやつ、</p>\n\n<p><a target=\"_blank\" href=\"http://www.w3.org/TR/css3-box/#abs-non-replaced-width\">http://www.w3.org/TR/css3-box/#abs-non-replaced-width</a></p>\n\n<p>の節の終わりあたりの6に書いてある以下で決まってました</p>\n\n<blockquote>\n<p>‘bottom’ is ‘auto’, ‘top’ and ‘height’ are not ‘auto’: The used values of ‘margin-top’ and ‘margin-bottom’ are their computed values, except that any ‘auto’ gives a used value of 0. The constraint gives the used value for ‘bottom’.</p>\n</blockquote>\n\n<p>bottomがautoでtopとheightがautoじゃない場合、margin-topとmargin-bottomには指定された値が示す長さ（computed value）になる。もしautoが指定されていた場合は0になる。そんで、包含ブロックから他の長さ引いたぶんはbottomに割り当てられる。</p>\n\n<p>つまり、margin-bottomが0になり、bottomが余った長さ全て（=160px）になるっぽいです</p>\n\n<h2 id=\"0-3-0\" name=\"0-3-0\">\n<a class=\"anchor\" href=\"#0-3-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"leader22\"> &gt; leader22</span></a>leader22</h2>\n\n<h3 id=\"0-3-1\" name=\"0-3-1\">\n<a class=\"anchor\" href=\"#0-3-1\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"MQTT（もきゅっと）\"> &gt; MQTT（もきゅっと）</span></a>MQTT（もきゅっと）</h3>\n\n<ul>\n<li>TCP/IPで動く軽く動くプロトコル</li>\n<li>軽いのでIoTによい</li>\n<li>topicをpub/subする</li>\n<li>MQTTの特徴的な機能いろいろ紹介</li>\n<li>ブラウザで使うには、WebSocketに乗せてつかう必要がある</li>\n<li>WebならWebSocketだけでいいのでは？⇢そのとおり</li>\n<li>Node学園祭でつかったのでデモとコード紹介</li>\n</ul>\n\n<h2 id=\"0-4-0\" name=\"0-4-0\">\n<a class=\"anchor\" href=\"#0-4-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"ykhs\"> &gt; ykhs</span></a>ykhs</h2>\n\n<h3 id=\"0-4-1\" name=\"0-4-1\">\n<a class=\"anchor\" href=\"#0-4-1\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"ServiceWorker\"> &gt; ServiceWorker</span></a>ServiceWorker</h3>\n\n<ul>\n<li>オフラインとセットで語られるけど、オフラインのためのものでもない</li>\n<li>低レベルな機能で、使いこなすことでキャッシュなどのオフライン機能を実装できる</li>\n<li>別のレイヤーで動くJavaScript</li>\n<li>リクエストの横取りとかできることいろいろある</li>\n<li>フロントエンドバックエンドみたいな層ができる</li>\n<li>キャッシュ管理の手順\n\n<ul>\n<li>インストール</li>\n<li>キャッシュ返却</li>\n<li>キャッシュ戦略</li>\n</ul>\n</li>\n<li>続きはCodeGridで！（？）</li>\n</ul>\n\n<h2 id=\"0-5-0\" name=\"0-5-0\">\n<a class=\"anchor\" href=\"#0-5-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"y-maru\"> &gt; y-maru</span></a>y-maru</h2>\n\n<h3 id=\"0-5-1\" name=\"0-5-1\">\n<a class=\"anchor\" href=\"#0-5-1\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"インタビューあれこれ\"> &gt; インタビューあれこれ</span></a>インタビューあれこれ</h3>\n\n<ul>\n<li>インタビュー形式\n\n<ul>\n<li>質疑応答スタイル\n\n<ul>\n<li>一般的</li>\n</ul>\n</li>\n<li>対談スタイル\n\n<ul>\n<li>インタビューする側もネームバリューがある場合</li>\n</ul>\n</li>\n<li>三人称スタイル\n\n<ul>\n<li>ライターの知識が必要</li>\n</ul>\n</li>\n<li>ひとり語りスタイル、一人称スタイル\n\n<ul>\n<li>まるでライターが書いたような文章</li>\n<li>（談）構成を入れないとインタビュアーがこんなこと言ってないと嫌がる場合がある</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>録音アプリ\n\n<ul>\n<li>HT Recorderオススメ（1800円）</li>\n</ul>\n</li>\n<li>インタビュー起こしソフト\n\n<ul>\n<li>Interview（無料）</li>\n<li>タイムスタンプを置いてジャンプできる</li>\n</ul>\n</li>\n</ul>\n\n<h2 id=\"0-6-0\" name=\"0-6-0\">\n<a class=\"anchor\" href=\"#0-6-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"yomotsu\"> &gt; yomotsu</span></a>yomotsu</h2>\n\n<h3 id=\"0-6-1\" name=\"0-6-1\">\n<a class=\"anchor\" href=\"#0-6-1\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"Math in Nature\"> &gt; Math in Nature</span></a>Math in Nature</h3>\n\n<ul>\n<li>ランダムな点から三角形を作り出す仕組み</li>\n<li>Viewportをつくって点を打つ\n\n<ul>\n<li>Viewportが全部入るように円をつくって、そこに接する三角形をつくると、初期の点がうてる</li>\n<li>円を共有する三角形をつくって円をつくると他の点を含まない新しい三角形になる？</li>\n</ul>\n</li>\n<li>Volonoi\n\n<ul>\n<li>円の中心を結ぶ</li>\n<li>亀とかキリンとかコーンとか細胞がVolonoiでできている</li>\n<li>コンビニの勢力図がつくれるからもよおしても安心</li>\n<li>Volonoiエディタつくった</li>\n</ul>\n</li>\n</ul>\n\n<h2 id=\"0-7-0\" name=\"0-7-0\">\n<a class=\"anchor\" href=\"#0-7-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"次回\"> &gt; 次回</span></a>次回</h2>\n\n<p>Bグループ + tacamy cancer oosugi</p>\n",
    "created_at": "2015-08-19T10:52:30+09:00",
    "message": "Update post.",
    "kind": "stock",
    "comments_count": 0,
    "tasks_count": 0,
    "done_tasks_count": 0,
    "url": "https://pxgrid.esa.io/posts/635",
    "updated_at": "2015-08-19T12:02:46+09:00",
    "tags": [],
    "category": "社内勉強会/2015/08",
    "revision_number": 12,
    "created_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "updated_by": {
      "name": "takeshi takatsudo",
      "screen_name": "takazudo",
      "icon": "https://img.esa.io/uploads/production/users/4506/icon/thumb_m_730ffd8e2a64f2fd72e9bbb2bd727bd5.jpg"
    },
    "stargazers_count": 0,
    "watchers_count": 3,
    "star": false,
    "watch": true,
    "_uid": 1446574748019,
    "_modified_at": ""
  },
  {
    "number": 618,
    "name": "05",
    "full_name": "社内勉強会/2015/08/05",
    "wip": false,
    "body_md": "## @kyosuke\r\n\r\n### 理想の会計\r\n\r\n* 経理0\r\n* 税理士丸投げ\r\n    * たったの5万\r\n    * 渡すだけ\r\n* 渡す書類作成とか 一人でやってた\r\n    * 案件と人増えると無理\r\n* Webサービスの活用\r\n    * freee\r\n        * 銀行口座スクレイパー\r\n        * API便利\r\n        * 税理士さんのアカウントつくってある\r\n    * 請求書はmake leaps\r\n        * 売上予測\r\n* 受け取った請求書\r\n    * 郵送, pdf, etc...\r\n    * CasterBiz \r\n        * 16時間稼働可能で4万円\r\n    \r\n## @cyokodog \r\n\r\n### scratch\r\n\r\n* ビジュアルプログラミング\r\n* 子供と一緒に講座行ってみた\r\n    * 楽しかったらしい\r\n    * 家でもやってる\r\n* メガドラソフトのクローンとか\r\n* 手順\r\n    * キャラクタ選ぶ\r\n    * キャラクタに命令つける\r\n* 良さ\r\n    * 子供の勉強にいい\r\n    * 構造化をイメージしやすい\r\n    * 当たり判定とかの処理が用意されてて楽\r\n\r\n## @soto3 \r\n\r\n### 数学文章作法から学ぶ\r\n\r\n* 続き\r\n* 内容と形式\r\n    * 読者と著者で意識する対象が異なる\r\n* エディタに単語登録してハイライトさせる\r\n    * NGワードとか気づけやすい\r\n* 漢数字vsアラビア数字\r\n    * 定型語句\r\n        * 漢数字\r\n    * nの自然数\r\n        * アラビア数字\r\n\r\n## @geckotang \r\n\r\n### タブキーで移動するときのアウトライン\r\n\r\n* https://pxgrid.esa.io/posts/613\r\n* Chromeだけキモい\r\n* アウトライン残ったり\r\n* 要素重なってると消える\r\n* プラットフォームとブラウザによってはタブでリンク移動するのに設定が必要\r\n    * Windowsの人は気にならないのかも\r\n* めんどくさい\r\n\r\n## @obara\r\n\r\n### CC AssetMarket\r\n\r\n* https://pxgrid.esa.io/posts/617\r\n* 商用利用可能な素材群\r\n    * フォント、画像、UI、べくたー\r\n* CCの有償サービス・プラン利用者が使える\r\n* Adobeが許可した人しか素材投稿できないから高品質\r\n* CC 2014からしか使えない\r\n\r\n## @takazudo \r\n\r\n### CSSの包含ブロック\r\n\r\n* https://pxgrid.esa.io/posts/616\r\n* 要素が配置される矩形領域\r\n* autoの計算方法\r\n    * 横と縦で違う\r\n\r\n## 次回\r\n\r\n@5509 @oosugi @ykhs + グループA",
    "body_html": "<h2 id=\"0-1-0\" name=\"0-1-0\">\n<a class=\"anchor\" href=\"#0-1-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"__at__kyosuke\"> &gt; __at__kyosuke</span></a><a href=\"/users/kyosuke\" class=\"user-mention\" title=\"kyosuke\" target=\"_blank\">@kyosuke</a>\n</h2>\n\n<h3 id=\"0-1-1\" name=\"0-1-1\">\n<a class=\"anchor\" href=\"#0-1-1\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"理想の会計\"> &gt; 理想の会計</span></a>理想の会計</h3>\n\n<ul>\n<li>経理0</li>\n<li>税理士丸投げ\n\n<ul>\n<li>たったの5万</li>\n<li>渡すだけ</li>\n</ul>\n</li>\n<li>渡す書類作成とか 一人でやってた\n\n<ul>\n<li>案件と人増えると無理</li>\n</ul>\n</li>\n<li>Webサービスの活用\n\n<ul>\n<li>freee\n\n<ul>\n<li>銀行口座スクレイパー</li>\n<li>API便利</li>\n<li>税理士さんのアカウントつくってある</li>\n</ul>\n</li>\n<li>請求書はmake leaps\n\n<ul>\n<li>売上予測</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>受け取った請求書\n\n<ul>\n<li>郵送, pdf, etc...</li>\n<li>CasterBiz \n\n<ul>\n<li>16時間稼働可能で4万円</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n\n<h2 id=\"0-2-0\" name=\"0-2-0\">\n<a class=\"anchor\" href=\"#0-2-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"__at__cyokodog\"> &gt; __at__cyokodog</span></a><a href=\"/users/cyokodog\" class=\"user-mention\" title=\"cyokodog\" target=\"_blank\">@cyokodog</a>\n</h2>\n\n<h3 id=\"0-2-1\" name=\"0-2-1\">\n<a class=\"anchor\" href=\"#0-2-1\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"scratch\"> &gt; scratch</span></a>scratch</h3>\n\n<ul>\n<li>ビジュアルプログラミング</li>\n<li>子供と一緒に講座行ってみた\n\n<ul>\n<li>楽しかったらしい</li>\n<li>家でもやってる</li>\n</ul>\n</li>\n<li>メガドラソフトのクローンとか</li>\n<li>手順\n\n<ul>\n<li>キャラクタ選ぶ</li>\n<li>キャラクタに命令つける</li>\n</ul>\n</li>\n<li>良さ\n\n<ul>\n<li>子供の勉強にいい</li>\n<li>構造化をイメージしやすい</li>\n<li>当たり判定とかの処理が用意されてて楽</li>\n</ul>\n</li>\n</ul>\n\n<h2 id=\"0-3-0\" name=\"0-3-0\">\n<a class=\"anchor\" href=\"#0-3-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"__at__soto3\"> &gt; __at__soto3</span></a><a href=\"/users/soto3\" class=\"user-mention\" title=\"soto3\" target=\"_blank\">@soto3</a>\n</h2>\n\n<h3 id=\"0-3-1\" name=\"0-3-1\">\n<a class=\"anchor\" href=\"#0-3-1\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"数学文章作法から学ぶ\"> &gt; 数学文章作法から学ぶ</span></a>数学文章作法から学ぶ</h3>\n\n<ul>\n<li>続き</li>\n<li>内容と形式\n\n<ul>\n<li>読者と著者で意識する対象が異なる</li>\n</ul>\n</li>\n<li>エディタに単語登録してハイライトさせる\n\n<ul>\n<li>NGワードとか気づけやすい</li>\n</ul>\n</li>\n<li>漢数字vsアラビア数字\n\n<ul>\n<li>定型語句\n\n<ul>\n<li>漢数字</li>\n</ul>\n</li>\n<li>nの自然数\n\n<ul>\n<li>アラビア数字</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n\n<h2 id=\"0-4-0\" name=\"0-4-0\">\n<a class=\"anchor\" href=\"#0-4-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"__at__geckotang\"> &gt; __at__geckotang</span></a><a href=\"/users/geckotang\" class=\"user-mention\" title=\"geckotang\" target=\"_blank\">@geckotang</a>\n</h2>\n\n<h3 id=\"0-4-1\" name=\"0-4-1\">\n<a class=\"anchor\" href=\"#0-4-1\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"タブキーで移動するときのアウトライン\"> &gt; タブキーで移動するときのアウトライン</span></a>タブキーで移動するときのアウトライン</h3>\n\n<ul>\n<li><a target=\"_blank\" href=\"https://pxgrid.esa.io/posts/613\">https://pxgrid.esa.io/posts/613</a></li>\n<li>Chromeだけキモい</li>\n<li>アウトライン残ったり</li>\n<li>要素重なってると消える</li>\n<li>プラットフォームとブラウザによってはタブでリンク移動するのに設定が必要\n\n<ul>\n<li>Windowsの人は気にならないのかも</li>\n</ul>\n</li>\n<li>めんどくさい</li>\n</ul>\n\n<h2 id=\"0-5-0\" name=\"0-5-0\">\n<a class=\"anchor\" href=\"#0-5-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"__at__obara\"> &gt; __at__obara</span></a><a href=\"/users/obara\" class=\"user-mention\" title=\"obara\" target=\"_blank\">@obara</a>\n</h2>\n\n<h3 id=\"0-5-1\" name=\"0-5-1\">\n<a class=\"anchor\" href=\"#0-5-1\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"CC AssetMarket\"> &gt; CC AssetMarket</span></a>CC AssetMarket</h3>\n\n<ul>\n<li><a target=\"_blank\" href=\"https://pxgrid.esa.io/posts/617\">https://pxgrid.esa.io/posts/617</a></li>\n<li>商用利用可能な素材群\n\n<ul>\n<li>フォント、画像、UI、べくたー</li>\n</ul>\n</li>\n<li>CCの有償サービス・プラン利用者が使える</li>\n<li>Adobeが許可した人しか素材投稿できないから高品質</li>\n<li>CC 2014からしか使えない</li>\n</ul>\n\n<h2 id=\"0-6-0\" name=\"0-6-0\">\n<a class=\"anchor\" href=\"#0-6-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"__at__takazudo\"> &gt; __at__takazudo</span></a><a href=\"/users/takazudo\" class=\"user-mention\" title=\"takazudo\" target=\"_blank\">@takazudo</a>\n</h2>\n\n<h3 id=\"0-6-1\" name=\"0-6-1\">\n<a class=\"anchor\" href=\"#0-6-1\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"CSSの包含ブロック\"> &gt; CSSの包含ブロック</span></a>CSSの包含ブロック</h3>\n\n<ul>\n<li><a target=\"_blank\" href=\"https://pxgrid.esa.io/posts/616\">https://pxgrid.esa.io/posts/616</a></li>\n<li>要素が配置される矩形領域</li>\n<li>autoの計算方法\n\n<ul>\n<li>横と縦で違う</li>\n</ul>\n</li>\n</ul>\n\n<h2 id=\"0-7-0\" name=\"0-7-0\">\n<a class=\"anchor\" href=\"#0-7-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"次回\"> &gt; 次回</span></a>次回</h2>\n\n<p><a href=\"/users/5509\" class=\"user-mention\" title=\"5509\" target=\"_blank\">@5509</a> <a href=\"/users/oosugi\" class=\"user-mention\" title=\"oosugi\" target=\"_blank\">@oosugi</a> <a href=\"/users/ykhs\" class=\"user-mention\" title=\"ykhs\" target=\"_blank\">@ykhs</a> + グループA</p>\n",
    "created_at": "2015-08-05T11:16:07+09:00",
    "message": "Create post.",
    "kind": "stock",
    "comments_count": 0,
    "tasks_count": 0,
    "done_tasks_count": 0,
    "url": "https://pxgrid.esa.io/posts/618",
    "updated_at": "2015-08-05T12:00:09+09:00",
    "tags": [],
    "category": "社内勉強会/2015/08",
    "revision_number": 7,
    "created_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "updated_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "stargazers_count": 0,
    "watchers_count": 1,
    "star": false,
    "watch": true,
    "_uid": 1446574748020,
    "_modified_at": ""
  },
  {
    "number": 463,
    "name": "README",
    "full_name": "英語研修/README",
    "wip": false,
    "body_md": "# 英語レッスンのグループと順番\r\n\r\n時間 | メンバー\r\n--- | ---\r\n13：00～13：40 | 山田 敬美、小原 司、森大典（new）\r\n14：30～15：10 | 宇野 陽太、大杉 充（new）、丸山陽子（new）\r\n15：15～15：55 | 中村 享介、中島 直博\r\n16：00～16：40 | 外村 奈津子、小山田 晃浩、高津戸 壮、杉浦 有右嗣（new）\r\n16：45～17：25 | 坂巻 翔大郎、徳田 和規、山田 順久",
    "body_html": "<h1 id=\"1-0-0\" name=\"1-0-0\">\n<a class=\"anchor\" href=\"#1-0-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"英語レッスンのグループと順番\"> &gt; 英語レッスンのグループと順番</span></a>英語レッスンのグループと順番</h1>\n\n<table>\n<thead>\n<tr>\n<th>時間</th>\n<th>メンバー</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>13：00～13：40</td>\n<td>山田 敬美、小原 司、森大典（new）</td>\n</tr>\n<tr>\n<td>14：30～15：10</td>\n<td>宇野 陽太、大杉 充（new）、丸山陽子（new）</td>\n</tr>\n<tr>\n<td>15：15～15：55</td>\n<td>中村 享介、中島 直博</td>\n</tr>\n<tr>\n<td>16：00～16：40</td>\n<td>外村 奈津子、小山田 晃浩、高津戸 壮、杉浦 有右嗣（new）</td>\n</tr>\n<tr>\n<td>16：45～17：25</td>\n<td>坂巻 翔大郎、徳田 和規、山田 順久</td>\n</tr>\n</tbody>\n</table>\n",
    "created_at": "2015-07-02T00:17:59+09:00",
    "message": "Update post.",
    "kind": "stock",
    "comments_count": 0,
    "tasks_count": 0,
    "done_tasks_count": 0,
    "url": "https://pxgrid.esa.io/posts/463",
    "updated_at": "2015-07-29T16:41:28+09:00",
    "tags": [],
    "category": "英語研修",
    "revision_number": 6,
    "created_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "updated_by": {
      "name": "徳田和規",
      "screen_name": "5509",
      "icon": "https://img.esa.io/uploads/production/users/4507/icon/thumb_m_e16b4c121267a692567fb745618c04da.jpg"
    },
    "stargazers_count": 0,
    "watchers_count": 3,
    "star": false,
    "watch": true,
    "_uid": 1446574748025,
    "_modified_at": ""
  },
  {
    "number": 539,
    "name": "README.md",
    "full_name": "OSS/Aigis/README.md",
    "wip": true,
    "body_md": "# Aigis（旧Ronde）\r\n\r\n- https://github.com/pxgrid/Agis\r\n- https://github.com/pxgrid/gulp-aigis\r\n\r\nNodeJS製のスタイルガイドジェネレータ\r\n\r\n## インストールと実行\r\n\r\n```zsh\r\n$npm i pxgrid/aigis\\#v0.0.5 -g\r\n$aigis -c aigis_config.yml\r\n```\r\n\r\n## 設定ファイル\r\n\r\naigis_config.yml\r\n\r\n### 記述サンプル\r\n\r\n```yaml\r\n# スタイルガイドの名前\r\nname: My Style Guide\r\n\r\n# スタイルガイドの元になるCSSファイル\r\nsource: ./src/pc/scss/style.scss\r\n#source: ./src/pc/scss/\r\n#source:\r\n#  - ./src/pc/scss/style.scss\r\n#  - ./src/sp/scss/style.scss\r\n\r\n#モジュールの設定を書く部分でYAMLを使用する\r\nformat: yaml\r\n\r\n#スタイルガイドの生成先\r\ndest: ./docs\r\n\r\n#スタイルガイドの生成先にコピーするディレクトリ\r\ndependencies: \r\n  - ./assets\r\n\r\n#スタイルガイドに使用するテンプレートファイル \r\ntemplate: ./template\r\n\r\n# スタイルガイドに表示するタイムスタンプの形式\r\ntimestamp_format: YYYY/MM/DD/ HH:mm\r\n\r\n# コード部分に使用するシンタックスハイライトのテーマ\r\nhighlight_theme: dracula\r\n\r\n# マークダウンブロックから生成されるHTMLにクラスを付与する\r\n  heading:\r\n    - sg-heading\r\n  list:\r\n    - sg-list\r\n  listitem:\r\n    - sg-list__item\r\n  hr:\r\n    - sg-hr\r\n  blockquote:\r\n    - sg-blockquote\r\n  image:\r\n    - sg-img\r\n  link:\r\n    - sg-link\r\n  paragraph:\r\n    - sg-p\r\n  table:\r\n    - sg-table\r\n  tablerow:\r\n    - sg-table__row\r\n  tablecell:\r\n    - sg-table__cell\r\n\r\n# ?\r\ninject:\r\n  - html\r\n  - jade\r\n  - js\r\n  - coffee\r\n\r\n# シンタックスハイライトを有効にする\r\nhighlight: true\r\n\r\n# スタイルガイドのトップページ用のマークダウンファイルを指定\r\nindex: ./README.md\r\n```\r\n\r\n## スタイルガイド用のCSSコメント\r\n\r\n### 記述サンプル\r\n\r\nCSSのコメントアウトブロックの`/*  */`を1ブロックとして記述する。\r\nその中の、`---`から`---`までのYAMLブロックに、そのブロックの説明を記述する。YAMLブロック以降は、マークダウン形式で記述できる。コードフェンス部分で言語をhtmlにすると、プレビューが作成される。\r\n\r\n    /*\r\n    ---\r\n    name: 必須アイコン\r\n    category:\r\n      - module/icon\r\n      - all\r\n    ---\r\n    \r\n    ```html\r\n    <span class=\"icon-required\">必須</span>\r\n    ```\r\n    */\r\n\r\n\r\n![image.png (31.8 kB)](https://img.esa.io/uploads/production/attachments/1700/2015/07/29/4502/6b32f577-309c-4999-9484-b2d365ab7ba3.png)",
    "body_html": "<h1 id=\"1-0-0\" name=\"1-0-0\">\n<a class=\"anchor\" href=\"#1-0-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"Aigis（旧Ronde）\"> &gt; Aigis（旧Ronde）</span></a>Aigis（旧Ronde）</h1>\n\n<ul>\n<li><a target=\"_blank\" href=\"https://github.com/pxgrid/Agis\">https://github.com/pxgrid/Agis</a></li>\n<li><a target=\"_blank\" href=\"https://github.com/pxgrid/gulp-aigis\">https://github.com/pxgrid/gulp-aigis</a></li>\n</ul>\n\n<p>NodeJS製のスタイルガイドジェネレータ</p>\n\n<h2 id=\"1-1-0\" name=\"1-1-0\">\n<a class=\"anchor\" href=\"#1-1-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"インストールと実行\"> &gt; インストールと実行</span></a>インストールと実行</h2>\n<div class=\"code-block\">\n<pre class=\"highlight shell\"><code><span class=\"nv\">$npm</span> i pxgrid/aigis<span class=\"se\">\\#</span>v0.0.5 -g\n<span class=\"nv\">$aigis</span> -c aigis_config.yml\n</code></pre>\n</div>\n<h2 id=\"1-2-0\" name=\"1-2-0\">\n<a class=\"anchor\" href=\"#1-2-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"設定ファイル\"> &gt; 設定ファイル</span></a>設定ファイル</h2>\n\n<p>aigis_config.yml</p>\n\n<h3 id=\"1-2-1\" name=\"1-2-1\">\n<a class=\"anchor\" href=\"#1-2-1\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"記述サンプル\"> &gt; 記述サンプル</span></a>記述サンプル</h3>\n<div class=\"code-block\">\n<pre class=\"highlight yaml\"><code><span class=\"c1\"># スタイルガイドの名前</span>\n<span class=\"s\">name</span><span class=\"pi\">:</span> <span class=\"s\">My Style Guide</span>\n\n<span class=\"c1\"># スタイルガイドの元になるCSSファイル</span>\n<span class=\"s\">source</span><span class=\"pi\">:</span> <span class=\"s\">./src/pc/scss/style.scss</span>\n<span class=\"c1\">#source: ./src/pc/scss/</span>\n<span class=\"c1\">#source:</span>\n<span class=\"c1\">#  - ./src/pc/scss/style.scss</span>\n<span class=\"c1\">#  - ./src/sp/scss/style.scss</span>\n\n<span class=\"c1\">#モジュールの設定を書く部分でYAMLを使用する</span>\n<span class=\"s\">format</span><span class=\"pi\">:</span> <span class=\"s\">yaml</span>\n\n<span class=\"c1\">#スタイルガイドの生成先</span>\n<span class=\"s\">dest</span><span class=\"pi\">:</span> <span class=\"s\">./docs</span>\n\n<span class=\"c1\">#スタイルガイドの生成先にコピーするディレクトリ</span>\n<span class=\"s\">dependencies</span><span class=\"pi\">:</span> \n  <span class=\"pi\">-</span> <span class=\"s\">./assets</span>\n\n<span class=\"c1\">#スタイルガイドに使用するテンプレートファイル </span>\n<span class=\"s\">template</span><span class=\"pi\">:</span> <span class=\"s\">./template</span>\n\n<span class=\"c1\"># スタイルガイドに表示するタイムスタンプの形式</span>\n<span class=\"s\">timestamp_format</span><span class=\"pi\">:</span> <span class=\"s\">YYYY/MM/DD/ HH:mm</span>\n\n<span class=\"c1\"># コード部分に使用するシンタックスハイライトのテーマ</span>\n<span class=\"s\">highlight_theme</span><span class=\"pi\">:</span> <span class=\"s\">dracula</span>\n\n<span class=\"c1\"># マークダウンブロックから生成されるHTMLにクラスを付与する</span>\n  <span class=\"s\">heading</span><span class=\"pi\">:</span>\n    <span class=\"pi\">-</span> <span class=\"s\">sg-heading</span>\n  <span class=\"s\">list</span><span class=\"pi\">:</span>\n    <span class=\"pi\">-</span> <span class=\"s\">sg-list</span>\n  <span class=\"s\">listitem</span><span class=\"pi\">:</span>\n    <span class=\"pi\">-</span> <span class=\"s\">sg-list__item</span>\n  <span class=\"s\">hr</span><span class=\"pi\">:</span>\n    <span class=\"pi\">-</span> <span class=\"s\">sg-hr</span>\n  <span class=\"s\">blockquote</span><span class=\"pi\">:</span>\n    <span class=\"pi\">-</span> <span class=\"s\">sg-blockquote</span>\n  <span class=\"s\">image</span><span class=\"pi\">:</span>\n    <span class=\"pi\">-</span> <span class=\"s\">sg-img</span>\n  <span class=\"s\">link</span><span class=\"pi\">:</span>\n    <span class=\"pi\">-</span> <span class=\"s\">sg-link</span>\n  <span class=\"s\">paragraph</span><span class=\"pi\">:</span>\n    <span class=\"pi\">-</span> <span class=\"s\">sg-p</span>\n  <span class=\"s\">table</span><span class=\"pi\">:</span>\n    <span class=\"pi\">-</span> <span class=\"s\">sg-table</span>\n  <span class=\"s\">tablerow</span><span class=\"pi\">:</span>\n    <span class=\"pi\">-</span> <span class=\"s\">sg-table__row</span>\n  <span class=\"s\">tablecell</span><span class=\"pi\">:</span>\n    <span class=\"pi\">-</span> <span class=\"s\">sg-table__cell</span>\n\n<span class=\"c1\"># ?</span>\n<span class=\"s\">inject</span><span class=\"pi\">:</span>\n  <span class=\"pi\">-</span> <span class=\"s\">html</span>\n  <span class=\"pi\">-</span> <span class=\"s\">jade</span>\n  <span class=\"pi\">-</span> <span class=\"s\">js</span>\n  <span class=\"pi\">-</span> <span class=\"s\">coffee</span>\n\n<span class=\"c1\"># シンタックスハイライトを有効にする</span>\n<span class=\"s\">highlight</span><span class=\"pi\">:</span> <span class=\"s\">true</span>\n\n<span class=\"c1\"># スタイルガイドのトップページ用のマークダウンファイルを指定</span>\n<span class=\"s\">index</span><span class=\"pi\">:</span> <span class=\"s\">./README.md</span>\n</code></pre>\n</div>\n<h2 id=\"1-3-0\" name=\"1-3-0\">\n<a class=\"anchor\" href=\"#1-3-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"スタイルガイド用のCSSコメント\"> &gt; スタイルガイド用のCSSコメント</span></a>スタイルガイド用のCSSコメント</h2>\n\n<h3 id=\"1-3-1\" name=\"1-3-1\">\n<a class=\"anchor\" href=\"#1-3-1\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"記述サンプル\"> &gt; 記述サンプル</span></a>記述サンプル</h3>\n\n<p>CSSのコメントアウトブロックの<code>/*  */</code>を1ブロックとして記述する。<br>\nその中の、<code>---</code>から<code>---</code>までのYAMLブロックに、そのブロックの説明を記述する。YAMLブロック以降は、マークダウン形式で記述できる。コードフェンス部分で言語をhtmlにすると、プレビューが作成される。</p>\n<div class=\"code-block\">\n<pre class=\"highlight plaintext\"><code>/*\n---\nname: 必須アイコン\ncategory:\n  - module/icon\n  - all\n---\n\n```html\n&lt;span class=\"icon-required\"&gt;必須&lt;/span&gt;\n```\n*/\n</code></pre>\n</div>\n<p><a href=\"https://img.esa.io/uploads/production/attachments/1700/2015/07/29/4502/6b32f577-309c-4999-9484-b2d365ab7ba3.png\" target=\"_blank\"><img src=\"https://img.esa.io/uploads/production/attachments/1700/2015/07/29/4502/6b32f577-309c-4999-9484-b2d365ab7ba3.png\" alt=\"image.png (31.8 kB)\"></a></p>\n",
    "created_at": "2015-07-02T01:12:58+09:00",
    "message": "Update post.",
    "kind": "stock",
    "comments_count": 0,
    "tasks_count": 0,
    "done_tasks_count": 0,
    "url": "https://pxgrid.esa.io/posts/539",
    "updated_at": "2015-07-29T12:59:04+09:00",
    "tags": [],
    "category": "OSS/Aigis",
    "revision_number": 4,
    "created_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "updated_by": {
      "name": "坂巻翔大郎",
      "screen_name": "geckotang",
      "icon": "https://img.esa.io/uploads/production/users/4502/icon/thumb_m_cd33fe458f994c996691ae5bf5bb6060.jpg"
    },
    "stargazers_count": 0,
    "watchers_count": 2,
    "star": false,
    "watch": true,
    "_uid": 1446574748026,
    "_modified_at": ""
  },
  {
    "number": 540,
    "name": "処理の流れ.md",
    "full_name": "OSS/Aigis/処理の流れ.md",
    "wip": false,
    "body_md": "1. コンフィグファイルの読み込み\r\n    * なければデフォルト\r\n* モジュールに必要なCSS・JSファイルなどをコピーする\r\n    * ハイライト用のCSSやガイド用のCSSも\r\n* スタイルガイドを生成するためのCSSファイルの読み込み\r\n* CSSからコメントブロックを抜き出す\r\n    * 拡張子が.css以外であればコンパイル\r\n* コメントブロックをconfigとmarkdownに分割\r\n    * configはyamlかcsonで記述\r\n* markdown中のコードブロックを変換\r\n    * HTMLはHTMLとして表示されるように\r\n    * JSはscriptタグで囲んで追加\r\n    * jadeやcoffeeであればコンパイル\r\n* markdownをコンパイル\r\n    * markedのカスタムレンダラで要素をカスタマイズ\r\n* 処理を加えたコメントを書き出す\r\n    * カテゴリやタグでグルーピングして出力\r\n",
    "body_html": "<ol>\n<li>コンフィグファイルの読み込み\n\n<ul>\n<li>なければデフォルト</li>\n</ul>\n</li>\n<li>モジュールに必要なCSS・JSファイルなどをコピーする\n\n<ul>\n<li>ハイライト用のCSSやガイド用のCSSも</li>\n</ul>\n</li>\n<li>スタイルガイドを生成するためのCSSファイルの読み込み</li>\n<li>CSSからコメントブロックを抜き出す\n\n<ul>\n<li>拡張子が.css以外であればコンパイル</li>\n</ul>\n</li>\n<li>コメントブロックをconfigとmarkdownに分割\n\n<ul>\n<li>configはyamlかcsonで記述</li>\n</ul>\n</li>\n<li>markdown中のコードブロックを変換\n\n<ul>\n<li>HTMLはHTMLとして表示されるように</li>\n<li>JSはscriptタグで囲んで追加</li>\n<li>jadeやcoffeeであればコンパイル</li>\n</ul>\n</li>\n<li>markdownをコンパイル\n\n<ul>\n<li>markedのカスタムレンダラで要素をカスタマイズ</li>\n</ul>\n</li>\n<li>処理を加えたコメントを書き出す\n\n<ul>\n<li>カテゴリやタグでグルーピングして出力</li>\n</ul>\n</li>\n</ol>\n",
    "created_at": "2015-07-02T01:36:15+09:00",
    "message": "Create post.",
    "kind": "stock",
    "comments_count": 0,
    "tasks_count": 0,
    "done_tasks_count": 0,
    "url": "https://pxgrid.esa.io/posts/540",
    "updated_at": "2015-07-02T01:36:15+09:00",
    "tags": [],
    "category": "OSS/Aigis",
    "revision_number": 1,
    "created_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "updated_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "stargazers_count": 0,
    "watchers_count": 1,
    "star": false,
    "watch": true,
    "_uid": 1446574748027,
    "_modified_at": ""
  },
  {
    "number": 541,
    "name": "こうしたい.md",
    "full_name": "OSS/Aigis/こうしたい.md",
    "wip": false,
    "body_md": "## ほしいもの\r\n\r\n最初はとにかくなんでもできそうなスタイルガイドを作ろうとしてたけど、一番ほしいのは社内の人が気持よく使えるスタイルガイドジェネレータだと思った。\r\n\r\n公開してたくさんの人に使ってもらえるようなものは一先ず忘れて、まずは社内の案件でスタイルガイドを作るときに不自由しないものを目指す。\r\n\r\n## モジュールのHTML\r\n\r\n1. CSSのコメントブロックにmarkdownで\r\n    * 管理が楽\r\n    * ハイライト効かない\r\n* 外部HTMLを指定できるように\r\n    * 管理面倒\r\n    * ハイライト効く\r\n\r\nmarkdownで書けるとモジュールのスタイルガイドを書くハードルがかなり下がるのでmarkdownでいきたい。\r\n\r\n\r\n### Q. オプションで外部HTMLを指定するようにもできるけど、必要？\r\n\r\n## プラガブルにする\r\n\r\nデフォルトで`.css`以外の`.styl`や`.scss`には対応するけど、他のファイル形式を使いたい場合に利用者側でプラグインを書けるようにしておきたい。\r\n\r\n`pluginRegister`的な関数でコンパイル（パース）するJSファイルを指定する形式にしておけばできそう？\r\n\r\nコメントブロックに`jade`とか`coffee`が指定されてる場合にも登録されてるプラグインを`pluginRegister.get('jade')`みたいな感じで呼び出して使う形式にしたい。\r\n\r\nこの形式であれば、既存のプラグインのソースさえ読めれば、必要なときに自分でなくてもプラグインを書いて追加できる。\r\n\r\n## スタイルガイド自体のテンプレート\r\n\r\nHandlebarsで。テンプレートをコンパイルする際には、テンプレートで使いそうな変数を全て渡す（カテゴライズしたもの）\r\n\r\n## CSSにかくコメントの形式\r\n\r\n基本はmarkdownで記述する。\r\n\r\n### コンフィグ\r\n\r\nモジュールの情報はyamlで次のように`---`で囲んだブロックに記述する。\r\n\r\n```\r\n---\r\nname: yaml_test\r\ncategory:\r\n  - config\r\n  - yaml\r\ntag:\r\n  - yaml\r\n---\r\n```\r\n\r\n|key|value|複数指定|\r\n| --- | --- | --- |\r\n| name |モジュール固有の名前  | 不可|\r\n| category | モジュールが属するカテゴリ。|可|\r\n| tag | 古いモジュールにdeprecatedをつけるなど、カテゴリではないメタ情報| 可 |\r\n\r\n### markdown\r\n\r\nmarkdown。\r\n\r\nコードブロックには開始行に\\`\\`\\`htmlのようにコードのタイプを記述する。このタイプを見て処理を振り分ける。\r\n\r\n\r\n",
    "body_html": "<h2 id=\"0-1-0\" name=\"0-1-0\">\n<a class=\"anchor\" href=\"#0-1-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"ほしいもの\"> &gt; ほしいもの</span></a>ほしいもの</h2>\n\n<p>最初はとにかくなんでもできそうなスタイルガイドを作ろうとしてたけど、一番ほしいのは社内の人が気持よく使えるスタイルガイドジェネレータだと思った。</p>\n\n<p>公開してたくさんの人に使ってもらえるようなものは一先ず忘れて、まずは社内の案件でスタイルガイドを作るときに不自由しないものを目指す。</p>\n\n<h2 id=\"0-2-0\" name=\"0-2-0\">\n<a class=\"anchor\" href=\"#0-2-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"モジュールのHTML\"> &gt; モジュールのHTML</span></a>モジュールのHTML</h2>\n\n<ol>\n<li>CSSのコメントブロックにmarkdownで\n\n<ul>\n<li>管理が楽</li>\n<li>ハイライト効かない</li>\n</ul>\n</li>\n<li>外部HTMLを指定できるように\n\n<ul>\n<li>管理面倒</li>\n<li>ハイライト効く</li>\n</ul>\n</li>\n</ol>\n\n<p>markdownで書けるとモジュールのスタイルガイドを書くハードルがかなり下がるのでmarkdownでいきたい。</p>\n\n<h3 id=\"0-2-1\" name=\"0-2-1\">\n<a class=\"anchor\" href=\"#0-2-1\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"Q. オプションで外部HTMLを指定するようにもできるけど、必要？\"> &gt; Q. オプションで外部HTMLを指定するようにもできるけど、必要？</span></a>Q. オプションで外部HTMLを指定するようにもできるけど、必要？</h3>\n\n<h2 id=\"0-3-0\" name=\"0-3-0\">\n<a class=\"anchor\" href=\"#0-3-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"プラガブルにする\"> &gt; プラガブルにする</span></a>プラガブルにする</h2>\n\n<p>デフォルトで<code>.css</code>以外の<code>.styl</code>や<code>.scss</code>には対応するけど、他のファイル形式を使いたい場合に利用者側でプラグインを書けるようにしておきたい。</p>\n\n<p><code>pluginRegister</code>的な関数でコンパイル（パース）するJSファイルを指定する形式にしておけばできそう？</p>\n\n<p>コメントブロックに<code>jade</code>とか<code>coffee</code>が指定されてる場合にも登録されてるプラグインを<code>pluginRegister.get('jade')</code>みたいな感じで呼び出して使う形式にしたい。</p>\n\n<p>この形式であれば、既存のプラグインのソースさえ読めれば、必要なときに自分でなくてもプラグインを書いて追加できる。</p>\n\n<h2 id=\"0-4-0\" name=\"0-4-0\">\n<a class=\"anchor\" href=\"#0-4-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"スタイルガイド自体のテンプレート\"> &gt; スタイルガイド自体のテンプレート</span></a>スタイルガイド自体のテンプレート</h2>\n\n<p>Handlebarsで。テンプレートをコンパイルする際には、テンプレートで使いそうな変数を全て渡す（カテゴライズしたもの）</p>\n\n<h2 id=\"0-5-0\" name=\"0-5-0\">\n<a class=\"anchor\" href=\"#0-5-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"CSSにかくコメントの形式\"> &gt; CSSにかくコメントの形式</span></a>CSSにかくコメントの形式</h2>\n\n<p>基本はmarkdownで記述する。</p>\n\n<h3 id=\"0-5-1\" name=\"0-5-1\">\n<a class=\"anchor\" href=\"#0-5-1\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"コンフィグ\"> &gt; コンフィグ</span></a>コンフィグ</h3>\n\n<p>モジュールの情報はyamlで次のように<code>---</code>で囲んだブロックに記述する。</p>\n<div class=\"code-block\">\n<pre class=\"highlight plaintext\"><code>---\nname: yaml_test\ncategory:\n  - config\n  - yaml\ntag:\n  - yaml\n---\n</code></pre>\n</div>\n<table>\n<thead>\n<tr>\n<th>key</th>\n<th>value</th>\n<th>複数指定</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>name</td>\n<td>モジュール固有の名前</td>\n<td>不可</td>\n</tr>\n<tr>\n<td>category</td>\n<td>モジュールが属するカテゴリ。</td>\n<td>可</td>\n</tr>\n<tr>\n<td>tag</td>\n<td>古いモジュールにdeprecatedをつけるなど、カテゴリではないメタ情報</td>\n<td>可</td>\n</tr>\n</tbody>\n</table>\n\n<h3 id=\"0-5-2\" name=\"0-5-2\">\n<a class=\"anchor\" href=\"#0-5-2\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"markdown\"> &gt; markdown</span></a>markdown</h3>\n\n<p>markdown。</p>\n\n<p>コードブロックには開始行に```htmlのようにコードのタイプを記述する。このタイプを見て処理を振り分ける。</p>\n",
    "created_at": "2015-07-02T02:03:24+09:00",
    "message": "Create post.",
    "kind": "stock",
    "comments_count": 0,
    "tasks_count": 0,
    "done_tasks_count": 0,
    "url": "https://pxgrid.esa.io/posts/541",
    "updated_at": "2015-07-02T02:03:24+09:00",
    "tags": [],
    "category": "OSS/Aigis",
    "revision_number": 1,
    "created_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "updated_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "stargazers_count": 1,
    "watchers_count": 1,
    "star": false,
    "watch": true,
    "_uid": 1446574748028,
    "_modified_at": ""
  },
  {
    "number": 592,
    "name": "putty形式の鍵からOpenSSH形式への変換",
    "full_name": "メモ/SSH/putty形式の鍵からOpenSSH形式への変換",
    "wip": false,
    "body_md": "## 前提\r\n\r\nパスフレーズを知ってる`.ppk`がある\r\n\r\n## 背景\r\n\r\nSFTP接続のときに使うクライアントによって対応してる鍵の形式が違う。`.ppk`もらったけど対応してないクライアントで接続したいときには変換が必要。\r\n\r\n## 手順\r\n\r\nhomebrewで`putty`をインストールする。このとき`--HEAD`オプションを指定しないと変換の際にエラーが出て変換がうまくいかない。\r\n\r\n ([homebrew/issues/25734](https://github.com/Homebrew/homebrew/issues/25734))\r\n\r\n### puttyのインストール\r\n\r\n```\r\nbrew install --HEAD putty\r\n```\r\n\r\n### 変換\r\n\r\n`puttygen`コマンドで変換を行う。（インストール直後はパスが通ってないかもなので新しいターミナルを開く必要があるかも）\r\n\r\n次のコマンドで変換。コマンド実行時にpassを聞かれるので入力する。\r\n\r\n#### 秘密鍵への変換\r\n\r\n```\r\nputtygen hoge.ppk -O private-openssh -o hoge_rsa\r\n```\r\n\r\n#### 公開鍵への変換\r\n\r\n```\r\nputtygen hoge.ppk -O public-openssh -o hoge_rsa.pub\r\n```\r\n\r\n[参考](https://siguniang.wordpress.com/2014/03/15/how-to-convert-ppk-key-to-openssh-key-under-linux/)\r\n\r\n### パーミッションの変更\r\n\r\nsshの鍵ファイルのパーミッションが適切に設定されてないとwarningと共に終了する場合があるので次のコマンドでパーミッションを変更する。\r\n\r\n```\r\nsudo chmod 600 hoge_rsa\r\n```\r\n\r\n（たぶん秘密鍵のほうだけでいいはず）",
    "body_html": "<h2 id=\"0-1-0\" name=\"0-1-0\">\n<a class=\"anchor\" href=\"#0-1-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"前提\"> &gt; 前提</span></a>前提</h2>\n\n<p>パスフレーズを知ってる<code>.ppk</code>がある</p>\n\n<h2 id=\"0-2-0\" name=\"0-2-0\">\n<a class=\"anchor\" href=\"#0-2-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"背景\"> &gt; 背景</span></a>背景</h2>\n\n<p>SFTP接続のときに使うクライアントによって対応してる鍵の形式が違う。<code>.ppk</code>もらったけど対応してないクライアントで接続したいときには変換が必要。</p>\n\n<h2 id=\"0-3-0\" name=\"0-3-0\">\n<a class=\"anchor\" href=\"#0-3-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"手順\"> &gt; 手順</span></a>手順</h2>\n\n<p>homebrewで<code>putty</code>をインストールする。このとき<code>--HEAD</code>オプションを指定しないと変換の際にエラーが出て変換がうまくいかない。</p>\n\n<p>(<a target=\"_blank\" href=\"https://github.com/Homebrew/homebrew/issues/25734\">homebrew/issues/25734</a>)</p>\n\n<h3 id=\"0-3-1\" name=\"0-3-1\">\n<a class=\"anchor\" href=\"#0-3-1\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"puttyのインストール\"> &gt; puttyのインストール</span></a>puttyのインストール</h3>\n<div class=\"code-block\">\n<pre class=\"highlight plaintext\"><code>brew install --HEAD putty\n</code></pre>\n</div>\n<h3 id=\"0-3-2\" name=\"0-3-2\">\n<a class=\"anchor\" href=\"#0-3-2\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"変換\"> &gt; 変換</span></a>変換</h3>\n\n<p><code>puttygen</code>コマンドで変換を行う。（インストール直後はパスが通ってないかもなので新しいターミナルを開く必要があるかも）</p>\n\n<p>次のコマンドで変換。コマンド実行時にpassを聞かれるので入力する。</p>\n\n<h4>秘密鍵への変換</h4>\n<div class=\"code-block\">\n<pre class=\"highlight plaintext\"><code>puttygen hoge.ppk -O private-openssh -o hoge_rsa\n</code></pre>\n</div>\n<h4>公開鍵への変換</h4>\n<div class=\"code-block\">\n<pre class=\"highlight plaintext\"><code>puttygen hoge.ppk -O public-openssh -o hoge_rsa.pub\n</code></pre>\n</div>\n<p><a target=\"_blank\" href=\"https://siguniang.wordpress.com/2014/03/15/how-to-convert-ppk-key-to-openssh-key-under-linux/\">参考</a></p>\n\n<h3 id=\"0-3-3\" name=\"0-3-3\">\n<a class=\"anchor\" href=\"#0-3-3\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"パーミッションの変更\"> &gt; パーミッションの変更</span></a>パーミッションの変更</h3>\n\n<p>sshの鍵ファイルのパーミッションが適切に設定されてないとwarningと共に終了する場合があるので次のコマンドでパーミッションを変更する。</p>\n<div class=\"code-block\">\n<pre class=\"highlight plaintext\"><code>sudo chmod 600 hoge_rsa\n</code></pre>\n</div>\n<p>（たぶん秘密鍵のほうだけでいいはず）</p>\n",
    "created_at": "2015-07-23T17:06:42+09:00",
    "message": "Update post.",
    "kind": "stock",
    "comments_count": 0,
    "tasks_count": 0,
    "done_tasks_count": 0,
    "url": "https://pxgrid.esa.io/posts/592",
    "updated_at": "2015-07-23T17:08:55+09:00",
    "tags": [],
    "category": "メモ/SSH",
    "revision_number": 2,
    "created_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "updated_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "stargazers_count": 0,
    "watchers_count": 1,
    "star": false,
    "watch": true,
    "_uid": 1446574748029,
    "_modified_at": ""
  },
  {
    "number": 576,
    "name": "About fly",
    "full_name": "メモ/JavaScript/About fly",
    "wip": false,
    "body_md": "![fly.png (30.4 kB)](https://img.esa.io/uploads/production/attachments/1700/2015/07/15/4496/9d416a2b-e931-40fa-bb65-8075b5e2ac6b.png)\r\n\r\n#### PixelGrid社内勉強会 2015/07/15\r\n#### [@nakajmg](https://twitter.com/nakajmg)\r\n\r\n## [git.io/fly](https://git.io/fly)\r\n\r\n## about \r\n\r\n* New Generation Build System\r\n* similar to gulp\r\n* pipeline-like sequences\r\n* tasks can be written by ES5/6/7\r\n\r\n## difference\r\n* code style\r\n* not stream based\r\n* es6 features\r\n\r\n## feature\r\n\r\n* fly based in [co](https://github.com/tj/co).\r\n* generatos\r\n* promises\r\n\r\n## Flyfile example\r\n\r\n```js\r\nexport function* scripts () {\r\n  yield this\r\n    .source(paths.scripts)\r\n    .babel({ stage: 0 })\r\n    .uglify()\r\n    .concat(\"all.min.js\")\r\n    .target(\"build/js\")\r\n}\r\n```\r\n\r\n## installation\r\n\r\nFly require Node v0.11 >=. \r\n(using `generators` & `promises`)\r\n\r\nIt actually means require io.js?\r\n\r\n## install io.js\r\n\r\n```\r\nnodebrew install-binary io@v2.3.4\r\n```\r\nthen\r\n```\r\nnodebrew use io@v2.3.4\r\n```\r\n\r\n## install fly\r\n```\r\nnpm i -g fly\r\n```\r\n\r\n## Use fly\r\n\r\nCreate Flyfile then write tasks using plugin. (e.g. fly-babel)\r\n\r\n```\r\nnpm i -D fly-babel\r\n```\r\n\r\n## Write tasks\r\n\r\nPlugins are automatically load\r\n\r\n```js\r\nconst paths = {\r\n  js: [\"src/**/*.js\"]\r\n};\r\n\r\nexport default function* () {\r\n  yield this.clear(\"dist\");\r\n  this.watch(paths.js, [\"babel\"]);\r\n}\r\n\r\nexport function* babel () {\r\n  yield this\r\n    .source(paths.js)\r\n    .babel({ stage: 0})\r\n    .concat(\"all.min.js\")\r\n    .target(\"dist\");\r\n}\r\n```\r\n\r\n## Exec tasks\r\n\r\n```\r\nfly [options] [taskname]\r\n```\r\n\r\n## API\r\n\r\n* source\r\n* target\r\n* watch\r\n* start\r\n* concat\r\n* more...\r\n\r\n## Plugins\r\n\r\n* [www.npmjs.com/search?q=fly-](https://www.npmjs.com/search?q=fly-&page=1)\r\n\r\n## Looks easy\r\n\r\n[fly-babel/index.js](https://github.com/bucaran/fly-babel/blob/4f0d77fbb09ab7364f7bdf81e1cbd02aae12ae80/index.js)\r\n\r\n```js\r\nmodule.exports = function () {\r\n  return this.filter(\"babel\", (src, opts) => {\r\n    try { return require(\"babel\").transform(src, opts).code }\r\n    catch (e) { throw e }\r\n  }, { ext: \".js\" })\r\n}\r\n```\r\n\r\n## 　\r\n\r\n### Look forward to future development!",
    "body_html": "<p><a href=\"https://img.esa.io/uploads/production/attachments/1700/2015/07/15/4496/9d416a2b-e931-40fa-bb65-8075b5e2ac6b.png\" target=\"_blank\"><img src=\"https://img.esa.io/uploads/production/attachments/1700/2015/07/15/4496/9d416a2b-e931-40fa-bb65-8075b5e2ac6b.png\" alt=\"fly.png (30.4 kB)\"></a></p>\n\n<h4>PixelGrid社内勉強会 2015/07/15</h4>\n\n<h4><a target=\"_blank\" href=\"https://twitter.com/nakajmg\">@nakajmg</a></h4>\n\n<h2 id=\"0-1-0\" name=\"0-1-0\">\n<a class=\"anchor\" href=\"#0-1-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"git.io/fly\"> &gt; git.io/fly</span></a><a target=\"_blank\" href=\"https://git.io/fly\">git.io/fly</a>\n</h2>\n\n<h2 id=\"0-2-0\" name=\"0-2-0\">\n<a class=\"anchor\" href=\"#0-2-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"about\"> &gt; about</span></a>about</h2>\n\n<ul>\n<li>New Generation Build System</li>\n<li>similar to gulp</li>\n<li>pipeline-like sequences</li>\n<li>tasks can be written by ES5/6/7</li>\n</ul>\n\n<h2 id=\"0-3-0\" name=\"0-3-0\">\n<a class=\"anchor\" href=\"#0-3-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"difference\"> &gt; difference</span></a>difference</h2>\n\n<ul>\n<li>code style</li>\n<li>not stream based</li>\n<li>es6 features</li>\n</ul>\n\n<h2 id=\"0-4-0\" name=\"0-4-0\">\n<a class=\"anchor\" href=\"#0-4-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"feature\"> &gt; feature</span></a>feature</h2>\n\n<ul>\n<li>fly based in <a target=\"_blank\" href=\"https://github.com/tj/co\">co</a>.</li>\n<li>generatos</li>\n<li>promises</li>\n</ul>\n\n<h2 id=\"0-5-0\" name=\"0-5-0\">\n<a class=\"anchor\" href=\"#0-5-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"Flyfile example\"> &gt; Flyfile example</span></a>Flyfile example</h2>\n<div class=\"code-block\">\n<pre class=\"highlight javascript\"><code><span class=\"kr\">export</span> <span class=\"kd\">function</span><span class=\"o\">*</span> <span class=\"nx\">scripts</span> <span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"k\">yield</span> <span class=\"k\">this</span>\n    <span class=\"p\">.</span><span class=\"nx\">source</span><span class=\"p\">(</span><span class=\"nx\">paths</span><span class=\"p\">.</span><span class=\"nx\">scripts</span><span class=\"p\">)</span>\n    <span class=\"p\">.</span><span class=\"nx\">babel</span><span class=\"p\">({</span> <span class=\"na\">stage</span><span class=\"p\">:</span> <span class=\"mi\">0</span> <span class=\"p\">})</span>\n    <span class=\"p\">.</span><span class=\"nx\">uglify</span><span class=\"p\">()</span>\n    <span class=\"p\">.</span><span class=\"nx\">concat</span><span class=\"p\">(</span><span class=\"s2\">\"all.min.js\"</span><span class=\"p\">)</span>\n    <span class=\"p\">.</span><span class=\"nx\">target</span><span class=\"p\">(</span><span class=\"s2\">\"build/js\"</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</code></pre>\n</div>\n<h2 id=\"0-6-0\" name=\"0-6-0\">\n<a class=\"anchor\" href=\"#0-6-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"installation\"> &gt; installation</span></a>installation</h2>\n\n<p>Fly require Node v0.11 &gt;=. <br>\n(using <code>generators</code> &amp; <code>promises</code>)</p>\n\n<p>It actually means require io.js?</p>\n\n<h2 id=\"0-7-0\" name=\"0-7-0\">\n<a class=\"anchor\" href=\"#0-7-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"install io.js\"> &gt; install io.js</span></a>install io.js</h2>\n<div class=\"code-block\">\n<pre class=\"highlight plaintext\"><code>nodebrew install-binary io@v2.3.4\n</code></pre>\n</div>\n<p>then</p>\n<div class=\"code-block\">\n<pre class=\"highlight plaintext\"><code>nodebrew use io@v2.3.4\n</code></pre>\n</div>\n<h2 id=\"0-8-0\" name=\"0-8-0\">\n<a class=\"anchor\" href=\"#0-8-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"install fly\"> &gt; install fly</span></a>install fly</h2>\n<div class=\"code-block\">\n<pre class=\"highlight plaintext\"><code>npm i -g fly\n</code></pre>\n</div>\n<h2 id=\"0-9-0\" name=\"0-9-0\">\n<a class=\"anchor\" href=\"#0-9-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"Use fly\"> &gt; Use fly</span></a>Use fly</h2>\n\n<p>Create Flyfile then write tasks using plugin. (e.g. fly-babel)</p>\n<div class=\"code-block\">\n<pre class=\"highlight plaintext\"><code>npm i -D fly-babel\n</code></pre>\n</div>\n<h2 id=\"0-10-0\" name=\"0-10-0\">\n<a class=\"anchor\" href=\"#0-10-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"Write tasks\"> &gt; Write tasks</span></a>Write tasks</h2>\n\n<p>Plugins are automatically load</p>\n<div class=\"code-block\">\n<pre class=\"highlight javascript\"><code><span class=\"kr\">const</span> <span class=\"nx\">paths</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"na\">js</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"src/**/*.js\"</span><span class=\"p\">]</span>\n<span class=\"p\">};</span>\n\n<span class=\"kr\">export</span> <span class=\"k\">default</span> <span class=\"kd\">function</span><span class=\"o\">*</span> <span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"k\">yield</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">clear</span><span class=\"p\">(</span><span class=\"s2\">\"dist\"</span><span class=\"p\">);</span>\n  <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">watch</span><span class=\"p\">(</span><span class=\"nx\">paths</span><span class=\"p\">.</span><span class=\"nx\">js</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">\"babel\"</span><span class=\"p\">]);</span>\n<span class=\"p\">}</span>\n\n<span class=\"kr\">export</span> <span class=\"kd\">function</span><span class=\"o\">*</span> <span class=\"nx\">babel</span> <span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"k\">yield</span> <span class=\"k\">this</span>\n    <span class=\"p\">.</span><span class=\"nx\">source</span><span class=\"p\">(</span><span class=\"nx\">paths</span><span class=\"p\">.</span><span class=\"nx\">js</span><span class=\"p\">)</span>\n    <span class=\"p\">.</span><span class=\"nx\">babel</span><span class=\"p\">({</span> <span class=\"na\">stage</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">})</span>\n    <span class=\"p\">.</span><span class=\"nx\">concat</span><span class=\"p\">(</span><span class=\"s2\">\"all.min.js\"</span><span class=\"p\">)</span>\n    <span class=\"p\">.</span><span class=\"nx\">target</span><span class=\"p\">(</span><span class=\"s2\">\"dist\"</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre>\n</div>\n<h2 id=\"0-11-0\" name=\"0-11-0\">\n<a class=\"anchor\" href=\"#0-11-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"Exec tasks\"> &gt; Exec tasks</span></a>Exec tasks</h2>\n<div class=\"code-block\">\n<pre class=\"highlight plaintext\"><code>fly [options] [taskname]\n</code></pre>\n</div>\n<h2 id=\"0-12-0\" name=\"0-12-0\">\n<a class=\"anchor\" href=\"#0-12-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"API\"> &gt; API</span></a>API</h2>\n\n<ul>\n<li>source</li>\n<li>target</li>\n<li>watch</li>\n<li>start</li>\n<li>concat</li>\n<li>more...</li>\n</ul>\n\n<h2 id=\"0-13-0\" name=\"0-13-0\">\n<a class=\"anchor\" href=\"#0-13-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"Plugins\"> &gt; Plugins</span></a>Plugins</h2>\n\n<ul>\n<li><a target=\"_blank\" href=\"https://www.npmjs.com/search?q=fly-&amp;page=1\">www.npmjs.com/search?q=fly-</a></li>\n</ul>\n\n<h2 id=\"0-14-0\" name=\"0-14-0\">\n<a class=\"anchor\" href=\"#0-14-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"Looks easy\"> &gt; Looks easy</span></a>Looks easy</h2>\n\n<p><a target=\"_blank\" href=\"https://github.com/bucaran/fly-babel/blob/4f0d77fbb09ab7364f7bdf81e1cbd02aae12ae80/index.js\">fly-babel/index.js</a></p>\n<div class=\"code-block\">\n<pre class=\"highlight javascript\"><code><span class=\"nx\">module</span><span class=\"p\">.</span><span class=\"nx\">exports</span> <span class=\"o\">=</span> <span class=\"kd\">function</span> <span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">filter</span><span class=\"p\">(</span><span class=\"s2\">\"babel\"</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">src</span><span class=\"p\">,</span> <span class=\"nx\">opts</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"k\">try</span> <span class=\"p\">{</span> <span class=\"k\">return</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s2\">\"babel\"</span><span class=\"p\">).</span><span class=\"nx\">transform</span><span class=\"p\">(</span><span class=\"nx\">src</span><span class=\"p\">,</span> <span class=\"nx\">opts</span><span class=\"p\">).</span><span class=\"nx\">code</span> <span class=\"p\">}</span>\n    <span class=\"k\">catch</span> <span class=\"p\">(</span><span class=\"nx\">e</span><span class=\"p\">)</span> <span class=\"p\">{</span> <span class=\"k\">throw</span> <span class=\"nx\">e</span> <span class=\"p\">}</span>\n  <span class=\"p\">},</span> <span class=\"p\">{</span> <span class=\"na\">ext</span><span class=\"p\">:</span> <span class=\"s2\">\".js\"</span> <span class=\"p\">})</span>\n<span class=\"p\">}</span>\n</code></pre>\n</div>\n<h2 id=\"0-15-0\" name=\"0-15-0\">\n<a class=\"anchor\" href=\"#0-15-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"　\"> &gt; 　</span></a>　</h2>\n\n<h3 id=\"0-15-1\" name=\"0-15-1\">\n<a class=\"anchor\" href=\"#0-15-1\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"Look forward to future development!\"> &gt; Look forward to future development!</span></a>Look forward to future development!</h3>\n",
    "created_at": "2015-07-14T08:40:28+09:00",
    "message": "Update post.",
    "kind": "stock",
    "comments_count": 1,
    "tasks_count": 0,
    "done_tasks_count": 0,
    "url": "https://pxgrid.esa.io/posts/576",
    "updated_at": "2015-07-15T13:25:43+09:00",
    "tags": [],
    "category": "メモ/JavaScript",
    "revision_number": 25,
    "created_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "updated_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "stargazers_count": 0,
    "watchers_count": 1,
    "star": false,
    "watch": true,
    "_uid": 1446574748031,
    "_modified_at": ""
  },
  {
    "number": 580,
    "name": "15",
    "full_name": "社内勉強会/2015/07/15",
    "wip": false,
    "body_md": "## @y-maru \r\n\r\n![image.png (148.3 kB)](https://img.esa.io/uploads/production/attachments/1700/2015/07/15/4502/ef6e313e-aac5-46de-8afc-d144f6826b0c.png)\r\n\r\n- Apple Watchってどうよ\r\n- 発売して3ヶ月たった（2015年7月\r\n- Retinaディスプレイ\r\n- ブラウザ乗ってません\r\n- メールは微妙\r\n- HTMLメールみれない\r\n    - テキストバージョンで読めるのもある\r\n- CodeGridのメルマガは読める\r\n    - URLはたたけない\r\n    - 文字量が多いと表示できない\r\n        - 1記事目の途中くらいまで...\r\n- 誰が使うの？\r\n    - iPhoneありき。iPhoneないと通信できないし、役に立たない。\r\n    - 1日じゅうMacとか見れる人にはそもそもいらないのでは...\r\n        - 買ってよかったのか...?\r\n- AppleWatchのキラーコンテンツ\r\n    - Siri便利\r\n        - 30分後に起こして！\r\n        - クラウンを押してしゃべるか、Hey Siri！でSiriを起動できる。\r\n- WatchOS2\r\n    - サードパーティ製のアプリをネイティブ化できるので、iPhone不要になるかも\r\n\r\n[覗き込むとあら不思議！20倍の大画面が広がるレノボのスマートウォッチを試してみた](http://weekly.ascii.jp/elem/000/000/342/342024/) とか面白いなぁと思います。\r\n\r\n## @yomotsu \r\n\r\n![image.png (24.6 kB)](https://img.esa.io/uploads/production/attachments/1700/2015/07/15/4502/ac02e52e-1ede-4dad-ae5f-578cf536694f.png)\r\n\r\n- トライアンギュレーションの話\r\n- WebGLだと三角形しか表現できない\r\n    - 四角形であっても、それを三角形に分解する必要ある\r\n- アルゴリズムはまだ理解できてないので、次回にでも\r\n- これを発展させると、最短距離を求めたりできる\r\n\r\n## @leader22 \r\n\r\n![image.png (90.6 kB)](https://img.esa.io/uploads/production/attachments/1700/2015/07/15/4502/4ac4e55f-ce02-43c3-afa8-5742aa614c8b.png)\r\n\r\n- 某CA社であった勉強会であった面白かった内容\r\n- STFの話 https://github.com/openstf/stf\r\n    - STFをインストールしたマシンに、Androidをつなげておくと、デバッグに役立つ\r\n    - ブラウザ上で、Androidをいじれる（電源押したり）\r\n    - 画面キャプチャとか動画も取れる\r\n    - 某CA社では170端末つながっている\r\n    - 誰が使うの？\r\n        - 人海戦術で個々人が持ってる端末でデバッグすればいいのでは？\r\n        - デバッグを仕事にしてる人達は、興味を持ってそう\r\n    - Androidを並べるための棚作りもGitHubで解説されている\r\n\r\n## @nakajmg \r\n\r\n\r\n![image.png (19.3 kB)](https://img.esa.io/uploads/production/attachments/1700/2015/07/15/4502/12e61a74-94e7-4b33-981c-73cc325ebeb9.png)\r\n\r\n\r\n[発表資料](https://pxgrid.esa.io/posts/576)\r\n\r\n- flyの話 https://github.com/flyjs/fly\r\n    - 新しいタスクランナー\r\n    - ES5,6,7の機能が使える\r\n    - 現時点のstableなnodeでは動かない\r\n    - gulpっぽくかける\r\n    - `npm install fly` で io.js つかうのがよさそう\r\n    - プラグインは、まだ数がない https://github.com/flyjs/fly/wiki#plugins\r\n        - 中身はこんなん https://github.com/morishitter/fly-stylus/blob/master/index.js\r\n- @watildeが興味津々\r\n    - @watildeが作ってくれた日本語のドキュメントもある https://github.com/flyjs/fly/blob/master/docs/README.ja.md\r\n- 本気で使うにはまだ早そう\r\n\r\n## @cancer \r\n\r\n\r\n![image.png (19.0 kB)](https://img.esa.io/uploads/production/attachments/1700/2015/07/15/4502/70194266-7239-4790-9645-536cf6fa1c37.png)\r\n\r\n\r\n[#523:  CodeGrid/ネタ案/AngularJSのあれってどうやるの？](/posts/523) \r\n\r\n- 前回の続き\r\n    - AngularでSelect要素を扱う\r\n    - $scopeに配列渡して、select要素のng-modelに指定するとoption作ってくれる\r\n    - ng-option色々かける\r\n        - ややこしい\r\n        - [Angular.JSでselect要素にoptionをぶら下げる色々な方法](http://www.walbrix.com/jp/blog/2014-03-angularjs-select-options.html)\r\n\r\n```js\r\n$scope.jmonths = {\r\n  \"睦月\":1,\t\"如月\":2,\t\"弥生\":3,\t\"卯月\":4,\r\n  \"皐月\":5,\t\"水無月\":6,\t\"文月\":7,\t\"葉月\":8,\r\n  \"長月\":9,\t\"神無月\":10,\t\"霜月\":11,\t\"師走\":12\r\n};\r\n$scope.selectedMonth = 1;\r\n```\r\n\r\n```html\r\n<select ng-model=\"selectedMonth\" ng-options=\"num as name for (name,num) in jmonths\"></select>\r\n選択された値 = {{ selectedMonth }}\r\n```\r\n\r\n## @tacamy \r\n\r\n[#554:  クライアント案件/外注ガイドライン](/posts/554) \r\n\r\n- 外注ガイドライン作りたい\r\n- 意見ください\r\n- 背景\r\n    - 外にお願いした時に、HTML/CSSに全面的な修正が入った\r\n    - あらかじめHTML/CSSを作っておいたほうが良かった？ガイドライン必要？\r\n- 確認とか、クオリティ担保って誰がやるの？\r\n- お願いするときに、ガイドラインを渡して\r\n    - コードフォーマット\r\n        - editorconfigとかJSCS\r\n    - スタイルガイド\r\n        - モジュール一覧\r\n    - タスクランナー\r\n        - GruntでもGulpでもよい。ただしベースは弊社でやる\r\n        - npm run script使って、GruntとかGulpを気にしないようにする\r\n        - npm installしたら実行環境が整うようにしておきたい（postinstallでBundler使ったり）\r\n    - CSSの設計について\r\n    - HTMLの書き方\r\n    - JSの書き方どうする？書く？\r\n\r\n@oosugi 「ガイドラインを作ったとして機能するのか？できない人はガイドライン読んでもわからないとおもう。外注向けのドキュメントというよりは、社内用のガイドラインを作って、それを外注に見せると良さそう。お客さんに見せるのにも良さそう。」\r\n@kyosuke「ある程度はあっても良さそう。」\r\n\r\n※あんまり僕は気にしてないけど外注と害虫の読みが同じだから「ガイチュウ」じゃなくて「」\r\n\r\n## @kyosuke \r\n\r\n![image.png (25.6 kB)](https://img.esa.io/uploads/production/attachments/1700/2015/07/15/4502/1f650282-72d8-4de6-8791-346cfdd8b229.png)\r\n\r\n- Trello Business Classの話\r\n- カード型のタスク管理ツール（カンバン風）\r\n- Trello使おうと思った理由\r\n    - お客さんとのやりとりにBaseCamp使ってるがめんどい\r\n        - 気づきづらい\r\n        - ToDo微妙\r\n        - 気づいたらタスクが積まれている\r\n    - Slackに対応してる\r\n        - 通知を細かく指示できる\r\n    - コード以外のタスク管理をする必要がある\r\n    - APIがある\r\n        - [#578:  メモ/Trello/Trello APIを使う](/posts/578) \r\n    - 検索条件を保存できる",
    "body_html": "<h2 id=\"0-1-0\" name=\"0-1-0\">\n<a class=\"anchor\" href=\"#0-1-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"__at__y-maru\"> &gt; __at__y-maru</span></a><a href=\"/users/y-maru\" class=\"user-mention\" title=\"y-maru\" target=\"_blank\">@y-maru</a>\n</h2>\n\n<p><a href=\"https://img.esa.io/uploads/production/attachments/1700/2015/07/15/4502/ef6e313e-aac5-46de-8afc-d144f6826b0c.png\" target=\"_blank\"><img src=\"https://img.esa.io/uploads/production/attachments/1700/2015/07/15/4502/ef6e313e-aac5-46de-8afc-d144f6826b0c.png\" alt=\"image.png (148.3 kB)\"></a></p>\n\n<ul>\n<li>Apple Watchってどうよ</li>\n<li>発売して3ヶ月たった（2015年7月</li>\n<li>Retinaディスプレイ</li>\n<li>ブラウザ乗ってません</li>\n<li>メールは微妙</li>\n<li>HTMLメールみれない\n\n<ul>\n<li>テキストバージョンで読めるのもある</li>\n</ul>\n</li>\n<li>CodeGridのメルマガは読める\n\n<ul>\n<li>URLはたたけない</li>\n<li>文字量が多いと表示できない\n\n<ul>\n<li>1記事目の途中くらいまで...</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>誰が使うの？\n\n<ul>\n<li>iPhoneありき。iPhoneないと通信できないし、役に立たない。</li>\n<li>1日じゅうMacとか見れる人にはそもそもいらないのでは...\n\n<ul>\n<li>買ってよかったのか...?</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>AppleWatchのキラーコンテンツ\n\n<ul>\n<li>Siri便利\n\n<ul>\n<li>30分後に起こして！</li>\n<li>クラウンを押してしゃべるか、Hey Siri！でSiriを起動できる。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>WatchOS2\n\n<ul>\n<li>サードパーティ製のアプリをネイティブ化できるので、iPhone不要になるかも</li>\n</ul>\n</li>\n</ul>\n\n<p><a target=\"_blank\" href=\"http://weekly.ascii.jp/elem/000/000/342/342024/\">覗き込むとあら不思議！20倍の大画面が広がるレノボのスマートウォッチを試してみた</a> とか面白いなぁと思います。</p>\n\n<h2 id=\"0-2-0\" name=\"0-2-0\">\n<a class=\"anchor\" href=\"#0-2-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"__at__yomotsu\"> &gt; __at__yomotsu</span></a><a href=\"/users/yomotsu\" class=\"user-mention\" title=\"yomotsu\" target=\"_blank\">@yomotsu</a>\n</h2>\n\n<p><a href=\"https://img.esa.io/uploads/production/attachments/1700/2015/07/15/4502/ac02e52e-1ede-4dad-ae5f-578cf536694f.png\" target=\"_blank\"><img src=\"https://img.esa.io/uploads/production/attachments/1700/2015/07/15/4502/ac02e52e-1ede-4dad-ae5f-578cf536694f.png\" alt=\"image.png (24.6 kB)\"></a></p>\n\n<ul>\n<li>トライアンギュレーションの話</li>\n<li>WebGLだと三角形しか表現できない\n\n<ul>\n<li>四角形であっても、それを三角形に分解する必要ある</li>\n</ul>\n</li>\n<li>アルゴリズムはまだ理解できてないので、次回にでも</li>\n<li>これを発展させると、最短距離を求めたりできる</li>\n</ul>\n\n<h2 id=\"0-3-0\" name=\"0-3-0\">\n<a class=\"anchor\" href=\"#0-3-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"__at__leader22\"> &gt; __at__leader22</span></a><a href=\"/users/leader22\" class=\"user-mention\" title=\"leader22\" target=\"_blank\">@leader22</a>\n</h2>\n\n<p><a href=\"https://img.esa.io/uploads/production/attachments/1700/2015/07/15/4502/4ac4e55f-ce02-43c3-afa8-5742aa614c8b.png\" target=\"_blank\"><img src=\"https://img.esa.io/uploads/production/attachments/1700/2015/07/15/4502/4ac4e55f-ce02-43c3-afa8-5742aa614c8b.png\" alt=\"image.png (90.6 kB)\"></a></p>\n\n<ul>\n<li>某CA社であった勉強会であった面白かった内容</li>\n<li>STFの話 <a target=\"_blank\" href=\"https://github.com/openstf/stf\">https://github.com/openstf/stf</a>\n\n<ul>\n<li>STFをインストールしたマシンに、Androidをつなげておくと、デバッグに役立つ</li>\n<li>ブラウザ上で、Androidをいじれる（電源押したり）</li>\n<li>画面キャプチャとか動画も取れる</li>\n<li>某CA社では170端末つながっている</li>\n<li>誰が使うの？\n\n<ul>\n<li>人海戦術で個々人が持ってる端末でデバッグすればいいのでは？</li>\n<li>デバッグを仕事にしてる人達は、興味を持ってそう</li>\n</ul>\n</li>\n<li>Androidを並べるための棚作りもGitHubで解説されている</li>\n</ul>\n</li>\n</ul>\n\n<h2 id=\"0-4-0\" name=\"0-4-0\">\n<a class=\"anchor\" href=\"#0-4-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"__at__nakajmg\"> &gt; __at__nakajmg</span></a><a href=\"/users/nakajmg\" class=\"user-mention\" title=\"nakajmg\" target=\"_blank\">@nakajmg</a>\n</h2>\n\n<p><a href=\"https://img.esa.io/uploads/production/attachments/1700/2015/07/15/4502/12e61a74-94e7-4b33-981c-73cc325ebeb9.png\" target=\"_blank\"><img src=\"https://img.esa.io/uploads/production/attachments/1700/2015/07/15/4502/12e61a74-94e7-4b33-981c-73cc325ebeb9.png\" alt=\"image.png (19.3 kB)\"></a></p>\n\n<p><a target=\"_blank\" href=\"https://pxgrid.esa.io/posts/576\">発表資料</a></p>\n\n<ul>\n<li>flyの話 <a target=\"_blank\" href=\"https://github.com/flyjs/fly\">https://github.com/flyjs/fly</a>\n\n<ul>\n<li>新しいタスクランナー</li>\n<li>ES5,6,7の機能が使える</li>\n<li>現時点のstableなnodeでは動かない</li>\n<li>gulpっぽくかける</li>\n<li>\n<code>npm install fly</code> で io.js つかうのがよさそう</li>\n<li>プラグインは、まだ数がない <a target=\"_blank\" href=\"https://github.com/flyjs/fly/wiki#plugins\">https://github.com/flyjs/fly/wiki#plugins</a>\n\n<ul>\n<li>中身はこんなん <a target=\"_blank\" href=\"https://github.com/morishitter/fly-stylus/blob/master/index.js\">https://github.com/morishitter/fly-stylus/blob/master/index.js</a>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>@watildeが興味津々\n\n<ul>\n<li>@watildeが作ってくれた日本語のドキュメントもある <a target=\"_blank\" href=\"https://github.com/flyjs/fly/blob/master/docs/README.ja.md\">https://github.com/flyjs/fly/blob/master/docs/README.ja.md</a>\n</li>\n</ul>\n</li>\n<li>本気で使うにはまだ早そう</li>\n</ul>\n\n<h2 id=\"0-5-0\" name=\"0-5-0\">\n<a class=\"anchor\" href=\"#0-5-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"__at__cancer\"> &gt; __at__cancer</span></a><a href=\"/users/cancer\" class=\"user-mention\" title=\"cancer\" target=\"_blank\">@cancer</a>\n</h2>\n\n<p><a href=\"https://img.esa.io/uploads/production/attachments/1700/2015/07/15/4502/70194266-7239-4790-9645-536cf6fa1c37.png\" target=\"_blank\"><img src=\"https://img.esa.io/uploads/production/attachments/1700/2015/07/15/4502/70194266-7239-4790-9645-536cf6fa1c37.png\" alt=\"image.png (19.0 kB)\"></a></p>\n\n<p><a target=\"_blank\" href=\"/posts/523\">#523:  CodeGrid/ネタ案/AngularJSのあれってどうやるの？</a> </p>\n\n<ul>\n<li>前回の続き\n\n<ul>\n<li>AngularでSelect要素を扱う</li>\n<li>$scopeに配列渡して、select要素のng-modelに指定するとoption作ってくれる</li>\n<li>ng-option色々かける\n\n<ul>\n<li>ややこしい</li>\n<li><a target=\"_blank\" href=\"http://www.walbrix.com/jp/blog/2014-03-angularjs-select-options.html\">Angular.JSでselect要素にoptionをぶら下げる色々な方法</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<div class=\"code-block\">\n<pre class=\"highlight javascript\"><code><span class=\"nx\">$scope</span><span class=\"p\">.</span><span class=\"nx\">jmonths</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"s2\">\"睦月\"</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"p\">,</span>   <span class=\"s2\">\"如月\"</span><span class=\"p\">:</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s2\">\"弥生\"</span><span class=\"p\">:</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s2\">\"卯月\"</span><span class=\"p\">:</span><span class=\"mi\">4</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"皐月\"</span><span class=\"p\">:</span><span class=\"mi\">5</span><span class=\"p\">,</span>   <span class=\"s2\">\"水無月\"</span><span class=\"p\">:</span><span class=\"mi\">6</span><span class=\"p\">,</span>  <span class=\"s2\">\"文月\"</span><span class=\"p\">:</span><span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"s2\">\"葉月\"</span><span class=\"p\">:</span><span class=\"mi\">8</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"長月\"</span><span class=\"p\">:</span><span class=\"mi\">9</span><span class=\"p\">,</span>   <span class=\"s2\">\"神無月\"</span><span class=\"p\">:</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"s2\">\"霜月\"</span><span class=\"p\">:</span><span class=\"mi\">11</span><span class=\"p\">,</span>    <span class=\"s2\">\"師走\"</span><span class=\"p\">:</span><span class=\"mi\">12</span>\n<span class=\"p\">};</span>\n<span class=\"nx\">$scope</span><span class=\"p\">.</span><span class=\"nx\">selectedMonth</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">;</span>\n</code></pre>\n</div>\n<div class=\"code-block\">\n<pre class=\"highlight html\"><code><span class=\"nt\">&lt;select</span> <span class=\"na\">ng-model=</span><span class=\"s\">\"selectedMonth\"</span> <span class=\"na\">ng-options=</span><span class=\"s\">\"num as name for (name,num) in jmonths\"</span><span class=\"nt\">&gt;&lt;/select&gt;</span>\n選択された値 = {{ selectedMonth }}\n</code></pre>\n</div>\n<h2 id=\"0-6-0\" name=\"0-6-0\">\n<a class=\"anchor\" href=\"#0-6-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"__at__tacamy\"> &gt; __at__tacamy</span></a><a href=\"/users/tacamy\" class=\"user-mention\" title=\"tacamy\" target=\"_blank\">@tacamy</a>\n</h2>\n\n<p><a target=\"_blank\" href=\"/posts/554\">#554:  クライアント案件/外注ガイドライン</a> </p>\n\n<ul>\n<li>外注ガイドライン作りたい</li>\n<li>意見ください</li>\n<li>背景\n\n<ul>\n<li>外にお願いした時に、HTML/CSSに全面的な修正が入った</li>\n<li>あらかじめHTML/CSSを作っておいたほうが良かった？ガイドライン必要？</li>\n</ul>\n</li>\n<li>確認とか、クオリティ担保って誰がやるの？</li>\n<li>お願いするときに、ガイドラインを渡して\n\n<ul>\n<li>コードフォーマット\n\n<ul>\n<li>editorconfigとかJSCS</li>\n</ul>\n</li>\n<li>スタイルガイド\n\n<ul>\n<li>モジュール一覧</li>\n</ul>\n</li>\n<li>タスクランナー\n\n<ul>\n<li>GruntでもGulpでもよい。ただしベースは弊社でやる</li>\n<li>npm run script使って、GruntとかGulpを気にしないようにする</li>\n<li>npm installしたら実行環境が整うようにしておきたい（postinstallでBundler使ったり）</li>\n</ul>\n</li>\n<li>CSSの設計について</li>\n<li>HTMLの書き方</li>\n<li>JSの書き方どうする？書く？</li>\n</ul>\n</li>\n</ul>\n\n<p><a href=\"/users/oosugi\" class=\"user-mention\" title=\"oosugi\" target=\"_blank\">@oosugi</a> 「ガイドラインを作ったとして機能するのか？できない人はガイドライン読んでもわからないとおもう。外注向けのドキュメントというよりは、社内用のガイドラインを作って、それを外注に見せると良さそう。お客さんに見せるのにも良さそう。」<br>\n<a href=\"/users/kyosuke\" class=\"user-mention\" title=\"kyosuke\" target=\"_blank\">@kyosuke</a>「ある程度はあっても良さそう。」</p>\n\n<p>※あんまり僕は気にしてないけど外注と害虫の読みが同じだから「ガイチュウ」じゃなくて「」</p>\n\n<h2 id=\"0-7-0\" name=\"0-7-0\">\n<a class=\"anchor\" href=\"#0-7-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"__at__kyosuke\"> &gt; __at__kyosuke</span></a><a href=\"/users/kyosuke\" class=\"user-mention\" title=\"kyosuke\" target=\"_blank\">@kyosuke</a>\n</h2>\n\n<p><a href=\"https://img.esa.io/uploads/production/attachments/1700/2015/07/15/4502/1f650282-72d8-4de6-8791-346cfdd8b229.png\" target=\"_blank\"><img src=\"https://img.esa.io/uploads/production/attachments/1700/2015/07/15/4502/1f650282-72d8-4de6-8791-346cfdd8b229.png\" alt=\"image.png (25.6 kB)\"></a></p>\n\n<ul>\n<li>Trello Business Classの話</li>\n<li>カード型のタスク管理ツール（カンバン風）</li>\n<li>Trello使おうと思った理由\n\n<ul>\n<li>お客さんとのやりとりにBaseCamp使ってるがめんどい\n\n<ul>\n<li>気づきづらい</li>\n<li>ToDo微妙</li>\n<li>気づいたらタスクが積まれている</li>\n</ul>\n</li>\n<li>Slackに対応してる\n\n<ul>\n<li>通知を細かく指示できる</li>\n</ul>\n</li>\n<li>コード以外のタスク管理をする必要がある</li>\n<li>APIがある\n\n<ul>\n<li>\n<a target=\"_blank\" href=\"/posts/578\">#578:  メモ/Trello/Trello APIを使う</a> </li>\n</ul>\n</li>\n<li>検索条件を保存できる</li>\n</ul>\n</li>\n</ul>\n",
    "created_at": "2015-07-15T10:53:12+09:00",
    "message": "Update post.",
    "kind": "stock",
    "comments_count": 0,
    "tasks_count": 0,
    "done_tasks_count": 0,
    "url": "https://pxgrid.esa.io/posts/580",
    "updated_at": "2015-07-15T12:05:18+09:00",
    "tags": [],
    "category": "社内勉強会/2015/07",
    "revision_number": 23,
    "created_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "updated_by": {
      "name": "坂巻翔大郎",
      "screen_name": "geckotang",
      "icon": "https://img.esa.io/uploads/production/users/4502/icon/thumb_m_cd33fe458f994c996691ae5bf5bb6060.jpg"
    },
    "stargazers_count": 0,
    "watchers_count": 2,
    "star": false,
    "watch": true,
    "_uid": 1446574748032,
    "_modified_at": ""
  },
  {
    "number": 461,
    "name": "README",
    "full_name": "社内勉強会/README",
    "wip": false,
    "body_md": "## 開催スケジュール\r\n\r\n* 第一、第三水曜日\r\n  * 2015/3/4リスタート\r\n* 10:45集合\r\n* 11:00開始 〜\r\n* 〜11:45終了\r\n* 質疑=>雑談=>ランチ\r\n\r\n## グループ\r\n\r\n### グループA\r\n\r\n* cancer\r\n* takazudo\r\n* yomotsu\r\n* tacamy\r\n* nakajmg\r\n* leader22\r\n* y-maru\r\n\r\n### グループB\r\n* ykhs\r\n* geckotang\r\n* soto\r\n* 5509\r\n* kyosuke\r\n* obara\r\n* cyokodog\r\n* oosugi\r\n\r\n## :clock1:発表時間\r\n\r\n* 最長5分間を厳守:white_check_mark:\r\n* 5分使い切る必要はない\r\n* 間に合わないなら続きor捕捉をesaに書く:book:\r\n\r\n## :memo:発表内容\r\n\r\n* なんでもよし:dancers:\r\n* 「何が言いたいのか」が伝わるようにするとGood:ok_woman:\r\n* スライドがなくてもよい（何かしらの画面を写して話すなど）\r\n\r\n## ほか\r\n\r\n発表しないグループの中から以下を選出\r\n\r\n* タイムキーパー\r\n* 議事録を書く人\r\n",
    "body_html": "<h2 id=\"0-1-0\" name=\"0-1-0\">\n<a class=\"anchor\" href=\"#0-1-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"開催スケジュール\"> &gt; 開催スケジュール</span></a>開催スケジュール</h2>\n\n<ul>\n<li>第一、第三水曜日\n\n<ul>\n<li>2015/3/4リスタート</li>\n</ul>\n</li>\n<li>10:45集合</li>\n<li>11:00開始 〜</li>\n<li>〜11:45終了</li>\n<li>質疑=&gt;雑談=&gt;ランチ</li>\n</ul>\n\n<h2 id=\"0-2-0\" name=\"0-2-0\">\n<a class=\"anchor\" href=\"#0-2-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"グループ\"> &gt; グループ</span></a>グループ</h2>\n\n<h3 id=\"0-2-1\" name=\"0-2-1\">\n<a class=\"anchor\" href=\"#0-2-1\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"グループA\"> &gt; グループA</span></a>グループA</h3>\n\n<ul>\n<li>cancer</li>\n<li>takazudo</li>\n<li>yomotsu</li>\n<li>tacamy</li>\n<li>nakajmg</li>\n<li>leader22</li>\n<li>y-maru</li>\n</ul>\n\n<h3 id=\"0-2-2\" name=\"0-2-2\">\n<a class=\"anchor\" href=\"#0-2-2\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"グループB\"> &gt; グループB</span></a>グループB</h3>\n\n<ul>\n<li>ykhs</li>\n<li>geckotang</li>\n<li>soto</li>\n<li>5509</li>\n<li>kyosuke</li>\n<li>obara</li>\n<li>cyokodog</li>\n<li>oosugi</li>\n</ul>\n\n<h2 id=\"0-3-0\" name=\"0-3-0\">\n<a class=\"anchor\" href=\"#0-3-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"__colon__clock1__colon__発表時間\"> &gt; __colon__clock1__colon__発表時間</span></a>:clock1:発表時間</h2>\n\n<ul>\n<li>最長5分間を厳守:white_check_mark:</li>\n<li>5分使い切る必要はない</li>\n<li>間に合わないなら続きor捕捉をesaに書く:book:</li>\n</ul>\n\n<h2 id=\"0-4-0\" name=\"0-4-0\">\n<a class=\"anchor\" href=\"#0-4-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"__colon__memo__colon__発表内容\"> &gt; __colon__memo__colon__発表内容</span></a>:memo:発表内容</h2>\n\n<ul>\n<li>なんでもよし:dancers:</li>\n<li>「何が言いたいのか」が伝わるようにするとGood:ok_woman:</li>\n<li>スライドがなくてもよい（何かしらの画面を写して話すなど）</li>\n</ul>\n\n<h2 id=\"0-5-0\" name=\"0-5-0\">\n<a class=\"anchor\" href=\"#0-5-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"ほか\"> &gt; ほか</span></a>ほか</h2>\n\n<p>発表しないグループの中から以下を選出</p>\n\n<ul>\n<li>タイムキーパー</li>\n<li>議事録を書く人</li>\n</ul>\n",
    "created_at": "2015-07-02T00:17:55+09:00",
    "message": "Update post.",
    "kind": "stock",
    "comments_count": 0,
    "tasks_count": 0,
    "done_tasks_count": 0,
    "url": "https://pxgrid.esa.io/posts/461",
    "updated_at": "2015-07-14T07:37:15+09:00",
    "tags": [],
    "category": "社内勉強会",
    "revision_number": 11,
    "created_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "updated_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "stargazers_count": 3,
    "watchers_count": 3,
    "star": false,
    "watch": true,
    "_uid": 1446574748033,
    "_modified_at": ""
  },
  {
    "number": 462,
    "name": "18",
    "full_name": "社内勉強会/2015/03/18",
    "wip": false,
    "body_md": "created_at: 2015-03-18 11:54:55 +0900\r\nuser: nakajmg\r\n\r\n## ykhs\r\n* CodeGridのトップページの最適化\r\n* 現状\r\n\t* APIからデータ、フロントでレンダリング\r\n* 記事見えるまでに時間かかる\r\n* 記事400件（でかい）\r\n\t* Backbone\r\n* ファーストビューを早く\r\n\t* 記事一覧が入ったhtmlを返す\r\n* コードが二重化しちゃう\r\n\t* クライアントとサーバで同じ処理\r\n\t* コードの変更も二重になる\r\n* これから\r\n\t* Reactにする？\r\n\r\n\r\n## geckotang\r\n\r\n* ruby-sassからlib-sassへ\r\n\t* sassだけruby依存\r\n* @at-root使えないとか色々あるけど使わないからいいや\r\n\t* @at-rootは書き換えた\r\n* 2000ms->400ms\r\n* ハマった\r\n* 色々してくれてた\r\n\t* クオーテーションの変換してくれてた(rsass)\r\n\t* エスケープされた日本語\r\n\t* 小数点\r\n\t\t* libsassは5位で四捨五入\r\n* wraithで差分が出てないか確認した\r\n\t* だいじょうぶだった\r\n\t* 移行成功\r\n\r\n## kyosuke\r\n\r\n* Harp\r\n* http://harpjs.com/\r\n* すたてぃっくさいと作れる\r\n* 設定済みgulpみたいなの\r\n* 簡単にサイト作れるぜ\r\n* プリプロセッサ（jade coffee）とかいろいろ使える\r\n* ルールが決まってるおかげでboilerplateがいっぱい\r\n\t* https://github.com/harp-boilerplates\r\n\t* 名前指定すれば一発ドン\r\n* Markdown書こうとしたけど機能たりない\r\n\t* \r\n\r\n\r\n## 5509\r\n\r\n* 次回\r\n\r\n\r\n## obara\r\n\r\n* カラーコード\r\n* エンジニアは数字揃えたい\r\n* デザイナーはちゃんと色決めてる\r\n* 細い線とか小さい丸とかになると色の違いが認識しづらい\r\n* 周りの色によって色の濃度が違って見える\r\n\t* 錯覚だ\r\n* \"薄い色\"も周りの色で決まる\r\n\t* 相対的\r\n* 同じっぽい色でも周りの色で見え方変わるから無闇にデザイナーが決めた色を変えるなよ！\r\n\r\n\r\n## soto\r\n\r\n* 親が倒れたとき\r\n* 初動\r\n\t* 入院に必要な物は病院にある\r\n\t* 配偶者はもろい\r\n* 3つ\r\n\t* 医療保険請求\r\n\t* 支払い準備\r\n\t* 退院後のケア\r\n* 医療保険\r\n\t* 証書チェック\r\n\t* 窓口に電話してきいとく\r\n\t* 入院日数とか手術有無で変わる\r\n* 限度額支払い認定証\r\n\t* 一時的な建て替えが必要なくなる\r\n\t* 申請しておく\r\n* 隊員が近づいたら\r\n\t* 後遺症->要介護認定\r\n* 地域包括支援センター\r\n\t* どこにでもある\r\n\t* ここで聞けば間違いない\r\n* まとめ\r\n\t* 手続き面倒\r\n\t* リモートでできるけど最初はしないほうが\r\n\t* 車必要\r\n\r\n\r\n## tacamy\r\n\r\n* GoogleMap API\r\n* v2-v3\r\n\t* iE7+, Android\r\n* 無料で使えるの\r\n\t* 25000件\r\n\t* 無料でアクセスできるページ\r\n\t* 90日連続で制限こえなきゃ大丈夫\r\n* 超過してもそんな高くない\r\n* polymerのテンプレがある\r\n* 続きは合宿で\r\n\r\n",
    "body_html": "<p>created_at: 2015-03-18 11:54:55 +0900<br>\nuser: nakajmg</p>\n\n<h2 id=\"0-1-0\" name=\"0-1-0\">\n<a class=\"anchor\" href=\"#0-1-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"ykhs\"> &gt; ykhs</span></a>ykhs</h2>\n\n<ul>\n<li>CodeGridのトップページの最適化</li>\n<li>現状\n\n<ul>\n<li>APIからデータ、フロントでレンダリング</li>\n</ul>\n</li>\n<li>記事見えるまでに時間かかる</li>\n<li>記事400件（でかい）\n\n<ul>\n<li>Backbone</li>\n</ul>\n</li>\n<li>ファーストビューを早く\n\n<ul>\n<li>記事一覧が入ったhtmlを返す</li>\n</ul>\n</li>\n<li>コードが二重化しちゃう\n\n<ul>\n<li>クライアントとサーバで同じ処理</li>\n<li>コードの変更も二重になる</li>\n</ul>\n</li>\n<li>これから\n\n<ul>\n<li>Reactにする？</li>\n</ul>\n</li>\n</ul>\n\n<h2 id=\"0-2-0\" name=\"0-2-0\">\n<a class=\"anchor\" href=\"#0-2-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"geckotang\"> &gt; geckotang</span></a>geckotang</h2>\n\n<ul>\n<li>ruby-sassからlib-sassへ\n\n<ul>\n<li>sassだけruby依存</li>\n</ul>\n</li>\n<li>@at-root使えないとか色々あるけど使わないからいいや\n\n<ul>\n<li>@at-rootは書き換えた</li>\n</ul>\n</li>\n<li>2000ms-&gt;400ms</li>\n<li>ハマった</li>\n<li>色々してくれてた\n\n<ul>\n<li>クオーテーションの変換してくれてた(rsass)</li>\n<li>エスケープされた日本語</li>\n<li>小数点\n\n<ul>\n<li>libsassは5位で四捨五入</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>wraithで差分が出てないか確認した\n\n<ul>\n<li>だいじょうぶだった</li>\n<li>移行成功</li>\n</ul>\n</li>\n</ul>\n\n<h2 id=\"0-3-0\" name=\"0-3-0\">\n<a class=\"anchor\" href=\"#0-3-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"kyosuke\"> &gt; kyosuke</span></a>kyosuke</h2>\n\n<ul>\n<li>Harp</li>\n<li><a target=\"_blank\" href=\"http://harpjs.com/\">http://harpjs.com/</a></li>\n<li>すたてぃっくさいと作れる</li>\n<li>設定済みgulpみたいなの</li>\n<li>簡単にサイト作れるぜ</li>\n<li>プリプロセッサ（jade coffee）とかいろいろ使える</li>\n<li>ルールが決まってるおかげでboilerplateがいっぱい\n\n<ul>\n<li><a target=\"_blank\" href=\"https://github.com/harp-boilerplates\">https://github.com/harp-boilerplates</a></li>\n<li>名前指定すれば一発ドン</li>\n</ul>\n</li>\n<li>Markdown書こうとしたけど機能たりない\n\n<ul>\n<li>\n</li>\n</ul>\n</li>\n</ul>\n\n<h2 id=\"0-4-0\" name=\"0-4-0\">\n<a class=\"anchor\" href=\"#0-4-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"5509\"> &gt; 5509</span></a>5509</h2>\n\n<ul>\n<li>次回</li>\n</ul>\n\n<h2 id=\"0-5-0\" name=\"0-5-0\">\n<a class=\"anchor\" href=\"#0-5-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"obara\"> &gt; obara</span></a>obara</h2>\n\n<ul>\n<li>カラーコード</li>\n<li>エンジニアは数字揃えたい</li>\n<li>デザイナーはちゃんと色決めてる</li>\n<li>細い線とか小さい丸とかになると色の違いが認識しづらい</li>\n<li>周りの色によって色の濃度が違って見える\n\n<ul>\n<li>錯覚だ</li>\n</ul>\n</li>\n<li>\"薄い色\"も周りの色で決まる\n\n<ul>\n<li>相対的</li>\n</ul>\n</li>\n<li>同じっぽい色でも周りの色で見え方変わるから無闇にデザイナーが決めた色を変えるなよ！</li>\n</ul>\n\n<h2 id=\"0-6-0\" name=\"0-6-0\">\n<a class=\"anchor\" href=\"#0-6-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"soto\"> &gt; soto</span></a>soto</h2>\n\n<ul>\n<li>親が倒れたとき</li>\n<li>初動\n\n<ul>\n<li>入院に必要な物は病院にある</li>\n<li>配偶者はもろい</li>\n</ul>\n</li>\n<li>3つ\n\n<ul>\n<li>医療保険請求</li>\n<li>支払い準備</li>\n<li>退院後のケア</li>\n</ul>\n</li>\n<li>医療保険\n\n<ul>\n<li>証書チェック</li>\n<li>窓口に電話してきいとく</li>\n<li>入院日数とか手術有無で変わる</li>\n</ul>\n</li>\n<li>限度額支払い認定証\n\n<ul>\n<li>一時的な建て替えが必要なくなる</li>\n<li>申請しておく</li>\n</ul>\n</li>\n<li>隊員が近づいたら\n\n<ul>\n<li>後遺症-&gt;要介護認定</li>\n</ul>\n</li>\n<li>地域包括支援センター\n\n<ul>\n<li>どこにでもある</li>\n<li>ここで聞けば間違いない</li>\n</ul>\n</li>\n<li>まとめ\n\n<ul>\n<li>手続き面倒</li>\n<li>リモートでできるけど最初はしないほうが</li>\n<li>車必要</li>\n</ul>\n</li>\n</ul>\n\n<h2 id=\"0-7-0\" name=\"0-7-0\">\n<a class=\"anchor\" href=\"#0-7-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"tacamy\"> &gt; tacamy</span></a>tacamy</h2>\n\n<ul>\n<li>GoogleMap API</li>\n<li>v2-v3\n\n<ul>\n<li>iE7+, Android</li>\n</ul>\n</li>\n<li>無料で使えるの\n\n<ul>\n<li>25000件</li>\n<li>無料でアクセスできるページ</li>\n<li>90日連続で制限こえなきゃ大丈夫</li>\n</ul>\n</li>\n<li>超過してもそんな高くない</li>\n<li>polymerのテンプレがある</li>\n<li>続きは合宿で</li>\n</ul>\n",
    "created_at": "2015-07-02T00:17:57+09:00",
    "message": "Update post.",
    "kind": "stock",
    "comments_count": 0,
    "tasks_count": 0,
    "done_tasks_count": 0,
    "url": "https://pxgrid.esa.io/posts/462",
    "updated_at": "2015-07-03T11:24:19+09:00",
    "tags": [],
    "category": "社内勉強会/2015/03",
    "revision_number": 2,
    "created_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "updated_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "stargazers_count": 0,
    "watchers_count": 1,
    "star": false,
    "watch": true,
    "_uid": 1446574748034,
    "_modified_at": ""
  },
  {
    "number": 471,
    "name": "15",
    "full_name": "社内勉強会/2015/04/15",
    "wip": false,
    "body_md": "created_at: 2015-04-15 11:03:05 +0900\r\nuser: nakajmg\r\n\r\n## @saucerjp \r\n### 拡張作った\r\n\r\n* 出版社のページの発売日リスト\r\n* 欲しい作品探すのめんどう\r\n* お気に入りをハイライトしたい\r\n* 著者名クリック\r\n    * ハイライト！\r\n    * 別の作品が出てもわかる\r\n* 作品名クリック\r\n    * ほかの巻もハイライトされる\r\n* クラスとインスタンスでつくった\r\n    * ★がそれぞれインスタンス\r\n* https://github.com/saucer-jp/comic-release-date/blob/master/js/app.js\r\n* コードレビューぷりーず\r\n\r\n## @kyosuke \r\n### npm scriptsについて\r\n* package.jsonにかく\r\n* start とか testとか\r\n* postinstall\r\n    * npm install後にコマンド実行してくれる\r\n    * bowerのインストールさせるとか\r\n* preinstall\r\n    * デフォルト動作があって上書きになるので使わなそう\r\n* scriptsに用意するとよさそう\r\n    * e2eテストとか\r\n    * ビルドとか\r\n* 全部npm runでやるとか言ってる人いるけど\r\n    * 管理無理でしょ\r\n    * だれがメンテするのそれ問題\r\n\r\n## @ykhs \r\n### HackerNews API\r\n* https://github.com/HackerNews/API\r\n* フレームワークためすときに気軽に使えるAPIない\r\n* Todoアプリじゃ物足りない\r\n* 公式API\r\n    * 去年できた\r\n    * [Firebase](https://www.firebase.com/)にのってる\r\n        * BaaSの1つ\r\n    * GETの権限だけある感じ\r\n        * 登録とかいらない\r\n* Firebaseを使う必要がある\r\n* https://www.firebase.com/docs/\r\n\r\n## @GeckoTang \r\n### Flexbox\r\n* 記事用のサンプル9個\r\n    * Flex + jusify-contents + align で自由自在！\r\n    * 真ん中によせられる〜\r\n* アイコン中央寄せも簡単\r\n    * 左右反転もflex-direction:reverseで反転！\r\n* algin-self: center!\r\n* 高さ揃えも簡単！\r\n* https://github.com/geckotang/flexbox-tryout\r\n* flexboxの中のmargin:auto便利\r\n\r\n## @tacamy \r\n### JSCS\r\n* http://jscs.info/\r\n* JSのスタイルをいっぱい設定できる\r\n* 対応してるEditorいっぱい\r\n* プリセットもある\r\n    * クロックフォード流…\r\n* ターミナルで使える\r\n    * gulp-jscsもある\r\n* 感想\r\n    * 設定つくるのめんどいけど細かくできる\r\n    * 最新のverで自動修正してくれるように\r\n\r\n## @soto3 \r\n次回。\r\n\r\n## @5509 \r\n休み。（2回分たまってます）\r\n\r\n",
    "body_html": "<p>created_at: 2015-04-15 11:03:05 +0900<br>\nuser: nakajmg</p>\n\n<h2 id=\"0-1-0\" name=\"0-1-0\">\n<a class=\"anchor\" href=\"#0-1-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"__at__saucerjp\"> &gt; __at__saucerjp</span></a>@saucerjp</h2>\n\n<h3 id=\"0-1-1\" name=\"0-1-1\">\n<a class=\"anchor\" href=\"#0-1-1\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"拡張作った\"> &gt; 拡張作った</span></a>拡張作った</h3>\n\n<ul>\n<li>出版社のページの発売日リスト</li>\n<li>欲しい作品探すのめんどう</li>\n<li>お気に入りをハイライトしたい</li>\n<li>著者名クリック\n\n<ul>\n<li>ハイライト！</li>\n<li>別の作品が出てもわかる</li>\n</ul>\n</li>\n<li>作品名クリック\n\n<ul>\n<li>ほかの巻もハイライトされる</li>\n</ul>\n</li>\n<li>クラスとインスタンスでつくった\n\n<ul>\n<li>★がそれぞれインスタンス</li>\n</ul>\n</li>\n<li><a target=\"_blank\" href=\"https://github.com/saucer-jp/comic-release-date/blob/master/js/app.js\">https://github.com/saucer-jp/comic-release-date/blob/master/js/app.js</a></li>\n<li>コードレビューぷりーず</li>\n</ul>\n\n<h2 id=\"0-2-0\" name=\"0-2-0\">\n<a class=\"anchor\" href=\"#0-2-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"__at__kyosuke\"> &gt; __at__kyosuke</span></a><a href=\"/users/kyosuke\" class=\"user-mention\" title=\"kyosuke\" target=\"_blank\">@kyosuke</a>\n</h2>\n\n<h3 id=\"0-2-1\" name=\"0-2-1\">\n<a class=\"anchor\" href=\"#0-2-1\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"npm scriptsについて\"> &gt; npm scriptsについて</span></a>npm scriptsについて</h3>\n\n<ul>\n<li>package.jsonにかく</li>\n<li>start とか testとか</li>\n<li>postinstall\n\n<ul>\n<li>npm install後にコマンド実行してくれる</li>\n<li>bowerのインストールさせるとか</li>\n</ul>\n</li>\n<li>preinstall\n\n<ul>\n<li>デフォルト動作があって上書きになるので使わなそう</li>\n</ul>\n</li>\n<li>scriptsに用意するとよさそう\n\n<ul>\n<li>e2eテストとか</li>\n<li>ビルドとか</li>\n</ul>\n</li>\n<li>全部npm runでやるとか言ってる人いるけど\n\n<ul>\n<li>管理無理でしょ</li>\n<li>だれがメンテするのそれ問題</li>\n</ul>\n</li>\n</ul>\n\n<h2 id=\"0-3-0\" name=\"0-3-0\">\n<a class=\"anchor\" href=\"#0-3-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"__at__ykhs\"> &gt; __at__ykhs</span></a><a href=\"/users/ykhs\" class=\"user-mention\" title=\"ykhs\" target=\"_blank\">@ykhs</a>\n</h2>\n\n<h3 id=\"0-3-1\" name=\"0-3-1\">\n<a class=\"anchor\" href=\"#0-3-1\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"HackerNews API\"> &gt; HackerNews API</span></a>HackerNews API</h3>\n\n<ul>\n<li><a target=\"_blank\" href=\"https://github.com/HackerNews/API\">https://github.com/HackerNews/API</a></li>\n<li>フレームワークためすときに気軽に使えるAPIない</li>\n<li>Todoアプリじゃ物足りない</li>\n<li>公式API\n\n<ul>\n<li>去年できた</li>\n<li>\n<a target=\"_blank\" href=\"https://www.firebase.com/\">Firebase</a>にのってる\n\n<ul>\n<li>BaaSの1つ</li>\n</ul>\n</li>\n<li>GETの権限だけある感じ\n\n<ul>\n<li>登録とかいらない</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Firebaseを使う必要がある</li>\n<li><a target=\"_blank\" href=\"https://www.firebase.com/docs/\">https://www.firebase.com/docs/</a></li>\n</ul>\n\n<h2 id=\"0-4-0\" name=\"0-4-0\">\n<a class=\"anchor\" href=\"#0-4-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"__at__GeckoTang\"> &gt; __at__GeckoTang</span></a>@GeckoTang</h2>\n\n<h3 id=\"0-4-1\" name=\"0-4-1\">\n<a class=\"anchor\" href=\"#0-4-1\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"Flexbox\"> &gt; Flexbox</span></a>Flexbox</h3>\n\n<ul>\n<li>記事用のサンプル9個\n\n<ul>\n<li>Flex + jusify-contents + align で自由自在！</li>\n<li>真ん中によせられる〜</li>\n</ul>\n</li>\n<li>アイコン中央寄せも簡単\n\n<ul>\n<li>左右反転もflex-direction:reverseで反転！</li>\n</ul>\n</li>\n<li>algin-self: center!</li>\n<li>高さ揃えも簡単！</li>\n<li><a target=\"_blank\" href=\"https://github.com/geckotang/flexbox-tryout\">https://github.com/geckotang/flexbox-tryout</a></li>\n<li>flexboxの中のmargin:auto便利</li>\n</ul>\n\n<h2 id=\"0-5-0\" name=\"0-5-0\">\n<a class=\"anchor\" href=\"#0-5-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"__at__tacamy\"> &gt; __at__tacamy</span></a><a href=\"/users/tacamy\" class=\"user-mention\" title=\"tacamy\" target=\"_blank\">@tacamy</a>\n</h2>\n\n<h3 id=\"0-5-1\" name=\"0-5-1\">\n<a class=\"anchor\" href=\"#0-5-1\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"JSCS\"> &gt; JSCS</span></a>JSCS</h3>\n\n<ul>\n<li><a target=\"_blank\" href=\"http://jscs.info/\">http://jscs.info/</a></li>\n<li>JSのスタイルをいっぱい設定できる</li>\n<li>対応してるEditorいっぱい</li>\n<li>プリセットもある\n\n<ul>\n<li>クロックフォード流…</li>\n</ul>\n</li>\n<li>ターミナルで使える\n\n<ul>\n<li>gulp-jscsもある</li>\n</ul>\n</li>\n<li>感想\n\n<ul>\n<li>設定つくるのめんどいけど細かくできる</li>\n<li>最新のverで自動修正してくれるように</li>\n</ul>\n</li>\n</ul>\n\n<h2 id=\"0-6-0\" name=\"0-6-0\">\n<a class=\"anchor\" href=\"#0-6-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"__at__soto3\"> &gt; __at__soto3</span></a><a href=\"/users/soto3\" class=\"user-mention\" title=\"soto3\" target=\"_blank\">@soto3</a>\n</h2>\n\n<p>次回。</p>\n\n<h2 id=\"0-7-0\" name=\"0-7-0\">\n<a class=\"anchor\" href=\"#0-7-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"__at__5509\"> &gt; __at__5509</span></a>@5509</h2>\n\n<p>休み。（2回分たまってます）</p>\n",
    "created_at": "2015-07-02T00:18:15+09:00",
    "message": "Update post.",
    "kind": "stock",
    "comments_count": 0,
    "tasks_count": 0,
    "done_tasks_count": 0,
    "url": "https://pxgrid.esa.io/posts/471",
    "updated_at": "2015-07-03T11:24:02+09:00",
    "tags": [],
    "category": "社内勉強会/2015/04",
    "revision_number": 2,
    "created_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "updated_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "stargazers_count": 0,
    "watchers_count": 1,
    "star": false,
    "watch": true,
    "_uid": 1446574748035,
    "_modified_at": ""
  },
  {
    "number": 502,
    "name": "20",
    "full_name": "社内勉強会/2015/05/20",
    "wip": false,
    "body_md": "created_at: 2015-05-20 10:54:17 +0900\r\nuser: nakajmg\r\n\r\n## @soto3 \r\n\r\n- 数学文書作法から学ぶ\r\n- 読者のことを考える\r\n\t- 読者の知識\r\n\t\t- 知識に応じて文章が変化する\r\n\t\t- 文章を読んでいる間にも、読み手の知識は増えていく\r\n\t\t\t- なので、文章のも大事\r\n\t- 読者の意欲\r\n\t\t- 飽きない工夫\r\n\t\t\t- 言葉が続いたら図\r\n\t\t\t- CodeGridパターン\r\n\t\t\t\t1. 抽象的な説明\r\n\t\t\t\t2. 具体的な説明\r\n\t\t\t\t3. デモ\r\n\t\t\t\t4. 「抽象的な説明」ってこういうことだったんですよ\r\n\t- 読者の目的\r\n\r\n読者のことを考えるのが大事。\r\n\r\n## @cancer \r\n\r\n- UI-Router使った話（文字小さくて、全然見えないよ...）\r\n- stateの管理重要\r\n- viewsが癖あるので気をつける\r\n- ハマった話の詳細を[qiitaに書く](https://pxgrid.qiita.com/cancer/items/596cf08e26faebc6ae75)\r\n\r\n## @nakajmg\r\n\r\n- スタイルガイドジェネレータの進捗\r\n- ジマグラム（通称）\r\n- CSSのコメントブロックに書く、そのモジュールのカテゴリなどの設定は、YAMLでもCSONでも良い\r\n- スタイルガイドが乱立するのは、自分にフィットするのがないから\r\n- 自分がどうしたいか、で作っても、使われないのでは...?\r\n- 自分の回りにいる人に限定して、ヒアリングして、スタイルガイドを作ろう。\r\n- 日本っぽい名前を、募集中！\r\n\r\n## @yomotsu \r\n\r\n- WebGLはなぜ、早いのか\r\n- GPUを使うと早い\r\n- GPUはSIMD演算に特化しているから、早い\r\n\t- SIMD演算は、わかりやすくいえば、超並列化してくれる\r\n\t- 基本的には同じような処理（演算）しかしないWebGLは、GPUと相性が良い\r\n\r\nSIMD演算て、どういう感じ？\r\n\r\n```\r\n1+1=1\r\n1+2=3\r\n```\r\n\r\nこれは並列化できるので超早い。\r\n\r\n```\r\n1+1=1\r\n1-1=0\r\n```\r\n\r\nこれは並列化できない\r\n\r\n```\r\n1+1=1\r\n1+(-1)=0\r\n```\r\n\r\nこれは並列化できる（オペレータが一緒だから）\r\n\r\n\r\n## @5509\r\n\r\n- 最近、エディタやSlackなど、いろいろアプリが動かなくなった話\r\n\t- アプリの削除の話\r\n\t- OSの再インストールはめんどうくさい\r\n\t\t- 結局、Yosemiteにしたら治った...\r\n\t\t\t- Yosemiteにしたくなかった理由は？\r\n\t\t\t\t- いい噂を聞かなかったから\r\n\t\t\t\t- でもした。\r\n\t- エディタが使えない間、どうしたの？\r\n\t\t- MacVim最強（使いにくくて仕方がない）\r\n\r\n\r\n## @Takazudo \r\n\r\n\r\n- CodeGridで書いてる、addEventListenerの話\r\n- jQuery使ってたので、あんま生のaddEventListenerを使ってなかった\r\n- 第3引数のuseCaptureを使ったことなかった\r\n\r\n```js\r\nelem.addEventListener('click', function(){ alert('0') }, false /* これ */);\r\n```\r\n\r\n- イベントの伝播は、キャプチャーフェーズ（親から伝搬していく）のと、バブリングフェーズ（子から親に伝搬していく）フェーズがある。\r\n- event.stopPropagationでバブリングフェーズの、伝搬が止まる\r\n- useCaptureをtrueにすると、キャプチャーフェーズの伝搬が有効になる。\r\n- 一つのイベントを複数の機能が使うときに、useCaptureをtrueにして使うことがある。\r\n\r\nhttp://so-zou.jp/web-app/tech/programming/javascript/event/handler/event-flow.htm\r\n\r\n## @tacamy \r\n\r\nまた来週！\r\n\r\n",
    "body_html": "<p>created_at: 2015-05-20 10:54:17 +0900<br>\nuser: nakajmg</p>\n\n<h2 id=\"0-1-0\" name=\"0-1-0\">\n<a class=\"anchor\" href=\"#0-1-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"__at__soto3\"> &gt; __at__soto3</span></a><a href=\"/users/soto3\" class=\"user-mention\" title=\"soto3\" target=\"_blank\">@soto3</a>\n</h2>\n\n<ul>\n<li>数学文書作法から学ぶ</li>\n<li>読者のことを考える\n\n<ul>\n<li>読者の知識\n\n<ul>\n<li>知識に応じて文章が変化する</li>\n<li>文章を読んでいる間にも、読み手の知識は増えていく\n\n<ul>\n<li>なので、文章のも大事</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>読者の意欲\n\n<ul>\n<li>飽きない工夫\n\n<ul>\n<li>言葉が続いたら図</li>\n<li>CodeGridパターン\n\n<ol>\n<li>抽象的な説明</li>\n<li>具体的な説明</li>\n<li>デモ</li>\n<li>「抽象的な説明」ってこういうことだったんですよ</li>\n</ol>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>読者の目的</li>\n</ul>\n</li>\n</ul>\n\n<p>読者のことを考えるのが大事。</p>\n\n<h2 id=\"0-2-0\" name=\"0-2-0\">\n<a class=\"anchor\" href=\"#0-2-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"__at__cancer\"> &gt; __at__cancer</span></a><a href=\"/users/cancer\" class=\"user-mention\" title=\"cancer\" target=\"_blank\">@cancer</a>\n</h2>\n\n<ul>\n<li>UI-Router使った話（文字小さくて、全然見えないよ...）</li>\n<li>stateの管理重要</li>\n<li>viewsが癖あるので気をつける</li>\n<li>ハマった話の詳細を<a target=\"_blank\" href=\"https://pxgrid.qiita.com/cancer/items/596cf08e26faebc6ae75\">qiitaに書く</a>\n</li>\n</ul>\n\n<h2 id=\"0-3-0\" name=\"0-3-0\">\n<a class=\"anchor\" href=\"#0-3-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"__at__nakajmg\"> &gt; __at__nakajmg</span></a><a href=\"/users/nakajmg\" class=\"user-mention\" title=\"nakajmg\" target=\"_blank\">@nakajmg</a>\n</h2>\n\n<ul>\n<li>スタイルガイドジェネレータの進捗</li>\n<li>ジマグラム（通称）</li>\n<li>CSSのコメントブロックに書く、そのモジュールのカテゴリなどの設定は、YAMLでもCSONでも良い</li>\n<li>スタイルガイドが乱立するのは、自分にフィットするのがないから</li>\n<li>自分がどうしたいか、で作っても、使われないのでは...?</li>\n<li>自分の回りにいる人に限定して、ヒアリングして、スタイルガイドを作ろう。</li>\n<li>日本っぽい名前を、募集中！</li>\n</ul>\n\n<h2 id=\"0-4-0\" name=\"0-4-0\">\n<a class=\"anchor\" href=\"#0-4-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"__at__yomotsu\"> &gt; __at__yomotsu</span></a><a href=\"/users/yomotsu\" class=\"user-mention\" title=\"yomotsu\" target=\"_blank\">@yomotsu</a>\n</h2>\n\n<ul>\n<li>WebGLはなぜ、早いのか</li>\n<li>GPUを使うと早い</li>\n<li>GPUはSIMD演算に特化しているから、早い\n\n<ul>\n<li>SIMD演算は、わかりやすくいえば、超並列化してくれる</li>\n<li>基本的には同じような処理（演算）しかしないWebGLは、GPUと相性が良い</li>\n</ul>\n</li>\n</ul>\n\n<p>SIMD演算て、どういう感じ？</p>\n<div class=\"code-block\">\n<pre class=\"highlight plaintext\"><code>1+1=1\n1+2=3\n</code></pre>\n</div>\n<p>これは並列化できるので超早い。</p>\n<div class=\"code-block\">\n<pre class=\"highlight plaintext\"><code>1+1=1\n1-1=0\n</code></pre>\n</div>\n<p>これは並列化できない</p>\n<div class=\"code-block\">\n<pre class=\"highlight plaintext\"><code>1+1=1\n1+(-1)=0\n</code></pre>\n</div>\n<p>これは並列化できる（オペレータが一緒だから）</p>\n\n<h2 id=\"0-5-0\" name=\"0-5-0\">\n<a class=\"anchor\" href=\"#0-5-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"__at__5509\"> &gt; __at__5509</span></a>@5509</h2>\n\n<ul>\n<li>最近、エディタやSlackなど、いろいろアプリが動かなくなった話\n\n<ul>\n<li>アプリの削除の話</li>\n<li>OSの再インストールはめんどうくさい\n\n<ul>\n<li>結局、Yosemiteにしたら治った...\n\n<ul>\n<li>Yosemiteにしたくなかった理由は？\n\n<ul>\n<li>いい噂を聞かなかったから</li>\n<li>でもした。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>エディタが使えない間、どうしたの？\n\n<ul>\n<li>MacVim最強（使いにくくて仕方がない）</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n\n<h2 id=\"0-6-0\" name=\"0-6-0\">\n<a class=\"anchor\" href=\"#0-6-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"__at__Takazudo\"> &gt; __at__Takazudo</span></a>@Takazudo</h2>\n\n<ul>\n<li>CodeGridで書いてる、addEventListenerの話</li>\n<li>jQuery使ってたので、あんま生のaddEventListenerを使ってなかった</li>\n<li>第3引数のuseCaptureを使ったことなかった</li>\n</ul>\n<div class=\"code-block\">\n<pre class=\"highlight javascript\"><code><span class=\"nx\">elem</span><span class=\"p\">.</span><span class=\"nx\">addEventListener</span><span class=\"p\">(</span><span class=\"s1\">'click'</span><span class=\"p\">,</span> <span class=\"kd\">function</span><span class=\"p\">(){</span> <span class=\"nx\">alert</span><span class=\"p\">(</span><span class=\"s1\">'0'</span><span class=\"p\">)</span> <span class=\"p\">},</span> <span class=\"kc\">false</span> <span class=\"cm\">/* これ */</span><span class=\"p\">);</span>\n</code></pre>\n</div>\n<ul>\n<li>イベントの伝播は、キャプチャーフェーズ（親から伝搬していく）のと、バブリングフェーズ（子から親に伝搬していく）フェーズがある。</li>\n<li>event.stopPropagationでバブリングフェーズの、伝搬が止まる</li>\n<li>useCaptureをtrueにすると、キャプチャーフェーズの伝搬が有効になる。</li>\n<li>一つのイベントを複数の機能が使うときに、useCaptureをtrueにして使うことがある。</li>\n</ul>\n\n<p><a target=\"_blank\" href=\"http://so-zou.jp/web-app/tech/programming/javascript/event/handler/event-flow.htm\">http://so-zou.jp/web-app/tech/programming/javascript/event/handler/event-flow.htm</a></p>\n\n<h2 id=\"0-7-0\" name=\"0-7-0\">\n<a class=\"anchor\" href=\"#0-7-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"__at__tacamy\"> &gt; __at__tacamy</span></a><a href=\"/users/tacamy\" class=\"user-mention\" title=\"tacamy\" target=\"_blank\">@tacamy</a>\n</h2>\n\n<p>また来週！</p>\n",
    "created_at": "2015-07-02T00:19:18+09:00",
    "message": "Update post.",
    "kind": "stock",
    "comments_count": 0,
    "tasks_count": 0,
    "done_tasks_count": 0,
    "url": "https://pxgrid.esa.io/posts/502",
    "updated_at": "2015-07-03T11:23:46+09:00",
    "tags": [],
    "category": "社内勉強会/2015/05",
    "revision_number": 2,
    "created_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "updated_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "stargazers_count": 0,
    "watchers_count": 1,
    "star": false,
    "watch": true,
    "_uid": 1446574748036,
    "_modified_at": ""
  },
  {
    "number": 511,
    "name": "03",
    "full_name": "社内勉強会/2015/06/03",
    "wip": false,
    "body_md": "created_at: 2015-06-03 10:58:57 +0900\r\nuser: nakajmg\r\n\r\n## @5509 \r\n\r\n次回\r\n\r\n## @GeckoTang \r\n\r\n* BEMの粒度が適切じゃないやつがいるゾ！\r\n* 粒度ちゃんと考えよう\r\n* 親不在のElementきもい\r\n    * それはBlockだ\r\n* 親がいないと破綻する書き方\r\n    * 詳細度あがるぞ〜\r\n* Blockの粒度を小さめにするとうまく行きそう\r\n* http://geckotang.github.io/presentation-think-of-bem-1/\r\n* https://github.com/brigade/scss-lint/blob/master/lib/scss_lint/linter/README.md#bemdepth\r\n\r\n## @soto3 \r\n\r\n* 文章の基本\r\n* 形式と内容\r\n    * CSSとHTML?\r\n* 著者読者\r\n    * 読者は内容だけ\r\n    * 著者は全部意識\r\n* 同じ内容でも形式で印象が変わる\r\n* 細かい所が大事\r\n    * 読者のことを守るため\r\n* 一発完璧は難しい\r\n    * テーマをわけて複数回\r\n        1. 構成\r\n        1. 文章\r\n        1. 表記 \r\n\r\n## @saucerjp \r\n\r\n* z command\r\n* https://github.com/rupa/z\r\n* cdの履歴残る便利\r\n\r\n## @kyosuke \r\n\r\n* 2段階認証\r\n* https://www.authy.com/\r\n* 見やすい\r\n* iPhone交換したとき\r\n    * Googleのヤツ使ってたから全部登録しなおし\r\n    * 数多くて大変だった\r\n    * これだと楽\r\n* Chrome App\r\n    * iPhoneいじらなくてもいける\r\n* 2段階認証がめんどくさくなくなるゾ\r\n\r\n## @ykhs \r\n\r\n* isomorphic\r\n* サーバサイドとクライアントサイドのコードの共通化\r\n* SPAのファーストビューの問題を解決\r\n    * モバイル重い\r\n    * SEO\r\n* サーバーでレンダリング\r\n    * モデルをクライアントに渡す\r\n        * HTMLにJSONうめこみ\r\n* React\r\n    * しやすい\r\n* flux\r\n* https://pxgrid.qiita.com/ykhs/items/a650dd43b453b63a9e1d\r\n\r\n## @tacamy \r\n\r\n* CSS設計にレイヤーを\r\n* コンポーネントの種類を意識する\r\n* 汎用、特定、ユーティリティ\r\n* レイヤーとは\r\n    * ベース\r\n    * プロジェクト\r\n    * ユーティリティ\r\n* FLOCSSを参考に\r\n\r\n",
    "body_html": "<p>created_at: 2015-06-03 10:58:57 +0900<br>\nuser: nakajmg</p>\n\n<h2 id=\"0-1-0\" name=\"0-1-0\">\n<a class=\"anchor\" href=\"#0-1-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"__at__5509\"> &gt; __at__5509</span></a>@5509</h2>\n\n<p>次回</p>\n\n<h2 id=\"0-2-0\" name=\"0-2-0\">\n<a class=\"anchor\" href=\"#0-2-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"__at__GeckoTang\"> &gt; __at__GeckoTang</span></a>@GeckoTang</h2>\n\n<ul>\n<li>BEMの粒度が適切じゃないやつがいるゾ！</li>\n<li>粒度ちゃんと考えよう</li>\n<li>親不在のElementきもい\n\n<ul>\n<li>それはBlockだ</li>\n</ul>\n</li>\n<li>親がいないと破綻する書き方\n\n<ul>\n<li>詳細度あがるぞ〜</li>\n</ul>\n</li>\n<li>Blockの粒度を小さめにするとうまく行きそう</li>\n<li><a target=\"_blank\" href=\"http://geckotang.github.io/presentation-think-of-bem-1/\">http://geckotang.github.io/presentation-think-of-bem-1/</a></li>\n<li><a target=\"_blank\" href=\"https://github.com/brigade/scss-lint/blob/master/lib/scss_lint/linter/README.md#bemdepth\">https://github.com/brigade/scss-lint/blob/master/lib/scss_lint/linter/README.md#bemdepth</a></li>\n</ul>\n\n<h2 id=\"0-3-0\" name=\"0-3-0\">\n<a class=\"anchor\" href=\"#0-3-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"__at__soto3\"> &gt; __at__soto3</span></a><a href=\"/users/soto3\" class=\"user-mention\" title=\"soto3\" target=\"_blank\">@soto3</a>\n</h2>\n\n<ul>\n<li>文章の基本</li>\n<li>形式と内容\n\n<ul>\n<li>CSSとHTML?</li>\n</ul>\n</li>\n<li>著者読者\n\n<ul>\n<li>読者は内容だけ</li>\n<li>著者は全部意識</li>\n</ul>\n</li>\n<li>同じ内容でも形式で印象が変わる</li>\n<li>細かい所が大事\n\n<ul>\n<li>読者のことを守るため</li>\n</ul>\n</li>\n<li>一発完璧は難しい\n\n<ul>\n<li>テーマをわけて複数回\n\n<ol>\n<li>構成</li>\n<li>文章</li>\n<li>表記 </li>\n</ol>\n</li>\n</ul>\n</li>\n</ul>\n\n<h2 id=\"0-4-0\" name=\"0-4-0\">\n<a class=\"anchor\" href=\"#0-4-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"__at__saucerjp\"> &gt; __at__saucerjp</span></a>@saucerjp</h2>\n\n<ul>\n<li>z command</li>\n<li><a target=\"_blank\" href=\"https://github.com/rupa/z\">https://github.com/rupa/z</a></li>\n<li>cdの履歴残る便利</li>\n</ul>\n\n<h2 id=\"0-5-0\" name=\"0-5-0\">\n<a class=\"anchor\" href=\"#0-5-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"__at__kyosuke\"> &gt; __at__kyosuke</span></a><a href=\"/users/kyosuke\" class=\"user-mention\" title=\"kyosuke\" target=\"_blank\">@kyosuke</a>\n</h2>\n\n<ul>\n<li>2段階認証</li>\n<li><a target=\"_blank\" href=\"https://www.authy.com/\">https://www.authy.com/</a></li>\n<li>見やすい</li>\n<li>iPhone交換したとき\n\n<ul>\n<li>Googleのヤツ使ってたから全部登録しなおし</li>\n<li>数多くて大変だった</li>\n<li>これだと楽</li>\n</ul>\n</li>\n<li>Chrome App\n\n<ul>\n<li>iPhoneいじらなくてもいける</li>\n</ul>\n</li>\n<li>2段階認証がめんどくさくなくなるゾ</li>\n</ul>\n\n<h2 id=\"0-6-0\" name=\"0-6-0\">\n<a class=\"anchor\" href=\"#0-6-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"__at__ykhs\"> &gt; __at__ykhs</span></a><a href=\"/users/ykhs\" class=\"user-mention\" title=\"ykhs\" target=\"_blank\">@ykhs</a>\n</h2>\n\n<ul>\n<li>isomorphic</li>\n<li>サーバサイドとクライアントサイドのコードの共通化</li>\n<li>SPAのファーストビューの問題を解決\n\n<ul>\n<li>モバイル重い</li>\n<li>SEO</li>\n</ul>\n</li>\n<li>サーバーでレンダリング\n\n<ul>\n<li>モデルをクライアントに渡す\n\n<ul>\n<li>HTMLにJSONうめこみ</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>React\n\n<ul>\n<li>しやすい</li>\n</ul>\n</li>\n<li>flux</li>\n<li><a target=\"_blank\" href=\"https://pxgrid.qiita.com/ykhs/items/a650dd43b453b63a9e1d\">https://pxgrid.qiita.com/ykhs/items/a650dd43b453b63a9e1d</a></li>\n</ul>\n\n<h2 id=\"0-7-0\" name=\"0-7-0\">\n<a class=\"anchor\" href=\"#0-7-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"__at__tacamy\"> &gt; __at__tacamy</span></a><a href=\"/users/tacamy\" class=\"user-mention\" title=\"tacamy\" target=\"_blank\">@tacamy</a>\n</h2>\n\n<ul>\n<li>CSS設計にレイヤーを</li>\n<li>コンポーネントの種類を意識する</li>\n<li>汎用、特定、ユーティリティ</li>\n<li>レイヤーとは\n\n<ul>\n<li>ベース</li>\n<li>プロジェクト</li>\n<li>ユーティリティ</li>\n</ul>\n</li>\n<li>FLOCSSを参考に</li>\n</ul>\n",
    "created_at": "2015-07-02T00:19:37+09:00",
    "message": "Update post.",
    "kind": "stock",
    "comments_count": 0,
    "tasks_count": 0,
    "done_tasks_count": 0,
    "url": "https://pxgrid.esa.io/posts/511",
    "updated_at": "2015-07-03T11:23:24+09:00",
    "tags": [],
    "category": "社内勉強会/2015/06",
    "revision_number": 2,
    "created_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "updated_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "stargazers_count": 0,
    "watchers_count": 1,
    "star": false,
    "watch": true,
    "_uid": 1446574748038,
    "_modified_at": ""
  },
  {
    "number": 538,
    "name": "01",
    "full_name": "社内勉強会/2015/07/01",
    "wip": false,
    "body_md": "created_at: 2015-07-01 11:00:27 +0900\r\nuser: nakajmg\r\n\r\n## DevTools snippets @soto3 \r\n\r\n* 記事のコードが動かない状態\r\n* 写経するときに脳内補完して動いちゃうように\r\n* コピペで確認しないと逆にあぶない\r\n* DevToolsのsnippetsでコピペ！\r\n    * 補完\r\n    * 間違ってるとこエラー表示してくれる\r\n* snippetsの役割\r\n    * ブックマークレットがわりに\r\n    * デバッグに\r\n    * モンキーパッチ\r\n* Nodeでやるよりいい\r\n\r\n## esa.io @GeckoTang \r\n* Qiitaで不満\r\n    * タグ付けとかプロジェクト追加しても結局検索\r\n    * タグで絞り込んでもなんかアレ\r\n    * Kobitoは便利\r\n    * いいねはいいね\r\n* esaのヨサ\r\n    * emoji\r\n    * Markdown補完\r\n    * 見栄え◎\r\n    * ほかいろいろ\r\n* スラッシュ区切りでカテゴリわけできる\r\n* テンプレの日付自動挿入\r\n\r\n## git-prompt.sh @saucerjp \r\n* gitのコマンド補完\r\n* ブランチ名とかでるよ\r\n* http://git-prompt.sh/\r\n\r\n* git-prompt.sh 便利だよ\r\n* シェル上でmodifiedとstaging状態を表示してくれるシェルスクリプト\r\n\r\n#### 使い方 .zshrc に以下を入れる\r\n* PROMPTの値はお好みの表示方法があるので好きに変更する\r\n\r\n```\r\nsource /usr/local/Cellar/git/2.3.2/etc/bash_completion.d/git-prompt.sh\r\nsetopt prompt_subst\r\nGIT_PS1_SHOWDIRTYSTATE=true\r\nexport PROMPT='\r\n%F{green}%n@%m:%F{yellow}%~%F{red}$(__git_ps1 \" (%s)\")%f\r\n$ '\r\n```\r\n\r\n## ES6 Symbols @ykhs \r\n* ユニーク\r\n* オブジェクトのキーにも使える\r\n* hasOwnPropertyに影響されない\r\n\r\n\r\n## @kyosuke \r\n\r\n次回\r\n\r\n",
    "body_html": "<p>created_at: 2015-07-01 11:00:27 +0900<br>\nuser: nakajmg</p>\n\n<h2 id=\"0-1-0\" name=\"0-1-0\">\n<a class=\"anchor\" href=\"#0-1-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"DevTools snippets __at__soto3\"> &gt; DevTools snippets __at__soto3</span></a>DevTools snippets <a href=\"/users/soto3\" class=\"user-mention\" title=\"soto3\" target=\"_blank\">@soto3</a>\n</h2>\n\n<ul>\n<li>記事のコードが動かない状態</li>\n<li>写経するときに脳内補完して動いちゃうように</li>\n<li>コピペで確認しないと逆にあぶない</li>\n<li>DevToolsのsnippetsでコピペ！\n\n<ul>\n<li>補完</li>\n<li>間違ってるとこエラー表示してくれる</li>\n</ul>\n</li>\n<li>snippetsの役割\n\n<ul>\n<li>ブックマークレットがわりに</li>\n<li>デバッグに</li>\n<li>モンキーパッチ</li>\n</ul>\n</li>\n<li>Nodeでやるよりいい</li>\n</ul>\n\n<h2 id=\"0-2-0\" name=\"0-2-0\">\n<a class=\"anchor\" href=\"#0-2-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"esa.io __at__GeckoTang\"> &gt; esa.io __at__GeckoTang</span></a>esa.io @GeckoTang</h2>\n\n<ul>\n<li>Qiitaで不満\n\n<ul>\n<li>タグ付けとかプロジェクト追加しても結局検索</li>\n<li>タグで絞り込んでもなんかアレ</li>\n<li>Kobitoは便利</li>\n<li>いいねはいいね</li>\n</ul>\n</li>\n<li>esaのヨサ\n\n<ul>\n<li>emoji</li>\n<li>Markdown補完</li>\n<li>見栄え◎</li>\n<li>ほかいろいろ</li>\n</ul>\n</li>\n<li>スラッシュ区切りでカテゴリわけできる</li>\n<li>テンプレの日付自動挿入</li>\n</ul>\n\n<h2 id=\"0-3-0\" name=\"0-3-0\">\n<a class=\"anchor\" href=\"#0-3-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"git-prompt.sh __at__saucerjp\"> &gt; git-prompt.sh __at__saucerjp</span></a>git-prompt.sh @saucerjp</h2>\n\n<ul>\n<li>gitのコマンド補完</li>\n<li>ブランチ名とかでるよ</li>\n<li><p><a target=\"_blank\" href=\"http://git-prompt.sh/\">http://git-prompt.sh/</a></p></li>\n<li><p>git-prompt.sh 便利だよ</p></li>\n<li><p>シェル上でmodifiedとstaging状態を表示してくれるシェルスクリプト</p></li>\n</ul>\n\n<h4>使い方 .zshrc に以下を入れる</h4>\n\n<ul>\n<li>PROMPTの値はお好みの表示方法があるので好きに変更する</li>\n</ul>\n<div class=\"code-block\">\n<pre class=\"highlight plaintext\"><code>source /usr/local/Cellar/git/2.3.2/etc/bash_completion.d/git-prompt.sh\nsetopt prompt_subst\nGIT_PS1_SHOWDIRTYSTATE=true\nexport PROMPT='\n%F{green}%n@%m:%F{yellow}%~%F{red}$(__git_ps1 \" (%s)\")%f\n$ '\n</code></pre>\n</div>\n<h2 id=\"0-4-0\" name=\"0-4-0\">\n<a class=\"anchor\" href=\"#0-4-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"ES6 Symbols __at__ykhs\"> &gt; ES6 Symbols __at__ykhs</span></a>ES6 Symbols <a href=\"/users/ykhs\" class=\"user-mention\" title=\"ykhs\" target=\"_blank\">@ykhs</a>\n</h2>\n\n<ul>\n<li>ユニーク</li>\n<li>オブジェクトのキーにも使える</li>\n<li>hasOwnPropertyに影響されない</li>\n</ul>\n\n<h2 id=\"0-5-0\" name=\"0-5-0\">\n<a class=\"anchor\" href=\"#0-5-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"__at__kyosuke\"> &gt; __at__kyosuke</span></a><a href=\"/users/kyosuke\" class=\"user-mention\" title=\"kyosuke\" target=\"_blank\">@kyosuke</a>\n</h2>\n\n<p>次回</p>\n",
    "created_at": "2015-07-02T00:35:35+09:00",
    "message": "Update post.",
    "kind": "stock",
    "comments_count": 0,
    "tasks_count": 0,
    "done_tasks_count": 0,
    "url": "https://pxgrid.esa.io/posts/538",
    "updated_at": "2015-07-03T11:20:58+09:00",
    "tags": [],
    "category": "社内勉強会/2015/07",
    "revision_number": 2,
    "created_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "updated_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "stargazers_count": 0,
    "watchers_count": 1,
    "star": false,
    "watch": true,
    "_uid": 1446574748039,
    "_modified_at": ""
  },
  {
    "number": 354,
    "name": "Slackでmarkdown使うときはPostで投稿しよう",
    "full_name": "メモ/slack/Slackでmarkdown使うときはPostで投稿しよう #Slack",
    "wip": false,
    "body_md": "created_at: 2014-12-11 07:54:02 +0900\r\nuser: nakajmg\r\n\r\nmarkdown使うときテキストスニペットで`.md`投稿してたけど、Postで投稿するべきだったのに気づいた。\r\n\r\n![SS 2014-12-11 7.42.41.png](https://qiita-image-store.s3.amazonaws.com/778/17969/0e2e98ba-ebc0-3991-aa4b-d632e8e85958.png)\r\n\r\nCreate a postを選択すると↓のURLが開いて投稿画面になる。\r\n\r\nhttps://pxgrid.slack.com/files/create/post\r\n\r\n* markdownが使える\r\n    * ちゃんと変換してレンダリングされる\r\n* Save Draftで下書きのプレビューが見れる\r\n* 通常の発言とは別のpostという分類になる\r\n    * 検索しやすい\r\n    * markdownで書くときは後で見返す場合が多い\r\n* パブリックリンク作れる\r\n    * https://slack-files.com/T029ECUDJ-F035M9YBH-579a89\r\n\r\n便利そうなのに全然使われてない（たぶん認知されてない）ので使っていきたいと思った所存\r\n\r\n",
    "body_html": "<p>created_at: 2014-12-11 07:54:02 +0900<br>\nuser: nakajmg</p>\n\n<p>markdown使うときテキストスニペットで<code>.md</code>投稿してたけど、Postで投稿するべきだったのに気づいた。</p>\n\n<p><a href=\"https://qiita-image-store.s3.amazonaws.com/778/17969/0e2e98ba-ebc0-3991-aa4b-d632e8e85958.png\" target=\"_blank\"><img src=\"https://qiita-image-store.s3.amazonaws.com/778/17969/0e2e98ba-ebc0-3991-aa4b-d632e8e85958.png\" alt=\"SS 2014-12-11 7.42.41.png\"></a></p>\n\n<p>Create a postを選択すると↓のURLが開いて投稿画面になる。</p>\n\n<p><a target=\"_blank\" href=\"https://pxgrid.slack.com/files/create/post\">https://pxgrid.slack.com/files/create/post</a></p>\n\n<ul>\n<li>markdownが使える\n\n<ul>\n<li>ちゃんと変換してレンダリングされる</li>\n</ul>\n</li>\n<li>Save Draftで下書きのプレビューが見れる</li>\n<li>通常の発言とは別のpostという分類になる\n\n<ul>\n<li>検索しやすい</li>\n<li>markdownで書くときは後で見返す場合が多い</li>\n</ul>\n</li>\n<li>パブリックリンク作れる\n\n<ul>\n<li><a target=\"_blank\" href=\"https://slack-files.com/T029ECUDJ-F035M9YBH-579a89\">https://slack-files.com/T029ECUDJ-F035M9YBH-579a89</a></li>\n</ul>\n</li>\n</ul>\n\n<p>便利そうなのに全然使われてない（たぶん認知されてない）ので使っていきたいと思った所存</p>\n",
    "created_at": "2015-07-01T23:44:35+09:00",
    "message": "Update post.",
    "kind": "stock",
    "comments_count": 0,
    "tasks_count": 0,
    "done_tasks_count": 0,
    "url": "https://pxgrid.esa.io/posts/354",
    "updated_at": "2015-07-03T02:28:11+09:00",
    "tags": [
      "Slack"
    ],
    "category": "メモ/slack",
    "revision_number": 2,
    "created_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "updated_by": {
      "name": "坂巻翔大郎",
      "screen_name": "geckotang",
      "icon": "https://img.esa.io/uploads/production/users/4502/icon/thumb_m_cd33fe458f994c996691ae5bf5bb6060.jpg"
    },
    "stargazers_count": 0,
    "watchers_count": 2,
    "star": false,
    "watch": true,
    "_uid": 1446574748040,
    "_modified_at": ""
  },
  {
    "number": 478,
    "name": "exportを理解する",
    "full_name": "Imports/Qiita/es6のimport/exportを理解する #JavaScript",
    "wip": false,
    "body_md": "created_at: 2015-04-20 23:02:50 +0900\nuser: nakajmg\n\n* default\n* import *\n* as\n\nこの辺の理解がイマイチなので色々試して理解した。\n\n## 単一のexport\n\nまずはファイル内でexportしているモジュールが1つの場合。export側のファイル名は`lib.js`とする。\n\n### defaultを使わない例\n\n#### export\n\n```js\nexport function test() {\n  console.log(\"test\");\n}\n```\n\n#### import\n\n```js\nimport {test} from \"./lib\";\n\ntest(); // => \"test\"\n```\n\nブランケット`{}`でexportされているtestを名指しで指定して`test`という変数としてimportしている。defaultキーワードのついていないモジュールをimportする場合、importするモジュールの名前を知っている必要がある。\n\n#### 別の名前でimportする\n\n次のように`as`を使うことでimportする際に名前を指定できる。ここでは`hoge`という名前で関数testをimportしている。\n\n```js\nimport {test as hoge} from \"./lib\";\n\nhoge(); // => \"test\"\n```\n\n### defaultを使った例\n\n#### export\n\n```js\nexport default function test() {\n  console.log(\"test\");\n}\n```\n\n#### import\n\n```js\nimport test from \"./lib\";\n\ntest(); // => \"test\"\n```\n\ndefaultを使った場合、特に指定しなくても`test`がimportされる。\n\n#### 別の名前でimportする\n\n`as`を使って次のようにすると、Babelではパースエラーとなる。\n\n```js\nimport test as hoge from \"./lib\";\n// Unexpected token \"as\"\n```\n\ndefaultを使わない場合と同じようにブラケットを使ってimportして実行してみるとエラーが起こる。`hoge`は`undefined`となる。\n\n```js\nimport {test as hoge} from \"./lib\";\n\nhoge(); // Uncaught TypeError: undefined is not a function\n```\n\n#### defaultキーワードが使われたモジュールの名前\n\ndefaultキーワードが付いたモジュールを`as`を使って名前を変える場合、次のようにする。\n\n```js\nimport {default as hoge} from \"./lib\";\n```\n\nそう、defaultキーワードを使ったモジュールはdefaultという名前がついてexportされるのである！\n\nここで最初のimportをもう一回。\n\n```js\nimport test from \"./lib\";\n```\n\nこれはtestというモジュールimportしているのではなく、defaultというモジュールを`test`としてimportしているというコードだったのである！\n\n↑これを知らないで適当にdefaultをつけてexportしてると、ますますわからなくなること必至。もう大丈夫。\n\n\n## import * は何をしているのか\n\n`*`を使うと、import先のファイル内でexportしているモジュールを全てまとめてimportできる。\n\n### 複数のexport\n\n```js\nexport default function test() {\n  console.log(\"test\");\n}\n\nexport function test2() {\n  console.log(\"test2\");\n}\n```\n\nimportする。このとき`as`を使って名前を付ける必要がある。\n\n```js\nimport * as hoge from \"./lib\";\n\nconsole.log(hoge); // => {default: function, test2: function }\n```\n\nモジュールが格納されたオブジェクトとしてimportすることができる。defaultキーワードが付いたモジュールは`default`という名前になっていることがわかる。\n\n#### defaultを複数回使うと？\n\nここまで来ると「defaultは変数名みたいなもの」というのがわかると思うので、なんとなく予想できる。\n\nそう、同一ファイル内でdefaultキーワードが複数回使われた場合、一番最後にdefaultをつけたものがexportされる。（Babelで変換してrequireしているのでes6の仕様的に正しいか不明）\n\n### 単一のexport\n\n先の例では複数のモジュールをexportしていたが、単一のexportの場合に、importした結果が大きく変わる。しかも、defaultを使っているかいないかで変わってくる。\n\n#### defaultを使ってない場合\n\n```js\nexport function test() {\n  console.log(\"hoge\");\n}\n```\n\n```js\nimport * as hoge from \"./lib\";\n\nconsole.log(hoge); // => {test: function}\n```\n\ndefaultを使ってない場合には先の例と同じようにオブジェクトとしてimportされる。\n\n#### defaultを使っている場合\n\n```js\nexport default function test() {\n  console.log(\"hoge\");\n}\n```\n\n```js\nimport * as hoge from \"./lib\";\n\nconsole.log(hoge); // => function test { ... }\n```\n\nオブジェクトが返ってくると思い込んで`hoge.test()`みたいなことをすると、エラーになることがあるかもしれない。\n\n## おわり\n\nだいたい理解した。\n\nここまで全部Babelの変換したコードで試してるので仕様的に↑の動作が正しいのかはまた次の機会に…\n\n",
    "body_html": "<p>created_at: 2015-04-20 23:02:50 +0900<br>\nuser: nakajmg</p>\n\n<ul>\n<li>default</li>\n<li>import *</li>\n<li>as</li>\n</ul>\n\n<p>この辺の理解がイマイチなので色々試して理解した。</p>\n\n<h2 id=\"0-1-0\" name=\"0-1-0\">\n<a class=\"anchor\" href=\"#0-1-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"単一のexport\"> &gt; 単一のexport</span></a>単一のexport</h2>\n\n<p>まずはファイル内でexportしているモジュールが1つの場合。export側のファイル名は<code>lib.js</code>とする。</p>\n\n<h3 id=\"0-1-1\" name=\"0-1-1\">\n<a class=\"anchor\" href=\"#0-1-1\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"defaultを使わない例\"> &gt; defaultを使わない例</span></a>defaultを使わない例</h3>\n\n<h4>export</h4>\n<div class=\"code-block\">\n<pre class=\"highlight javascript\"><code><span class=\"kr\">export</span> <span class=\"kd\">function</span> <span class=\"nx\">test</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s2\">\"test\"</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre>\n</div>\n<h4>import</h4>\n<div class=\"code-block\">\n<pre class=\"highlight javascript\"><code><span class=\"kr\">import</span> <span class=\"p\">{</span><span class=\"nx\">test</span><span class=\"p\">}</span> <span class=\"nx\">from</span> <span class=\"s2\">\"./lib\"</span><span class=\"p\">;</span>\n\n<span class=\"nx\">test</span><span class=\"p\">();</span> <span class=\"c1\">// =&gt; \"test\"</span>\n</code></pre>\n</div>\n<p>ブランケット<code>{}</code>でexportされているtestを名指しで指定して<code>test</code>という変数としてimportしている。defaultキーワードのついていないモジュールをimportする場合、importするモジュールの名前を知っている必要がある。</p>\n\n<h4>別の名前でimportする</h4>\n\n<p>次のように<code>as</code>を使うことでimportする際に名前を指定できる。ここでは<code>hoge</code>という名前で関数testをimportしている。</p>\n<div class=\"code-block\">\n<pre class=\"highlight javascript\"><code><span class=\"kr\">import</span> <span class=\"p\">{</span><span class=\"nx\">test</span> <span class=\"nx\">as</span> <span class=\"nx\">hoge</span><span class=\"p\">}</span> <span class=\"nx\">from</span> <span class=\"s2\">\"./lib\"</span><span class=\"p\">;</span>\n\n<span class=\"nx\">hoge</span><span class=\"p\">();</span> <span class=\"c1\">// =&gt; \"test\"</span>\n</code></pre>\n</div>\n<h3 id=\"0-1-2\" name=\"0-1-2\">\n<a class=\"anchor\" href=\"#0-1-2\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"defaultを使った例\"> &gt; defaultを使った例</span></a>defaultを使った例</h3>\n\n<h4>export</h4>\n<div class=\"code-block\">\n<pre class=\"highlight javascript\"><code><span class=\"kr\">export</span> <span class=\"k\">default</span> <span class=\"kd\">function</span> <span class=\"nx\">test</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s2\">\"test\"</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre>\n</div>\n<h4>import</h4>\n<div class=\"code-block\">\n<pre class=\"highlight javascript\"><code><span class=\"kr\">import</span> <span class=\"nx\">test</span> <span class=\"nx\">from</span> <span class=\"s2\">\"./lib\"</span><span class=\"p\">;</span>\n\n<span class=\"nx\">test</span><span class=\"p\">();</span> <span class=\"c1\">// =&gt; \"test\"</span>\n</code></pre>\n</div>\n<p>defaultを使った場合、特に指定しなくても<code>test</code>がimportされる。</p>\n\n<h4>別の名前でimportする</h4>\n\n<p><code>as</code>を使って次のようにすると、Babelではパースエラーとなる。</p>\n<div class=\"code-block\">\n<pre class=\"highlight javascript\"><code><span class=\"kr\">import</span> <span class=\"nx\">test</span> <span class=\"nx\">as</span> <span class=\"nx\">hoge</span> <span class=\"nx\">from</span> <span class=\"s2\">\"./lib\"</span><span class=\"p\">;</span>\n<span class=\"c1\">// Unexpected token \"as\"</span>\n</code></pre>\n</div>\n<p>defaultを使わない場合と同じようにブラケットを使ってimportして実行してみるとエラーが起こる。<code>hoge</code>は<code>undefined</code>となる。</p>\n<div class=\"code-block\">\n<pre class=\"highlight javascript\"><code><span class=\"kr\">import</span> <span class=\"p\">{</span><span class=\"nx\">test</span> <span class=\"nx\">as</span> <span class=\"nx\">hoge</span><span class=\"p\">}</span> <span class=\"nx\">from</span> <span class=\"s2\">\"./lib\"</span><span class=\"p\">;</span>\n\n<span class=\"nx\">hoge</span><span class=\"p\">();</span> <span class=\"c1\">// Uncaught TypeError: undefined is not a function</span>\n</code></pre>\n</div>\n<h4>defaultキーワードが使われたモジュールの名前</h4>\n\n<p>defaultキーワードが付いたモジュールを<code>as</code>を使って名前を変える場合、次のようにする。</p>\n<div class=\"code-block\">\n<pre class=\"highlight javascript\"><code><span class=\"kr\">import</span> <span class=\"p\">{</span><span class=\"k\">default</span> <span class=\"nx\">as</span> <span class=\"nx\">hoge</span><span class=\"p\">}</span> <span class=\"nx\">from</span> <span class=\"s2\">\"./lib\"</span><span class=\"p\">;</span>\n</code></pre>\n</div>\n<p>そう、defaultキーワードを使ったモジュールはdefaultという名前がついてexportされるのである！</p>\n\n<p>ここで最初のimportをもう一回。</p>\n<div class=\"code-block\">\n<pre class=\"highlight javascript\"><code><span class=\"kr\">import</span> <span class=\"nx\">test</span> <span class=\"nx\">from</span> <span class=\"s2\">\"./lib\"</span><span class=\"p\">;</span>\n</code></pre>\n</div>\n<p>これはtestというモジュールimportしているのではなく、defaultというモジュールを<code>test</code>としてimportしているというコードだったのである！</p>\n\n<p>↑これを知らないで適当にdefaultをつけてexportしてると、ますますわからなくなること必至。もう大丈夫。</p>\n\n<h2 id=\"0-2-0\" name=\"0-2-0\">\n<a class=\"anchor\" href=\"#0-2-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"import * は何をしているのか\"> &gt; import * は何をしているのか</span></a>import * は何をしているのか</h2>\n\n<p><code>*</code>を使うと、import先のファイル内でexportしているモジュールを全てまとめてimportできる。</p>\n\n<h3 id=\"0-2-1\" name=\"0-2-1\">\n<a class=\"anchor\" href=\"#0-2-1\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"複数のexport\"> &gt; 複数のexport</span></a>複数のexport</h3>\n<div class=\"code-block\">\n<pre class=\"highlight javascript\"><code><span class=\"kr\">export</span> <span class=\"k\">default</span> <span class=\"kd\">function</span> <span class=\"nx\">test</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s2\">\"test\"</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"kr\">export</span> <span class=\"kd\">function</span> <span class=\"nx\">test2</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s2\">\"test2\"</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre>\n</div>\n<p>importする。このとき<code>as</code>を使って名前を付ける必要がある。</p>\n<div class=\"code-block\">\n<pre class=\"highlight javascript\"><code><span class=\"kr\">import</span> <span class=\"o\">*</span> <span class=\"nx\">as</span> <span class=\"nx\">hoge</span> <span class=\"nx\">from</span> <span class=\"s2\">\"./lib\"</span><span class=\"p\">;</span>\n\n<span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">hoge</span><span class=\"p\">);</span> <span class=\"c1\">// =&gt; {default: function, test2: function }</span>\n</code></pre>\n</div>\n<p>モジュールが格納されたオブジェクトとしてimportすることができる。defaultキーワードが付いたモジュールは<code>default</code>という名前になっていることがわかる。</p>\n\n<h4>defaultを複数回使うと？</h4>\n\n<p>ここまで来ると「defaultは変数名みたいなもの」というのがわかると思うので、なんとなく予想できる。</p>\n\n<p>そう、同一ファイル内でdefaultキーワードが複数回使われた場合、一番最後にdefaultをつけたものがexportされる。（Babelで変換してrequireしているのでes6の仕様的に正しいか不明）</p>\n\n<h3 id=\"0-2-2\" name=\"0-2-2\">\n<a class=\"anchor\" href=\"#0-2-2\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"単一のexport\"> &gt; 単一のexport</span></a>単一のexport</h3>\n\n<p>先の例では複数のモジュールをexportしていたが、単一のexportの場合に、importした結果が大きく変わる。しかも、defaultを使っているかいないかで変わってくる。</p>\n\n<h4>defaultを使ってない場合</h4>\n<div class=\"code-block\">\n<pre class=\"highlight javascript\"><code><span class=\"kr\">export</span> <span class=\"kd\">function</span> <span class=\"nx\">test</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s2\">\"hoge\"</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre>\n</div>\n<div class=\"code-block\">\n<pre class=\"highlight javascript\"><code><span class=\"kr\">import</span> <span class=\"o\">*</span> <span class=\"nx\">as</span> <span class=\"nx\">hoge</span> <span class=\"nx\">from</span> <span class=\"s2\">\"./lib\"</span><span class=\"p\">;</span>\n\n<span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">hoge</span><span class=\"p\">);</span> <span class=\"c1\">// =&gt; {test: function}</span>\n</code></pre>\n</div>\n<p>defaultを使ってない場合には先の例と同じようにオブジェクトとしてimportされる。</p>\n\n<h4>defaultを使っている場合</h4>\n<div class=\"code-block\">\n<pre class=\"highlight javascript\"><code><span class=\"kr\">export</span> <span class=\"k\">default</span> <span class=\"kd\">function</span> <span class=\"nx\">test</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s2\">\"hoge\"</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre>\n</div>\n<div class=\"code-block\">\n<pre class=\"highlight javascript\"><code><span class=\"kr\">import</span> <span class=\"o\">*</span> <span class=\"nx\">as</span> <span class=\"nx\">hoge</span> <span class=\"nx\">from</span> <span class=\"s2\">\"./lib\"</span><span class=\"p\">;</span>\n\n<span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">hoge</span><span class=\"p\">);</span> <span class=\"c1\">// =&gt; function test { ... }</span>\n</code></pre>\n</div>\n<p>オブジェクトが返ってくると思い込んで<code>hoge.test()</code>みたいなことをすると、エラーになることがあるかもしれない。</p>\n\n<h2 id=\"0-3-0\" name=\"0-3-0\">\n<a class=\"anchor\" href=\"#0-3-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"おわり\"> &gt; おわり</span></a>おわり</h2>\n\n<p>だいたい理解した。</p>\n\n<p>ここまで全部Babelの変換したコードで試してるので仕様的に↑の動作が正しいのかはまた次の機会に…</p>\n",
    "created_at": "2015-07-02T00:18:28+09:00",
    "message": "[skip notice] Imported from Qiita",
    "kind": "stock",
    "comments_count": 0,
    "tasks_count": 0,
    "done_tasks_count": 0,
    "url": "https://pxgrid.esa.io/posts/478",
    "updated_at": "2015-07-02T00:18:28+09:00",
    "tags": [
      "JavaScript"
    ],
    "category": "Imports/Qiita/es6のimport",
    "revision_number": 1,
    "created_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "updated_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "stargazers_count": 0,
    "watchers_count": 1,
    "star": false,
    "watch": true,
    "_uid": 1446574748041,
    "_modified_at": ""
  },
  {
    "number": 422,
    "name": "Atomに入れてるパッケージ",
    "full_name": "Imports/Qiita/Atomに入れてるパッケージ #Atom",
    "wip": false,
    "body_md": "created_at: 2015-02-25 02:04:52 +0900\nuser: nakajmg\n\nSee this list. \nhttps://atom.io/users/nakajmg/stars\n\n(exclude language support packages)\n\n",
    "body_html": "<p>created_at: 2015-02-25 02:04:52 +0900<br>\nuser: nakajmg</p>\n\n<p>See this list. <br>\n<a target=\"_blank\" href=\"https://atom.io/users/nakajmg/stars\">https://atom.io/users/nakajmg/stars</a></p>\n\n<p>(exclude language support packages)</p>\n",
    "created_at": "2015-07-02T00:01:45+09:00",
    "message": "[skip notice] Imported from Qiita",
    "kind": "stock",
    "comments_count": 0,
    "tasks_count": 0,
    "done_tasks_count": 0,
    "url": "https://pxgrid.esa.io/posts/422",
    "updated_at": "2015-07-02T00:01:45+09:00",
    "tags": [
      "Atom"
    ],
    "category": "Imports/Qiita",
    "revision_number": 1,
    "created_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "updated_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "stargazers_count": 0,
    "watchers_count": 1,
    "star": false,
    "watch": true,
    "_uid": 1446574748042,
    "_modified_at": ""
  },
  {
    "number": 421,
    "name": "console.logに割り込む",
    "full_name": "Imports/Qiita/console.logに割り込む #JavaScript",
    "wip": false,
    "body_md": "created_at: 2015-02-25 01:34:46 +0900\nuser: nakajmg\n\n`console.log`使うデモ用にライブラリっぽいものを作ってる。\n\nhttps://github.com/nakajmg/DemoLogger.js\n\n## 割り込む\n\n画面に表示するだけなら`console.log`を上書きすればいいんだけど、本来の`console.log`が使えなくなるので割り込む。\n\n```js\nvar replacelog = function (el) {\n  var _log = console.log;\n  console.log = function () {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _log.apply(console, args);\n    var logs = [];\n    for (var i = 0, leng = args.length; i < leng; i++) {\n      if (typeof args[i] == \"object\") {\n        logs.push(JSON && JSON.stringify ? JSON.stringify(args[i]) : args[i]);\n      } else {\n        logs.push(args[i]);\n      }\n    }\n    el.innerHTML += logs.join(\" \") + \"<br>\";\n  };\n};\n```\n\n`_log`に本来の`console.log`を入れてる。そのまま実行するとコンテキストが変わってるせいでエラーが出るので`_log.apply(console, )`とやる。\n\n![2015-02-25 01_18_19.gif](https://qiita-image-store.s3.amazonaws.com/778/17969/d92c5f40-6fa0-d51c-45cf-6286bf28150b.gif)\n\n",
    "body_html": "<p>created_at: 2015-02-25 01:34:46 +0900<br>\nuser: nakajmg</p>\n\n<p><code>console.log</code>使うデモ用にライブラリっぽいものを作ってる。</p>\n\n<p><a target=\"_blank\" href=\"https://github.com/nakajmg/DemoLogger.js\">https://github.com/nakajmg/DemoLogger.js</a></p>\n\n<h2 id=\"0-1-0\" name=\"0-1-0\">\n<a class=\"anchor\" href=\"#0-1-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"割り込む\"> &gt; 割り込む</span></a>割り込む</h2>\n\n<p>画面に表示するだけなら<code>console.log</code>を上書きすればいいんだけど、本来の<code>console.log</code>が使えなくなるので割り込む。</p>\n<div class=\"code-block\">\n<pre class=\"highlight javascript\"><code><span class=\"kd\">var</span> <span class=\"nx\">replacelog</span> <span class=\"o\">=</span> <span class=\"kd\">function</span> <span class=\"p\">(</span><span class=\"nx\">el</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"kd\">var</span> <span class=\"nx\">_log</span> <span class=\"o\">=</span> <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">;</span>\n  <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span> <span class=\"o\">=</span> <span class=\"kd\">function</span> <span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kd\">var</span> <span class=\"nx\">_len</span> <span class=\"o\">=</span> <span class=\"nx\">arguments</span><span class=\"p\">.</span><span class=\"nx\">length</span><span class=\"p\">,</span> <span class=\"nx\">args</span> <span class=\"o\">=</span> <span class=\"nb\">Array</span><span class=\"p\">(</span><span class=\"nx\">_len</span><span class=\"p\">),</span> <span class=\"nx\">_key</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span> <span class=\"nx\">_key</span> <span class=\"o\">&lt;</span> <span class=\"nx\">_len</span><span class=\"p\">;</span> <span class=\"nx\">_key</span><span class=\"o\">++</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n      <span class=\"nx\">args</span><span class=\"p\">[</span><span class=\"nx\">_key</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nx\">arguments</span><span class=\"p\">[</span><span class=\"nx\">_key</span><span class=\"p\">];</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"nx\">_log</span><span class=\"p\">.</span><span class=\"nx\">apply</span><span class=\"p\">(</span><span class=\"nx\">console</span><span class=\"p\">,</span> <span class=\"nx\">args</span><span class=\"p\">);</span>\n    <span class=\"kd\">var</span> <span class=\"nx\">logs</span> <span class=\"o\">=</span> <span class=\"p\">[];</span>\n    <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kd\">var</span> <span class=\"nx\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"nx\">leng</span> <span class=\"o\">=</span> <span class=\"nx\">args</span><span class=\"p\">.</span><span class=\"nx\">length</span><span class=\"p\">;</span> <span class=\"nx\">i</span> <span class=\"o\">&lt;</span> <span class=\"nx\">leng</span><span class=\"p\">;</span> <span class=\"nx\">i</span><span class=\"o\">++</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n      <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"k\">typeof</span> <span class=\"nx\">args</span><span class=\"p\">[</span><span class=\"nx\">i</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s2\">\"object\"</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"nx\">logs</span><span class=\"p\">.</span><span class=\"nx\">push</span><span class=\"p\">(</span><span class=\"nx\">JSON</span> <span class=\"o\">&amp;&amp;</span> <span class=\"nx\">JSON</span><span class=\"p\">.</span><span class=\"nx\">stringify</span> <span class=\"p\">?</span> <span class=\"nx\">JSON</span><span class=\"p\">.</span><span class=\"nx\">stringify</span><span class=\"p\">(</span><span class=\"nx\">args</span><span class=\"p\">[</span><span class=\"nx\">i</span><span class=\"p\">])</span> <span class=\"p\">:</span> <span class=\"nx\">args</span><span class=\"p\">[</span><span class=\"nx\">i</span><span class=\"p\">]);</span>\n      <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n        <span class=\"nx\">logs</span><span class=\"p\">.</span><span class=\"nx\">push</span><span class=\"p\">(</span><span class=\"nx\">args</span><span class=\"p\">[</span><span class=\"nx\">i</span><span class=\"p\">]);</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n    <span class=\"nx\">el</span><span class=\"p\">.</span><span class=\"nx\">innerHTML</span> <span class=\"o\">+=</span> <span class=\"nx\">logs</span><span class=\"p\">.</span><span class=\"nx\">join</span><span class=\"p\">(</span><span class=\"s2\">\" \"</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s2\">\"&lt;br&gt;\"</span><span class=\"p\">;</span>\n  <span class=\"p\">};</span>\n<span class=\"p\">};</span>\n</code></pre>\n</div>\n<p><code>_log</code>に本来の<code>console.log</code>を入れてる。そのまま実行するとコンテキストが変わってるせいでエラーが出るので<code>_log.apply(console, )</code>とやる。</p>\n\n<p><a href=\"https://qiita-image-store.s3.amazonaws.com/778/17969/d92c5f40-6fa0-d51c-45cf-6286bf28150b.gif\" target=\"_blank\"><img src=\"https://qiita-image-store.s3.amazonaws.com/778/17969/d92c5f40-6fa0-d51c-45cf-6286bf28150b.gif\" alt=\"2015-02-25 01_18_19.gif\"></a></p>\n",
    "created_at": "2015-07-02T00:01:43+09:00",
    "message": "[skip notice] Imported from Qiita",
    "kind": "stock",
    "comments_count": 0,
    "tasks_count": 0,
    "done_tasks_count": 0,
    "url": "https://pxgrid.esa.io/posts/421",
    "updated_at": "2015-07-02T00:01:43+09:00",
    "tags": [
      "JavaScript"
    ],
    "category": "Imports/Qiita",
    "revision_number": 1,
    "created_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "updated_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "stargazers_count": 0,
    "watchers_count": 1,
    "star": false,
    "watch": true,
    "_uid": 1446574748043,
    "_modified_at": ""
  },
  {
    "number": 372,
    "name": "[CodeGridネタ案] SuperAgentでHTTPリクエスト",
    "full_name": "Imports/Qiita/[CodeGridネタ案] SuperAgentでHTTPリクエスト #JavaScript #CodeGridネタ",
    "wip": false,
    "body_md": "created_at: 2015-01-03 21:45:56 +0900\nuser: nakajmg\n\n書きかけ。「おすすめライブラリ」シリーズ枠。\n\n脱jQuery依存、でもXHRを生で書きたくないときに使うHTTPリクエスト用ライブラリ。\n\n---\n\n[SuperAgent](https://github.com/visionmedia/superagent)はクライアントサイドでHTTPリクエストを行うためのとても小さなライブラリです。ブラウザだけでなくNode.jsのモジュールとしても使うことができます。今回はSuperAgentの特徴や簡単な使い方について紹介します。\n\n![SuperAgent](https://qiita-image-store.s3.amazonaws.com/778/17969/df549e57-2d05-3820-c892-6e87a108c269.png)\n\n## SuperAgentとは\n\nSuperAgentはHTTPリクエストを行うためだけのライブラリです。XMLHttpRequestをラップし、ハイレベルな使いやすいAPIとしてHTTPリクエストを行うことができます。\n\n## 使いどころ\n\nHTTPリクエストをするだけであれば、生のXMLHttpRequest使えばいいかと思うかもしれません。ですが、実際に生のXMLHttpRequestで書いてみると、冗長な記述でコードが肥大化したり、同じようなめんどくさいコードを何回も書くことになります。\n\njQueryの`$.ajax`が利用できればこのライブラリの出番はありませんが、最近ではjQueryとあまり相性の良くないJavaScriptフレームワークも登場してきています。`$.ajax`を使うためだけに100kbに近いライブラリを読み込むのもできれば避けたいところでしょう。\n\nHTTPリクエストがしたいけどXMLHttpRequestは書きたくない、jQueryも読み込みたくない、そんなときの選択肢になるのが今回紹介するSuperAgentです。\n\n## 特徴\n\nSuperAgentのAPIはとてもシンプルで使いやすくできています。例えば、あるURLに対して`GET`によるデータ取得がしたい場合、次のようなコードでHTTPリクエストを行うことができます。\n\n\n```js\nsuperagent\n  .get(\"/path/to/api\")\n  .end(function(res) {\n    console.log(res);\n  });\n```\n\n`get`メソッドにURLを指定して、`end`メソッドに通信が完了した際のコールバック関数を指定し、結果を受け取ります。XMLHttpRequestで書くよりも簡単でわかりやすく、jQueryの`$.ajax`を使うのと同程度に簡潔にHTTPリクエストを行えます。\n\n:note デフォルトでGETによるリクエストを行える\n\nSuperAgentはデフォルトで`GET`での通信をするようになっているので、次のような書き方も可能です。\n\n```js\nsuperagent(\"/path/to/api\").end(function(res) {\n  console.log(res);\n});\n```\n\n\n## 基本的な使い方\n\nSuperAgentを使ったHTTPリクエストの方法を、`$.ajax`の記述と比べながら解説していきます。\n\n## GETリクエスト\n\n次のような`$.ajax`を使って`GET`のHTTPリクエストを行う記述があります。\n\n```js\n$.ajax({\n  url: \"/path/to/api\",\n  type: \"GET\",\n  data: {\n    count: 5,\n    order: \"desc\"\n  }\n})\n.done(function(res) {\n// do some stuff  \n})\n.fail(function(res) {\n// do some stuff\n});\n```\n\nこれをSuperAgentを使って記述すると次のようになります。\n\n```js\nsuperagent\n  .get(\"/path/to/api\")\n  .query({\n    count: 5,\n    order: \"desc\"\n  })\n  .end(function(err, res) {\n  // do some stuff\n  });\n```\n\nGET時にパラメータを送る場合、`$.ajax`では`data`フィールドにパラメータを設定しますが、SuperAgentでは`query`メソッドに設定します。実行すると`/path/to/api?count=5&order=desc`といったように、パラメータ付きでGETリクエストを行います。\n\nエラーハンドリングについては後述します。\n\n\n## POSTリクエスト\n\n次に`$.ajax`を使って`POST`のHTTPリクエストを行う記述があります。\n\n```js\n$.ajax({\n  url: \"/path/to/api\",\n  type: \"POST\",\n  data: {\n    id: \"nakajmg\",\n    age: \"29\"\n  },\n  headers: {\"X-API-Key\": \"hogehoge\"}\n})\n.done(function(res) {\n// do some stuff  \n})\n.fail(function(res) {\n// do some stuff\n});\n```\n\nこれをSuperAgentを使って記述すると次のようになります。\n\n```js\nsuperagent\n  .post(\"/path/to/api\")\n  .send({\n    id: \"nakajmg\",\n    age: \"29\"\n  })\n  .set(\"X-API-Key\": \"hogehoge\")\n  .set(\"Accept\", \"application/json\")\n  .end(function(err, res) {\n  // do some stuff\n  });\n```\n\nPOST時にデータを送る場合には`send`メソッドを使います。特定のHTTPヘッダーを付与したい場合には`set`メソッドを使います。\n\n\n## レスポンス\n\n* Response text\n* Response body\n\n## エラーハンドリング\n\n* abort\n* timeout\n* on\nhttp://visionmedia.github.io/superagent/\n\n",
    "body_html": "<p>created_at: 2015-01-03 21:45:56 +0900<br>\nuser: nakajmg</p>\n\n<p>書きかけ。「おすすめライブラリ」シリーズ枠。</p>\n\n<p>脱jQuery依存、でもXHRを生で書きたくないときに使うHTTPリクエスト用ライブラリ。</p>\n\n<hr>\n\n<p><a target=\"_blank\" href=\"https://github.com/visionmedia/superagent\">SuperAgent</a>はクライアントサイドでHTTPリクエストを行うためのとても小さなライブラリです。ブラウザだけでなくNode.jsのモジュールとしても使うことができます。今回はSuperAgentの特徴や簡単な使い方について紹介します。</p>\n\n<p><a href=\"https://qiita-image-store.s3.amazonaws.com/778/17969/df549e57-2d05-3820-c892-6e87a108c269.png\" target=\"_blank\"><img src=\"https://qiita-image-store.s3.amazonaws.com/778/17969/df549e57-2d05-3820-c892-6e87a108c269.png\" alt=\"SuperAgent\"></a></p>\n\n<h2 id=\"0-1-0\" name=\"0-1-0\">\n<a class=\"anchor\" href=\"#0-1-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"SuperAgentとは\"> &gt; SuperAgentとは</span></a>SuperAgentとは</h2>\n\n<p>SuperAgentはHTTPリクエストを行うためだけのライブラリです。XMLHttpRequestをラップし、ハイレベルな使いやすいAPIとしてHTTPリクエストを行うことができます。</p>\n\n<h2 id=\"0-2-0\" name=\"0-2-0\">\n<a class=\"anchor\" href=\"#0-2-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"使いどころ\"> &gt; 使いどころ</span></a>使いどころ</h2>\n\n<p>HTTPリクエストをするだけであれば、生のXMLHttpRequest使えばいいかと思うかもしれません。ですが、実際に生のXMLHttpRequestで書いてみると、冗長な記述でコードが肥大化したり、同じようなめんどくさいコードを何回も書くことになります。</p>\n\n<p>jQueryの<code>$.ajax</code>が利用できればこのライブラリの出番はありませんが、最近ではjQueryとあまり相性の良くないJavaScriptフレームワークも登場してきています。<code>$.ajax</code>を使うためだけに100kbに近いライブラリを読み込むのもできれば避けたいところでしょう。</p>\n\n<p>HTTPリクエストがしたいけどXMLHttpRequestは書きたくない、jQueryも読み込みたくない、そんなときの選択肢になるのが今回紹介するSuperAgentです。</p>\n\n<h2 id=\"0-3-0\" name=\"0-3-0\">\n<a class=\"anchor\" href=\"#0-3-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"特徴\"> &gt; 特徴</span></a>特徴</h2>\n\n<p>SuperAgentのAPIはとてもシンプルで使いやすくできています。例えば、あるURLに対して<code>GET</code>によるデータ取得がしたい場合、次のようなコードでHTTPリクエストを行うことができます。</p>\n<div class=\"code-block\">\n<pre class=\"highlight javascript\"><code><span class=\"nx\">superagent</span>\n  <span class=\"p\">.</span><span class=\"nx\">get</span><span class=\"p\">(</span><span class=\"s2\">\"/path/to/api\"</span><span class=\"p\">)</span>\n  <span class=\"p\">.</span><span class=\"nx\">end</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">res</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">res</span><span class=\"p\">);</span>\n  <span class=\"p\">});</span>\n</code></pre>\n</div>\n<p><code>get</code>メソッドにURLを指定して、<code>end</code>メソッドに通信が完了した際のコールバック関数を指定し、結果を受け取ります。XMLHttpRequestで書くよりも簡単でわかりやすく、jQueryの<code>$.ajax</code>を使うのと同程度に簡潔にHTTPリクエストを行えます。</p>\n\n<p>:note デフォルトでGETによるリクエストを行える</p>\n\n<p>SuperAgentはデフォルトで<code>GET</code>での通信をするようになっているので、次のような書き方も可能です。</p>\n<div class=\"code-block\">\n<pre class=\"highlight javascript\"><code><span class=\"nx\">superagent</span><span class=\"p\">(</span><span class=\"s2\">\"/path/to/api\"</span><span class=\"p\">).</span><span class=\"nx\">end</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">res</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">res</span><span class=\"p\">);</span>\n<span class=\"p\">});</span>\n</code></pre>\n</div>\n<h2 id=\"0-4-0\" name=\"0-4-0\">\n<a class=\"anchor\" href=\"#0-4-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"基本的な使い方\"> &gt; 基本的な使い方</span></a>基本的な使い方</h2>\n\n<p>SuperAgentを使ったHTTPリクエストの方法を、<code>$.ajax</code>の記述と比べながら解説していきます。</p>\n\n<h2 id=\"0-5-0\" name=\"0-5-0\">\n<a class=\"anchor\" href=\"#0-5-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"GETリクエスト\"> &gt; GETリクエスト</span></a>GETリクエスト</h2>\n\n<p>次のような<code>$.ajax</code>を使って<code>GET</code>のHTTPリクエストを行う記述があります。</p>\n<div class=\"code-block\">\n<pre class=\"highlight javascript\"><code><span class=\"nx\">$</span><span class=\"p\">.</span><span class=\"nx\">ajax</span><span class=\"p\">({</span>\n  <span class=\"na\">url</span><span class=\"p\">:</span> <span class=\"s2\">\"/path/to/api\"</span><span class=\"p\">,</span>\n  <span class=\"na\">type</span><span class=\"p\">:</span> <span class=\"s2\">\"GET\"</span><span class=\"p\">,</span>\n  <span class=\"na\">data</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"na\">count</span><span class=\"p\">:</span> <span class=\"mi\">5</span><span class=\"p\">,</span>\n    <span class=\"na\">order</span><span class=\"p\">:</span> <span class=\"s2\">\"desc\"</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">})</span>\n<span class=\"p\">.</span><span class=\"nx\">done</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">res</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n<span class=\"c1\">// do some stuff  </span>\n<span class=\"p\">})</span>\n<span class=\"p\">.</span><span class=\"nx\">fail</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">res</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n<span class=\"c1\">// do some stuff</span>\n<span class=\"p\">});</span>\n</code></pre>\n</div>\n<p>これをSuperAgentを使って記述すると次のようになります。</p>\n<div class=\"code-block\">\n<pre class=\"highlight javascript\"><code><span class=\"nx\">superagent</span>\n  <span class=\"p\">.</span><span class=\"nx\">get</span><span class=\"p\">(</span><span class=\"s2\">\"/path/to/api\"</span><span class=\"p\">)</span>\n  <span class=\"p\">.</span><span class=\"nx\">query</span><span class=\"p\">({</span>\n    <span class=\"na\">count</span><span class=\"p\">:</span> <span class=\"mi\">5</span><span class=\"p\">,</span>\n    <span class=\"na\">order</span><span class=\"p\">:</span> <span class=\"s2\">\"desc\"</span>\n  <span class=\"p\">})</span>\n  <span class=\"p\">.</span><span class=\"nx\">end</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">,</span> <span class=\"nx\">res</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"c1\">// do some stuff</span>\n  <span class=\"p\">});</span>\n</code></pre>\n</div>\n<p>GET時にパラメータを送る場合、<code>$.ajax</code>では<code>data</code>フィールドにパラメータを設定しますが、SuperAgentでは<code>query</code>メソッドに設定します。実行すると<code>/path/to/api?count=5&amp;order=desc</code>といったように、パラメータ付きでGETリクエストを行います。</p>\n\n<p>エラーハンドリングについては後述します。</p>\n\n<h2 id=\"0-6-0\" name=\"0-6-0\">\n<a class=\"anchor\" href=\"#0-6-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"POSTリクエスト\"> &gt; POSTリクエスト</span></a>POSTリクエスト</h2>\n\n<p>次に<code>$.ajax</code>を使って<code>POST</code>のHTTPリクエストを行う記述があります。</p>\n<div class=\"code-block\">\n<pre class=\"highlight javascript\"><code><span class=\"nx\">$</span><span class=\"p\">.</span><span class=\"nx\">ajax</span><span class=\"p\">({</span>\n  <span class=\"na\">url</span><span class=\"p\">:</span> <span class=\"s2\">\"/path/to/api\"</span><span class=\"p\">,</span>\n  <span class=\"na\">type</span><span class=\"p\">:</span> <span class=\"s2\">\"POST\"</span><span class=\"p\">,</span>\n  <span class=\"na\">data</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"na\">id</span><span class=\"p\">:</span> <span class=\"s2\">\"nakajmg\"</span><span class=\"p\">,</span>\n    <span class=\"na\">age</span><span class=\"p\">:</span> <span class=\"s2\">\"29\"</span>\n  <span class=\"p\">},</span>\n  <span class=\"na\">headers</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">\"X-API-Key\"</span><span class=\"p\">:</span> <span class=\"s2\">\"hogehoge\"</span><span class=\"p\">}</span>\n<span class=\"p\">})</span>\n<span class=\"p\">.</span><span class=\"nx\">done</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">res</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n<span class=\"c1\">// do some stuff  </span>\n<span class=\"p\">})</span>\n<span class=\"p\">.</span><span class=\"nx\">fail</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">res</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n<span class=\"c1\">// do some stuff</span>\n<span class=\"p\">});</span>\n</code></pre>\n</div>\n<p>これをSuperAgentを使って記述すると次のようになります。</p>\n<div class=\"code-block\">\n<pre class=\"highlight javascript\"><code><span class=\"nx\">superagent</span>\n  <span class=\"p\">.</span><span class=\"nx\">post</span><span class=\"p\">(</span><span class=\"s2\">\"/path/to/api\"</span><span class=\"p\">)</span>\n  <span class=\"p\">.</span><span class=\"nx\">send</span><span class=\"p\">({</span>\n    <span class=\"na\">id</span><span class=\"p\">:</span> <span class=\"s2\">\"nakajmg\"</span><span class=\"p\">,</span>\n    <span class=\"na\">age</span><span class=\"p\">:</span> <span class=\"s2\">\"29\"</span>\n  <span class=\"p\">})</span>\n  <span class=\"p\">.</span><span class=\"nx\">set</span><span class=\"p\">(</span><span class=\"s2\">\"X-API-Key\"</span><span class=\"err\">:</span> <span class=\"s2\">\"hogehoge\"</span><span class=\"p\">)</span>\n  <span class=\"p\">.</span><span class=\"nx\">set</span><span class=\"p\">(</span><span class=\"s2\">\"Accept\"</span><span class=\"p\">,</span> <span class=\"s2\">\"application/json\"</span><span class=\"p\">)</span>\n  <span class=\"p\">.</span><span class=\"nx\">end</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">,</span> <span class=\"nx\">res</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"c1\">// do some stuff</span>\n  <span class=\"p\">});</span>\n</code></pre>\n</div>\n<p>POST時にデータを送る場合には<code>send</code>メソッドを使います。特定のHTTPヘッダーを付与したい場合には<code>set</code>メソッドを使います。</p>\n\n<h2 id=\"0-7-0\" name=\"0-7-0\">\n<a class=\"anchor\" href=\"#0-7-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"レスポンス\"> &gt; レスポンス</span></a>レスポンス</h2>\n\n<ul>\n<li>Response text</li>\n<li>Response body</li>\n</ul>\n\n<h2 id=\"0-8-0\" name=\"0-8-0\">\n<a class=\"anchor\" href=\"#0-8-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"エラーハンドリング\"> &gt; エラーハンドリング</span></a>エラーハンドリング</h2>\n\n<ul>\n<li>abort</li>\n<li>timeout</li>\n<li>on\n<a target=\"_blank\" href=\"http://visionmedia.github.io/superagent/\">http://visionmedia.github.io/superagent/</a>\n</li>\n</ul>\n",
    "created_at": "2015-07-02T00:00:09+09:00",
    "message": "[skip notice] Imported from Qiita",
    "kind": "stock",
    "comments_count": 0,
    "tasks_count": 0,
    "done_tasks_count": 0,
    "url": "https://pxgrid.esa.io/posts/372",
    "updated_at": "2015-07-02T00:00:09+09:00",
    "tags": [
      "JavaScript",
      "CodeGridネタ"
    ],
    "category": "Imports/Qiita",
    "revision_number": 1,
    "created_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "updated_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "stargazers_count": 0,
    "watchers_count": 1,
    "star": false,
    "watch": true,
    "_uid": 1446574748044,
    "_modified_at": ""
  },
  {
    "number": 370,
    "name": "String.trim()",
    "full_name": "Imports/Qiita/String.trim() #JavaScript",
    "wip": false,
    "body_md": "created_at: 2014-12-25 08:37:01 +0900\nuser: nakajmg\n\nhttps://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/String/trim\n\n文字列の両端の空白を削除してくれる。非破壊的メソッド\n\n```\nvar str = \"  hoge       \";\nconsole.log(str.length); // => 13\n\nconsole.log(str.trim()); // => \"hoge\"\nconsole.log(str.trim().length); // => 4\n```\n\n## 実装状況\n\nChrome,Firefox,IE9以上\n\nただしどれも仕様通りではない？\n\n> 訳者注: 上記コードの正規表現文字列中にある「\\s」は空白文字にマッチするメタ文字です。しかし Internet Explorer のいくつかのバージョンは、EcmaScript で trim の削除対象として定義されている空白文字のひとつである「\\u00A0」にマッチしません。また、Google Chrome のいくつかのバージョンは、現在仕様で削除対象とされていない全角空白（\\u3000）を削除対象としています。よって上記コードは、全てのブラウザでの trim の動作を完全に一致させるものものではありません。\n\n確認したところChromeとFirefoxのどちらも全角空白を削除するようになってた\n\n## trimLeftとtrimRightもあるよ\n\n左端/右端の空白だけを削除してくれる。\n\nChromeとFirefoxで使えるけど非標準なのであまり使わないほうがよさそう\n\n\n",
    "body_html": "<p>created_at: 2014-12-25 08:37:01 +0900<br>\nuser: nakajmg</p>\n\n<p><a target=\"_blank\" href=\"https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/String/trim\">https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/String/trim</a></p>\n\n<p>文字列の両端の空白を削除してくれる。非破壊的メソッド</p>\n<div class=\"code-block\">\n<pre class=\"highlight plaintext\"><code>var str = \"  hoge       \";\nconsole.log(str.length); // =&gt; 13\n\nconsole.log(str.trim()); // =&gt; \"hoge\"\nconsole.log(str.trim().length); // =&gt; 4\n</code></pre>\n</div>\n<h2 id=\"0-1-0\" name=\"0-1-0\">\n<a class=\"anchor\" href=\"#0-1-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"実装状況\"> &gt; 実装状況</span></a>実装状況</h2>\n\n<p>Chrome,Firefox,IE9以上</p>\n\n<p>ただしどれも仕様通りではない？</p>\n\n<blockquote>\n<p>訳者注: 上記コードの正規表現文字列中にある「\\s」は空白文字にマッチするメタ文字です。しかし Internet Explorer のいくつかのバージョンは、EcmaScript で trim の削除対象として定義されている空白文字のひとつである「\\u00A0」にマッチしません。また、Google Chrome のいくつかのバージョンは、現在仕様で削除対象とされていない全角空白（\\u3000）を削除対象としています。よって上記コードは、全てのブラウザでの trim の動作を完全に一致させるものものではありません。</p>\n</blockquote>\n\n<p>確認したところChromeとFirefoxのどちらも全角空白を削除するようになってた</p>\n\n<h2 id=\"0-2-0\" name=\"0-2-0\">\n<a class=\"anchor\" href=\"#0-2-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"trimLeftとtrimRightもあるよ\"> &gt; trimLeftとtrimRightもあるよ</span></a>trimLeftとtrimRightもあるよ</h2>\n\n<p>左端/右端の空白だけを削除してくれる。</p>\n\n<p>ChromeとFirefoxで使えるけど非標準なのであまり使わないほうがよさそう</p>\n",
    "created_at": "2015-07-02T00:00:04+09:00",
    "message": "[skip notice] Imported from Qiita",
    "kind": "stock",
    "comments_count": 0,
    "tasks_count": 0,
    "done_tasks_count": 0,
    "url": "https://pxgrid.esa.io/posts/370",
    "updated_at": "2015-07-02T00:00:04+09:00",
    "tags": [
      "JavaScript"
    ],
    "category": "Imports/Qiita",
    "revision_number": 1,
    "created_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "updated_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "stargazers_count": 0,
    "watchers_count": 1,
    "star": false,
    "watch": true,
    "_uid": 1446574748045,
    "_modified_at": ""
  },
  {
    "number": 366,
    "name": "jQueryオブジェクトにしたDocumentFragmentでfindが使えない",
    "full_name": "Imports/Qiita/jQueryオブジェクトにしたDocumentFragmentでfindが使えない #JavaScript",
    "wip": false,
    "body_md": "created_at: 2014-12-19 16:37:04 +0900\nuser: nakajmg\n\nパフォーマンス的なアレで使う`DocumentFragment`を使うときに、`append`とかはjQuery使ってやりたいときの話。\n\n```\nvar $df = $(document.createDocumentFragment());\n```\n\nこれでjQueryで操作できる、んだけど`find`で要素の探索ができない。\n\n```\nvar $df = $(document.createDocumentFragment());\n$df.append(\"<div id='hoge' class='hoge'>hoge</div>\");\n$df.append(\"<div id='fuga' class='fuga'>fuga</div>\");\n\nvar hoge = $df.find(\"#hoge\");\nvar huga = $df.find(\".fuga\");\n\nconsole.log(hoge.length); // => 0\nconsole.log(huga.length); // => 0\n```\n\n`querySelector`は動く。\n\n```\nhoge = $df[0].querySelector(\"#hoge\");\nfuga = $df[0].querySelector(\".fuga\");\n\nconsole.log(hoge); // => <div id=\"hoge\" class=\"hoge\">hoge</div>\nconsole.log(fuga); // => <div id=\"fuga\" class=\"hoge\">fuga</div>\n```\n\n要素でワンクッション挟むと大丈夫\n\n```\nvar hoge2 = $(\"<div>\").append($df).find(\"#hoge\");\nconsole.log(hoge2.length); // => 1\n```\n\nhttp://codepen.io/nakajmg/pen/PwzRKY?editors=001\n\n## まとめ\n\njQueryオブジェクトのルートが`DocumentFragment`だと`find`が使えない。\n\n",
    "body_html": "<p>created_at: 2014-12-19 16:37:04 +0900<br>\nuser: nakajmg</p>\n\n<p>パフォーマンス的なアレで使う<code>DocumentFragment</code>を使うときに、<code>append</code>とかはjQuery使ってやりたいときの話。</p>\n<div class=\"code-block\">\n<pre class=\"highlight plaintext\"><code>var $df = $(document.createDocumentFragment());\n</code></pre>\n</div>\n<p>これでjQueryで操作できる、んだけど<code>find</code>で要素の探索ができない。</p>\n<div class=\"code-block\">\n<pre class=\"highlight plaintext\"><code>var $df = $(document.createDocumentFragment());\n$df.append(\"&lt;div id='hoge' class='hoge'&gt;hoge&lt;/div&gt;\");\n$df.append(\"&lt;div id='fuga' class='fuga'&gt;fuga&lt;/div&gt;\");\n\nvar hoge = $df.find(\"#hoge\");\nvar huga = $df.find(\".fuga\");\n\nconsole.log(hoge.length); // =&gt; 0\nconsole.log(huga.length); // =&gt; 0\n</code></pre>\n</div>\n<p><code>querySelector</code>は動く。</p>\n<div class=\"code-block\">\n<pre class=\"highlight plaintext\"><code>hoge = $df[0].querySelector(\"#hoge\");\nfuga = $df[0].querySelector(\".fuga\");\n\nconsole.log(hoge); // =&gt; &lt;div id=\"hoge\" class=\"hoge\"&gt;hoge&lt;/div&gt;\nconsole.log(fuga); // =&gt; &lt;div id=\"fuga\" class=\"hoge\"&gt;fuga&lt;/div&gt;\n</code></pre>\n</div>\n<p>要素でワンクッション挟むと大丈夫</p>\n<div class=\"code-block\">\n<pre class=\"highlight plaintext\"><code>var hoge2 = $(\"&lt;div&gt;\").append($df).find(\"#hoge\");\nconsole.log(hoge2.length); // =&gt; 1\n</code></pre>\n</div>\n<p><a target=\"_blank\" href=\"http://codepen.io/nakajmg/pen/PwzRKY?editors=001\">http://codepen.io/nakajmg/pen/PwzRKY?editors=001</a></p>\n\n<h2 id=\"0-1-0\" name=\"0-1-0\">\n<a class=\"anchor\" href=\"#0-1-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"まとめ\"> &gt; まとめ</span></a>まとめ</h2>\n\n<p>jQueryオブジェクトのルートが<code>DocumentFragment</code>だと<code>find</code>が使えない。</p>\n",
    "created_at": "2015-07-01T23:59:59+09:00",
    "message": "[skip notice] Imported from Qiita",
    "kind": "stock",
    "comments_count": 0,
    "tasks_count": 0,
    "done_tasks_count": 0,
    "url": "https://pxgrid.esa.io/posts/366",
    "updated_at": "2015-07-01T23:59:59+09:00",
    "tags": [
      "JavaScript"
    ],
    "category": "Imports/Qiita",
    "revision_number": 1,
    "created_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "updated_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "stargazers_count": 0,
    "watchers_count": 1,
    "star": false,
    "watch": true,
    "_uid": 1446574748046,
    "_modified_at": ""
  },
  {
    "number": 362,
    "name": "記事でHTML文字列書くときにどう書くか",
    "full_name": "Imports/Qiita/記事でHTML文字列書くときにどう書くか #JavaScript",
    "wip": false,
    "body_md": "created_at: 2014-12-16 10:02:19 +0900\nuser: nakajmg\n\nJSにヒアドキュメントがないのがつらい。フレームワークでHTMLを文字列で書く必要があるときがつらい。\n\n## +でつなぐ\n\n```js\nhtml = \"<div>\"+\n\"<p>THE HTML</p>\"+\n\"</div>\";\n```\n\n## \\でつなぐ\n\n```js\nhtml = \"<div>\\\n<p>THE HTML</p>\\\n</div>\";\n```\n\n## ヒアドキュメントもどき\n\n```js\nhtml = (function () {/*\n<div>\n  <p>THE HTML</p>\n</div>\n*/}).toString().match(/[^]*\\/\\*([^]*)\\*\\/\\}$/)[1];\n```\n\n\n## つらい\n\nどれもつらいけど記事で書くなら+か\\の二択だと思う。\n\nなぜ[ES6](https://pxgrid.qiita.com/hokaccha/items/adaa8c900dc3c58fa944)になるまで放っておいたんだ。\n\n---\n\n### Coffee\n\nCoffeeはヒアドキュメントというかテンプレートストリングが使えるのがヨイ。ただ記事で使うのは適していない。サンプルコードでCoffeeを使うのはクソだ。\n\n",
    "body_html": "<p>created_at: 2014-12-16 10:02:19 +0900<br>\nuser: nakajmg</p>\n\n<p>JSにヒアドキュメントがないのがつらい。フレームワークでHTMLを文字列で書く必要があるときがつらい。</p>\n\n<h2 id=\"0-1-0\" name=\"0-1-0\">\n<a class=\"anchor\" href=\"#0-1-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"+でつなぐ\"> &gt; +でつなぐ</span></a>+でつなぐ</h2>\n<div class=\"code-block\">\n<pre class=\"highlight javascript\"><code><span class=\"nx\">html</span> <span class=\"o\">=</span> <span class=\"s2\">\"&lt;div&gt;\"</span><span class=\"o\">+</span>\n<span class=\"s2\">\"&lt;p&gt;THE HTML&lt;/p&gt;\"</span><span class=\"o\">+</span>\n<span class=\"s2\">\"&lt;/div&gt;\"</span><span class=\"p\">;</span>\n</code></pre>\n</div>\n<h2 id=\"0-2-0\" name=\"0-2-0\">\n<a class=\"anchor\" href=\"#0-2-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"\\でつなぐ\"> &gt; \\でつなぐ</span></a>\\でつなぐ</h2>\n<div class=\"code-block\">\n<pre class=\"highlight javascript\"><code><span class=\"nx\">html</span> <span class=\"o\">=</span> <span class=\"s2\">\"&lt;div&gt;\\\n&lt;p&gt;THE HTML&lt;/p&gt;\\\n&lt;/div&gt;\"</span><span class=\"p\">;</span>\n</code></pre>\n</div>\n<h2 id=\"0-3-0\" name=\"0-3-0\">\n<a class=\"anchor\" href=\"#0-3-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"ヒアドキュメントもどき\"> &gt; ヒアドキュメントもどき</span></a>ヒアドキュメントもどき</h2>\n<div class=\"code-block\">\n<pre class=\"highlight javascript\"><code><span class=\"nx\">html</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"kd\">function</span> <span class=\"p\">()</span> <span class=\"p\">{</span><span class=\"cm\">/*\n&lt;div&gt;\n  &lt;p&gt;THE HTML&lt;/p&gt;\n&lt;/div&gt;\n*/</span><span class=\"p\">}).</span><span class=\"nx\">toString</span><span class=\"p\">().</span><span class=\"nx\">match</span><span class=\"p\">(</span><span class=\"sr\">/</span><span class=\"se\">[^]</span><span class=\"sr\">*</span><span class=\"se\">\\/\\*([^]</span><span class=\"sr\">*</span><span class=\"se\">)\\*\\/\\}</span><span class=\"sr\">$/</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">];</span>\n</code></pre>\n</div>\n<h2 id=\"0-4-0\" name=\"0-4-0\">\n<a class=\"anchor\" href=\"#0-4-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"つらい\"> &gt; つらい</span></a>つらい</h2>\n\n<p>どれもつらいけど記事で書くなら+か\\の二択だと思う。</p>\n\n<p>なぜ<a target=\"_blank\" href=\"https://pxgrid.qiita.com/hokaccha/items/adaa8c900dc3c58fa944\">ES6</a>になるまで放っておいたんだ。</p>\n\n<hr>\n\n<h3 id=\"0-4-1\" name=\"0-4-1\">\n<a class=\"anchor\" href=\"#0-4-1\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"Coffee\"> &gt; Coffee</span></a>Coffee</h3>\n\n<p>Coffeeはヒアドキュメントというかテンプレートストリングが使えるのがヨイ。ただ記事で使うのは適していない。サンプルコードでCoffeeを使うのはクソだ。</p>\n",
    "created_at": "2015-07-01T23:59:53+09:00",
    "message": "[skip notice] Imported from Qiita",
    "kind": "stock",
    "comments_count": 0,
    "tasks_count": 0,
    "done_tasks_count": 0,
    "url": "https://pxgrid.esa.io/posts/362",
    "updated_at": "2015-07-01T23:59:53+09:00",
    "tags": [
      "JavaScript"
    ],
    "category": "Imports/Qiita",
    "revision_number": 1,
    "created_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "updated_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "stargazers_count": 0,
    "watchers_count": 1,
    "star": false,
    "watch": true,
    "_uid": 1446574748048,
    "_modified_at": ""
  },
  {
    "number": 360,
    "name": "Element.closest()",
    "full_name": "Imports/Qiita/Element.closest() #JavaScript",
    "wip": false,
    "body_md": "created_at: 2014-12-14 13:08:53 +0900\nuser: nakajmg\n\nhttps://developer.mozilla.org/en-US/docs/Web/API/Element.closest\n\nelementの親方向に対してセレクタを指定して要素の探索を行う\n\nChrome41（Canary）で使えた。\n\n## jQuery.closestとの違い\n\nだいたい一緒。セレクタに`element`が使えないくらいかな？\n\nセレクタに要素を指定するとエラーで怒られる。\n\n```\nUncaught DOMException: Failed to execute 'closest' on 'Element': '[object HTMLScriptElement]' is not a valid selector.\n```\n\n## うーん\n\nそもそも親要素を探索しなくちゃならない状況になること自体がクソだと思ってるのでできれば使いたくないと思う所存。\n\n",
    "body_html": "<p>created_at: 2014-12-14 13:08:53 +0900<br>\nuser: nakajmg</p>\n\n<p><a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element.closest\">https://developer.mozilla.org/en-US/docs/Web/API/Element.closest</a></p>\n\n<p>elementの親方向に対してセレクタを指定して要素の探索を行う</p>\n\n<p>Chrome41（Canary）で使えた。</p>\n\n<h2 id=\"0-1-0\" name=\"0-1-0\">\n<a class=\"anchor\" href=\"#0-1-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"jQuery.closestとの違い\"> &gt; jQuery.closestとの違い</span></a>jQuery.closestとの違い</h2>\n\n<p>だいたい一緒。セレクタに<code>element</code>が使えないくらいかな？</p>\n\n<p>セレクタに要素を指定するとエラーで怒られる。</p>\n<div class=\"code-block\">\n<pre class=\"highlight plaintext\"><code>Uncaught DOMException: Failed to execute 'closest' on 'Element': '[object HTMLScriptElement]' is not a valid selector.\n</code></pre>\n</div>\n<h2 id=\"0-2-0\" name=\"0-2-0\">\n<a class=\"anchor\" href=\"#0-2-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"うーん\"> &gt; うーん</span></a>うーん</h2>\n\n<p>そもそも親要素を探索しなくちゃならない状況になること自体がクソだと思ってるのでできれば使いたくないと思う所存。</p>\n",
    "created_at": "2015-07-01T23:59:48+09:00",
    "message": "[skip notice] Imported from Qiita",
    "kind": "stock",
    "comments_count": 0,
    "tasks_count": 0,
    "done_tasks_count": 0,
    "url": "https://pxgrid.esa.io/posts/360",
    "updated_at": "2015-07-01T23:59:49+09:00",
    "tags": [
      "JavaScript"
    ],
    "category": "Imports/Qiita",
    "revision_number": 1,
    "created_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "updated_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "stargazers_count": 0,
    "watchers_count": 1,
    "star": false,
    "watch": true,
    "_uid": 1446574748049,
    "_modified_at": ""
  },
  {
    "number": 357,
    "name": "デバッグ中にbreakして欲しくないscriptをblackboxに登録する",
    "full_name": "Imports/Qiita/デバッグ中にbreakして欲しくないscriptをblackboxに登録する #Chrome #JavaScript",
    "wip": false,
    "body_md": "created_at: 2014-12-12 18:01:19 +0900\nuser: nakajmg\n\n[Blackbox JavaScript Source Files](https://developer.chrome.com/devtools/docs/blackboxing)\n\n## Blackboxに登録するとどうなる？\n\n* 登録したライブラリのコードで止まらない\n* Step into/out/over の操作時にライブラリ内部のコードを飛ばしてくれる\n* イベントリスナにブレークポイント張っててもライブラリでは止まらない\n* ライブラリの中に張ったブレークポイントで止まらない\n\n## Blackboxへの登録方法\n\nsourceパネルで右クリック-> Blackbox Scriptを選択\n\n![SS 2014-12-12 17.43.30.png](https://qiita-image-store.s3.amazonaws.com/778/17969/e5e0f366-bcbe-2748-6043-628f91885d87.png)\n\nもしくはsettingからManage framework blackboxingを選択して\n\n![SS 2014-12-12 17.52.08.png](https://qiita-image-store.s3.amazonaws.com/778/17969/5b913987-ab43-329f-df16-7c953d39bac2.png)\n\nblackboxにしたいスクリプトの名前を追加する\n\n![SS 2014-12-12 17.44.05.png](https://qiita-image-store.s3.amazonaws.com/778/17969/93859f79-4d0c-f9b2-0109-601b937b5c46.png)\n\n## Blackboxから解除\n\n右クリックからStop Blackboxingを選択\n\n![SS 2014-12-12 17.43.19.png](https://qiita-image-store.s3.amazonaws.com/778/17969/8bccbcce-2485-d520-0e05-c60be55e0dad.png)\n\n## Blackboxに登録されたスクリプト\n\n↓みたいに注意書きが表示されるので「あれ、なんでここで止まらない？？」みたいなうっかりを防げる\n\n![SS 2014-12-12 17.42.03.png](https://qiita-image-store.s3.amazonaws.com/778/17969/fc843de5-3cd5-de18-340a-1b411444df49.png)\n\n## 気軽にぶち込めるようになった\n\nこの機能自体はだいぶ前からあったけど、[使うのがめんどくさかった](https://divshot.com/blog/tips-and-tricks/ignoring-library-code-while-debugging-in-chrome/)。\n\n気軽にblackboxにぶち込めるようになって便利。\n\n",
    "body_html": "<p>created_at: 2014-12-12 18:01:19 +0900<br>\nuser: nakajmg</p>\n\n<p><a target=\"_blank\" href=\"https://developer.chrome.com/devtools/docs/blackboxing\">Blackbox JavaScript Source Files</a></p>\n\n<h2 id=\"0-1-0\" name=\"0-1-0\">\n<a class=\"anchor\" href=\"#0-1-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"Blackboxに登録するとどうなる？\"> &gt; Blackboxに登録するとどうなる？</span></a>Blackboxに登録するとどうなる？</h2>\n\n<ul>\n<li>登録したライブラリのコードで止まらない</li>\n<li>Step into/out/over の操作時にライブラリ内部のコードを飛ばしてくれる</li>\n<li>イベントリスナにブレークポイント張っててもライブラリでは止まらない</li>\n<li>ライブラリの中に張ったブレークポイントで止まらない</li>\n</ul>\n\n<h2 id=\"0-2-0\" name=\"0-2-0\">\n<a class=\"anchor\" href=\"#0-2-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"Blackboxへの登録方法\"> &gt; Blackboxへの登録方法</span></a>Blackboxへの登録方法</h2>\n\n<p>sourceパネルで右クリック-&gt; Blackbox Scriptを選択</p>\n\n<p><a href=\"https://qiita-image-store.s3.amazonaws.com/778/17969/e5e0f366-bcbe-2748-6043-628f91885d87.png\" target=\"_blank\"><img src=\"https://qiita-image-store.s3.amazonaws.com/778/17969/e5e0f366-bcbe-2748-6043-628f91885d87.png\" alt=\"SS 2014-12-12 17.43.30.png\"></a></p>\n\n<p>もしくはsettingからManage framework blackboxingを選択して</p>\n\n<p><a href=\"https://qiita-image-store.s3.amazonaws.com/778/17969/5b913987-ab43-329f-df16-7c953d39bac2.png\" target=\"_blank\"><img src=\"https://qiita-image-store.s3.amazonaws.com/778/17969/5b913987-ab43-329f-df16-7c953d39bac2.png\" alt=\"SS 2014-12-12 17.52.08.png\"></a></p>\n\n<p>blackboxにしたいスクリプトの名前を追加する</p>\n\n<p><a href=\"https://qiita-image-store.s3.amazonaws.com/778/17969/93859f79-4d0c-f9b2-0109-601b937b5c46.png\" target=\"_blank\"><img src=\"https://qiita-image-store.s3.amazonaws.com/778/17969/93859f79-4d0c-f9b2-0109-601b937b5c46.png\" alt=\"SS 2014-12-12 17.44.05.png\"></a></p>\n\n<h2 id=\"0-3-0\" name=\"0-3-0\">\n<a class=\"anchor\" href=\"#0-3-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"Blackboxから解除\"> &gt; Blackboxから解除</span></a>Blackboxから解除</h2>\n\n<p>右クリックからStop Blackboxingを選択</p>\n\n<p><a href=\"https://qiita-image-store.s3.amazonaws.com/778/17969/8bccbcce-2485-d520-0e05-c60be55e0dad.png\" target=\"_blank\"><img src=\"https://qiita-image-store.s3.amazonaws.com/778/17969/8bccbcce-2485-d520-0e05-c60be55e0dad.png\" alt=\"SS 2014-12-12 17.43.19.png\"></a></p>\n\n<h2 id=\"0-4-0\" name=\"0-4-0\">\n<a class=\"anchor\" href=\"#0-4-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"Blackboxに登録されたスクリプト\"> &gt; Blackboxに登録されたスクリプト</span></a>Blackboxに登録されたスクリプト</h2>\n\n<p>↓みたいに注意書きが表示されるので「あれ、なんでここで止まらない？？」みたいなうっかりを防げる</p>\n\n<p><a href=\"https://qiita-image-store.s3.amazonaws.com/778/17969/fc843de5-3cd5-de18-340a-1b411444df49.png\" target=\"_blank\"><img src=\"https://qiita-image-store.s3.amazonaws.com/778/17969/fc843de5-3cd5-de18-340a-1b411444df49.png\" alt=\"SS 2014-12-12 17.42.03.png\"></a></p>\n\n<h2 id=\"0-5-0\" name=\"0-5-0\">\n<a class=\"anchor\" href=\"#0-5-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"気軽にぶち込めるようになった\"> &gt; 気軽にぶち込めるようになった</span></a>気軽にぶち込めるようになった</h2>\n\n<p>この機能自体はだいぶ前からあったけど、<a target=\"_blank\" href=\"https://divshot.com/blog/tips-and-tricks/ignoring-library-code-while-debugging-in-chrome/\">使うのがめんどくさかった</a>。</p>\n\n<p>気軽にblackboxにぶち込めるようになって便利。</p>\n",
    "created_at": "2015-07-01T23:59:41+09:00",
    "message": "[skip notice] Imported from Qiita",
    "kind": "stock",
    "comments_count": 0,
    "tasks_count": 0,
    "done_tasks_count": 0,
    "url": "https://pxgrid.esa.io/posts/357",
    "updated_at": "2015-07-01T23:59:41+09:00",
    "tags": [
      "Chrome",
      "JavaScript"
    ],
    "category": "Imports/Qiita",
    "revision_number": 1,
    "created_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "updated_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "stargazers_count": 0,
    "watchers_count": 1,
    "star": false,
    "watch": true,
    "_uid": 1446574748050,
    "_modified_at": ""
  },
  {
    "number": 355,
    "name": "String.prototype.includes",
    "full_name": "Imports/Qiita/String.prototype.includes #JavaScript",
    "wip": false,
    "body_md": "created_at: 2014-12-12 17:02:34 +0900\nuser: nakajmg\n\n[String.prototype.includes() | MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes)\n\n文字列に文字列が含まれてるか判定してtrue/falseを返すメソッド。\n\n第一引数に探したい文字列を。第二引数でindexを指定すると指定したindexから探索が行われる。\n\n```\nvar str = \"hogefuga piyo\";\n\nstr.includes(\"hoge\"); // => true\nstr.includes(\"fuga piyo\"); // => true\nstr.includes(\"hoge\", 1); // => false\n```\n\n`indexOf`で探してたのが短く直感的に記述できるようになっただけ。\n\nPolyfill↓\n\n```\nif (!String.prototype.includes) {\n  String.prototype.includes = function() {\n    return String.prototype.indexOf.apply(this, arguments) !== -1;\n  };\n}\n```\n\nCanary（v41）で確認できた。\n\n",
    "body_html": "<p>created_at: 2014-12-12 17:02:34 +0900<br>\nuser: nakajmg</p>\n\n<p><a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\">String.prototype.includes() | MDN</a></p>\n\n<p>文字列に文字列が含まれてるか判定してtrue/falseを返すメソッド。</p>\n\n<p>第一引数に探したい文字列を。第二引数でindexを指定すると指定したindexから探索が行われる。</p>\n<div class=\"code-block\">\n<pre class=\"highlight plaintext\"><code>var str = \"hogefuga piyo\";\n\nstr.includes(\"hoge\"); // =&gt; true\nstr.includes(\"fuga piyo\"); // =&gt; true\nstr.includes(\"hoge\", 1); // =&gt; false\n</code></pre>\n</div>\n<p><code>indexOf</code>で探してたのが短く直感的に記述できるようになっただけ。</p>\n\n<p>Polyfill↓</p>\n<div class=\"code-block\">\n<pre class=\"highlight plaintext\"><code>if (!String.prototype.includes) {\n  String.prototype.includes = function() {\n    return String.prototype.indexOf.apply(this, arguments) !== -1;\n  };\n}\n</code></pre>\n</div>\n<p>Canary（v41）で確認できた。</p>\n",
    "created_at": "2015-07-01T23:44:36+09:00",
    "message": "[skip notice] Imported from Qiita",
    "kind": "stock",
    "comments_count": 0,
    "tasks_count": 0,
    "done_tasks_count": 0,
    "url": "https://pxgrid.esa.io/posts/355",
    "updated_at": "2015-07-01T23:44:36+09:00",
    "tags": [
      "JavaScript"
    ],
    "category": "Imports/Qiita",
    "revision_number": 1,
    "created_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "updated_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "stargazers_count": 0,
    "watchers_count": 1,
    "star": false,
    "watch": true,
    "_uid": 1446574748051,
    "_modified_at": ""
  },
  {
    "number": 353,
    "name": "Web Starter Kitの0.5.0が出てた",
    "full_name": "Imports/Qiita/Web Starter Kitの0.5.0が出てた #translation",
    "wip": false,
    "body_md": "created_at: 2014-12-11 06:04:56 +0900\nuser: nakajmg\n\nhttps://github.com/google/web-starter-kit/releases/tag/v0.5.0\n\nいろいろと自分の環境に取り込めそうなのありそう。めっちゃモダン感ある:ok_hand:\n\n↓超適当要訳\n\n## Correct touch-icons for all browsers\n\nスマホのホームスクリーンに追加したときのアイコンの指定が全てのブラウザでgoodになったぜ！\n\n![image](https://qiita-image-store.s3.amazonaws.com/778/17969/fb45e2e4-db21-3bb5-b03a-62b9c18304e4.png)\n\n\n## Extended cross-browser support\n\nサポートするブラウザ増えたから色んなブラウザで操作のsyncができるようになったぜ！IE8も！\n\n![image](https://qiita-image-store.s3.amazonaws.com/778/17969/d83525cb-22d2-64df-f6aa-17e96fce09e5.png)\n\n\n### live-reload directly inside of a BrowserStack VM\n\n`gulp serve`したときにBrowserStackのVMでもライブリロードできるようになったよヤバいスゴいぜ！\n\n![image](https://qiita-image-store.s3.amazonaws.com/778/17969/fb6cc095-354e-e469-f89d-8bf57dcfd051.png)\n\n\n## Simpler styles and a simpler build file.\n\nなんかCSS系のタスクが複雑だったから3つあったの1つにしたぜ！\n\n## A strong PageSpeed baseline\n\n`basic.html`を使ったときの[PageSpeed Insight](https://developers.google.com/speed/pagespeed/insights/?hl=ja)のスコアがほぼパーフェクト(モバイルが90でデスクトップが100)になったぜ！\n\n## Material Design color-palette\n\nMaterial Designのカラーパレットが[_palette.scss](https://github.com/google/web-starter-kit/commit/b0079b5265124df04f560e5ac0e89be87441599c)に追加されたぜ！\n\n![image](https://qiita-image-store.s3.amazonaws.com/778/17969/3a783871-8bc7-0ec3-6fb6-56c56f075b23.png)\n\n\n## Lint code-style rules with JSCS\n\nコーディングガイドラインに沿ってない場合にエディタ上に警告出す[JSCS](https://github.com/jscs-dev/node-jscs)の設定ファイルを追加したぜ！（GoogleのJSスタイルガイドがデフォ）\n\n![image](https://qiita-image-store.s3.amazonaws.com/778/17969/dd367343-d271-fb09-ca19-50a50145f676.png)\n\n---\n\nJSCSヨサソウ。gulpのタスクも大変参考になる\n\n",
    "body_html": "<p>created_at: 2014-12-11 06:04:56 +0900<br>\nuser: nakajmg</p>\n\n<p><a target=\"_blank\" href=\"https://github.com/google/web-starter-kit/releases/tag/v0.5.0\">https://github.com/google/web-starter-kit/releases/tag/v0.5.0</a></p>\n\n<p>いろいろと自分の環境に取り込めそうなのありそう。めっちゃモダン感ある:ok_hand:</p>\n\n<p>↓超適当要訳</p>\n\n<h2 id=\"0-1-0\" name=\"0-1-0\">\n<a class=\"anchor\" href=\"#0-1-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"Correct touch-icons for all browsers\"> &gt; Correct touch-icons for all browsers</span></a>Correct touch-icons for all browsers</h2>\n\n<p>スマホのホームスクリーンに追加したときのアイコンの指定が全てのブラウザでgoodになったぜ！</p>\n\n<p><a href=\"https://qiita-image-store.s3.amazonaws.com/778/17969/fb45e2e4-db21-3bb5-b03a-62b9c18304e4.png\" target=\"_blank\"><img src=\"https://qiita-image-store.s3.amazonaws.com/778/17969/fb45e2e4-db21-3bb5-b03a-62b9c18304e4.png\" alt=\"image\"></a></p>\n\n<h2 id=\"0-2-0\" name=\"0-2-0\">\n<a class=\"anchor\" href=\"#0-2-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"Extended cross-browser support\"> &gt; Extended cross-browser support</span></a>Extended cross-browser support</h2>\n\n<p>サポートするブラウザ増えたから色んなブラウザで操作のsyncができるようになったぜ！IE8も！</p>\n\n<p><a href=\"https://qiita-image-store.s3.amazonaws.com/778/17969/d83525cb-22d2-64df-f6aa-17e96fce09e5.png\" target=\"_blank\"><img src=\"https://qiita-image-store.s3.amazonaws.com/778/17969/d83525cb-22d2-64df-f6aa-17e96fce09e5.png\" alt=\"image\"></a></p>\n\n<h3 id=\"0-2-1\" name=\"0-2-1\">\n<a class=\"anchor\" href=\"#0-2-1\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"live-reload directly inside of a BrowserStack VM\"> &gt; live-reload directly inside of a BrowserStack VM</span></a>live-reload directly inside of a BrowserStack VM</h3>\n\n<p><code>gulp serve</code>したときにBrowserStackのVMでもライブリロードできるようになったよヤバいスゴいぜ！</p>\n\n<p><a href=\"https://qiita-image-store.s3.amazonaws.com/778/17969/fb6cc095-354e-e469-f89d-8bf57dcfd051.png\" target=\"_blank\"><img src=\"https://qiita-image-store.s3.amazonaws.com/778/17969/fb6cc095-354e-e469-f89d-8bf57dcfd051.png\" alt=\"image\"></a></p>\n\n<h2 id=\"0-3-0\" name=\"0-3-0\">\n<a class=\"anchor\" href=\"#0-3-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"Simpler styles and a simpler build file.\"> &gt; Simpler styles and a simpler build file.</span></a>Simpler styles and a simpler build file.</h2>\n\n<p>なんかCSS系のタスクが複雑だったから3つあったの1つにしたぜ！</p>\n\n<h2 id=\"0-4-0\" name=\"0-4-0\">\n<a class=\"anchor\" href=\"#0-4-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"A strong PageSpeed baseline\"> &gt; A strong PageSpeed baseline</span></a>A strong PageSpeed baseline</h2>\n\n<p><code>basic.html</code>を使ったときの<a target=\"_blank\" href=\"https://developers.google.com/speed/pagespeed/insights/?hl=ja\">PageSpeed Insight</a>のスコアがほぼパーフェクト(モバイルが90でデスクトップが100)になったぜ！</p>\n\n<h2 id=\"0-5-0\" name=\"0-5-0\">\n<a class=\"anchor\" href=\"#0-5-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"Material Design color-palette\"> &gt; Material Design color-palette</span></a>Material Design color-palette</h2>\n\n<p>Material Designのカラーパレットが<a target=\"_blank\" href=\"https://github.com/google/web-starter-kit/commit/b0079b5265124df04f560e5ac0e89be87441599c\">_palette.scss</a>に追加されたぜ！</p>\n\n<p><a href=\"https://qiita-image-store.s3.amazonaws.com/778/17969/3a783871-8bc7-0ec3-6fb6-56c56f075b23.png\" target=\"_blank\"><img src=\"https://qiita-image-store.s3.amazonaws.com/778/17969/3a783871-8bc7-0ec3-6fb6-56c56f075b23.png\" alt=\"image\"></a></p>\n\n<h2 id=\"0-6-0\" name=\"0-6-0\">\n<a class=\"anchor\" href=\"#0-6-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"Lint code-style rules with JSCS\"> &gt; Lint code-style rules with JSCS</span></a>Lint code-style rules with JSCS</h2>\n\n<p>コーディングガイドラインに沿ってない場合にエディタ上に警告出す<a target=\"_blank\" href=\"https://github.com/jscs-dev/node-jscs\">JSCS</a>の設定ファイルを追加したぜ！（GoogleのJSスタイルガイドがデフォ）</p>\n\n<p><a href=\"https://qiita-image-store.s3.amazonaws.com/778/17969/dd367343-d271-fb09-ca19-50a50145f676.png\" target=\"_blank\"><img src=\"https://qiita-image-store.s3.amazonaws.com/778/17969/dd367343-d271-fb09-ca19-50a50145f676.png\" alt=\"image\"></a></p>\n\n<hr>\n\n<p>JSCSヨサソウ。gulpのタスクも大変参考になる</p>\n",
    "created_at": "2015-07-01T23:44:32+09:00",
    "message": "[skip notice] Imported from Qiita",
    "kind": "stock",
    "comments_count": 0,
    "tasks_count": 0,
    "done_tasks_count": 0,
    "url": "https://pxgrid.esa.io/posts/353",
    "updated_at": "2015-07-01T23:44:32+09:00",
    "tags": [
      "translation"
    ],
    "category": "Imports/Qiita",
    "revision_number": 1,
    "created_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "updated_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "stargazers_count": 0,
    "watchers_count": 1,
    "star": false,
    "watch": true,
    "_uid": 1446574748052,
    "_modified_at": ""
  },
  {
    "number": 348,
    "name": "TrackerでReactive",
    "full_name": "Imports/Qiita/TrackerでReactive #JavaScript",
    "wip": false,
    "body_md": "created_at: 2014-12-08 06:58:27 +0900\nuser: nakajmg\n\nJSConfで聞いたMeteorのコアライブラリのひとつのTracker。\n\nhttp://meteor.com/tracker\n\n## 使うもの\n\n* [reactive-var.js](https://github.com/meteor/meteor/blob/devel/packages/reactive-var/reactive-var.js)\n* [tracker.js](https://github.com/meteor/meteor/blob/devel/packages/tracker/tracker.js)\n\n### data-binding的なの\n\n```html\n<input type=\"text\" id=\"input\">\n<div id=\"output\"></div>\n```\n\n```js\nvar text = new ReactiveVar(\"\");\n\nTracker.autorun(function() {\n  $(\"#output\").text(text.get());\n});\n\n$(\"#input\").on(\"keyup\", function() {\n  text.set(this.value);\n});\n```\n\nこれでoutputの値がinputに入力した値に同期する。\n\npen: http://codepen.io/nakajmg/pen/GgoEPr?editors=101\n\n`text.set()`が呼ばれると、reactiveなvarである`text`が使われてる`autorun`が呼ばれる。\n\n## 複数の値も\n\n```html\n<input type=\"text\" id=\"input1\">\n\n<input type=\"text\" id=\"input2\">\n<div id=\"text1\"></div>\n<div id=\"text2\"></div>\n<hr>\n<div id=\"texts\"></div>\n```\n\n```js\nvar text1 = new ReactiveVar(\"\");\nvar text2 = new ReactiveVar(\"\");\n\n// 1\nTracker.autorun(function() {\n  $(\"#text1\").text(text1.get());\n});\n\n// 2\nTracker.autorun(function() {\n  $(\"#text2\").text(text2.get());\n});\n\n// 3\nTracker.autorun(function() {\n  $(\"#texts\").text(text1.get() + text2.get());\n})\n\n$(\"#input1\").on(\"keyup\", function() {\n  text1.set(this.value);\n});\n\n$(\"#input2\").on(\"keyup\", function() {\n  text2.set(this.value);\n});\n```\n\npen: http://codepen.io/nakajmg/pen/LEGLqE?editors=101\n\n`text1`が変更されたときは1と3の`autorun`が実行され、`text2`が変更されたときは2と3の`autorun`が実行される。\n\n\n### 感触\n\nわかりやすいしめんどくさくなくてイイかも？\n\n",
    "body_html": "<p>created_at: 2014-12-08 06:58:27 +0900<br>\nuser: nakajmg</p>\n\n<p>JSConfで聞いたMeteorのコアライブラリのひとつのTracker。</p>\n\n<p><a target=\"_blank\" href=\"http://meteor.com/tracker\">http://meteor.com/tracker</a></p>\n\n<h2 id=\"0-1-0\" name=\"0-1-0\">\n<a class=\"anchor\" href=\"#0-1-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"使うもの\"> &gt; 使うもの</span></a>使うもの</h2>\n\n<ul>\n<li><a target=\"_blank\" href=\"https://github.com/meteor/meteor/blob/devel/packages/reactive-var/reactive-var.js\">reactive-var.js</a></li>\n<li><a target=\"_blank\" href=\"https://github.com/meteor/meteor/blob/devel/packages/tracker/tracker.js\">tracker.js</a></li>\n</ul>\n\n<h3 id=\"0-1-1\" name=\"0-1-1\">\n<a class=\"anchor\" href=\"#0-1-1\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"data-binding的なの\"> &gt; data-binding的なの</span></a>data-binding的なの</h3>\n<div class=\"code-block\">\n<pre class=\"highlight html\"><code><span class=\"nt\">&lt;input</span> <span class=\"na\">type=</span><span class=\"s\">\"text\"</span> <span class=\"na\">id=</span><span class=\"s\">\"input\"</span><span class=\"nt\">&gt;</span>\n<span class=\"nt\">&lt;div</span> <span class=\"na\">id=</span><span class=\"s\">\"output\"</span><span class=\"nt\">&gt;&lt;/div&gt;</span>\n</code></pre>\n</div>\n<div class=\"code-block\">\n<pre class=\"highlight javascript\"><code><span class=\"kd\">var</span> <span class=\"nx\">text</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nx\">ReactiveVar</span><span class=\"p\">(</span><span class=\"s2\">\"\"</span><span class=\"p\">);</span>\n\n<span class=\"nx\">Tracker</span><span class=\"p\">.</span><span class=\"nx\">autorun</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"s2\">\"#output\"</span><span class=\"p\">).</span><span class=\"nx\">text</span><span class=\"p\">(</span><span class=\"nx\">text</span><span class=\"p\">.</span><span class=\"nx\">get</span><span class=\"p\">());</span>\n<span class=\"p\">});</span>\n\n<span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"s2\">\"#input\"</span><span class=\"p\">).</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"s2\">\"keyup\"</span><span class=\"p\">,</span> <span class=\"kd\">function</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"nx\">text</span><span class=\"p\">.</span><span class=\"nx\">set</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">value</span><span class=\"p\">);</span>\n<span class=\"p\">});</span>\n</code></pre>\n</div>\n<p>これでoutputの値がinputに入力した値に同期する。</p>\n\n<p>pen: <a target=\"_blank\" href=\"http://codepen.io/nakajmg/pen/GgoEPr?editors=101\">http://codepen.io/nakajmg/pen/GgoEPr?editors=101</a></p>\n\n<p><code>text.set()</code>が呼ばれると、reactiveなvarである<code>text</code>が使われてる<code>autorun</code>が呼ばれる。</p>\n\n<h2 id=\"0-2-0\" name=\"0-2-0\">\n<a class=\"anchor\" href=\"#0-2-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"複数の値も\"> &gt; 複数の値も</span></a>複数の値も</h2>\n<div class=\"code-block\">\n<pre class=\"highlight html\"><code><span class=\"nt\">&lt;input</span> <span class=\"na\">type=</span><span class=\"s\">\"text\"</span> <span class=\"na\">id=</span><span class=\"s\">\"input1\"</span><span class=\"nt\">&gt;</span>\n\n<span class=\"nt\">&lt;input</span> <span class=\"na\">type=</span><span class=\"s\">\"text\"</span> <span class=\"na\">id=</span><span class=\"s\">\"input2\"</span><span class=\"nt\">&gt;</span>\n<span class=\"nt\">&lt;div</span> <span class=\"na\">id=</span><span class=\"s\">\"text1\"</span><span class=\"nt\">&gt;&lt;/div&gt;</span>\n<span class=\"nt\">&lt;div</span> <span class=\"na\">id=</span><span class=\"s\">\"text2\"</span><span class=\"nt\">&gt;&lt;/div&gt;</span>\n<span class=\"nt\">&lt;hr&gt;</span>\n<span class=\"nt\">&lt;div</span> <span class=\"na\">id=</span><span class=\"s\">\"texts\"</span><span class=\"nt\">&gt;&lt;/div&gt;</span>\n</code></pre>\n</div>\n<div class=\"code-block\">\n<pre class=\"highlight javascript\"><code><span class=\"kd\">var</span> <span class=\"nx\">text1</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nx\">ReactiveVar</span><span class=\"p\">(</span><span class=\"s2\">\"\"</span><span class=\"p\">);</span>\n<span class=\"kd\">var</span> <span class=\"nx\">text2</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nx\">ReactiveVar</span><span class=\"p\">(</span><span class=\"s2\">\"\"</span><span class=\"p\">);</span>\n\n<span class=\"c1\">// 1</span>\n<span class=\"nx\">Tracker</span><span class=\"p\">.</span><span class=\"nx\">autorun</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"s2\">\"#text1\"</span><span class=\"p\">).</span><span class=\"nx\">text</span><span class=\"p\">(</span><span class=\"nx\">text1</span><span class=\"p\">.</span><span class=\"nx\">get</span><span class=\"p\">());</span>\n<span class=\"p\">});</span>\n\n<span class=\"c1\">// 2</span>\n<span class=\"nx\">Tracker</span><span class=\"p\">.</span><span class=\"nx\">autorun</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"s2\">\"#text2\"</span><span class=\"p\">).</span><span class=\"nx\">text</span><span class=\"p\">(</span><span class=\"nx\">text2</span><span class=\"p\">.</span><span class=\"nx\">get</span><span class=\"p\">());</span>\n<span class=\"p\">});</span>\n\n<span class=\"c1\">// 3</span>\n<span class=\"nx\">Tracker</span><span class=\"p\">.</span><span class=\"nx\">autorun</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"s2\">\"#texts\"</span><span class=\"p\">).</span><span class=\"nx\">text</span><span class=\"p\">(</span><span class=\"nx\">text1</span><span class=\"p\">.</span><span class=\"nx\">get</span><span class=\"p\">()</span> <span class=\"o\">+</span> <span class=\"nx\">text2</span><span class=\"p\">.</span><span class=\"nx\">get</span><span class=\"p\">());</span>\n<span class=\"p\">})</span>\n\n<span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"s2\">\"#input1\"</span><span class=\"p\">).</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"s2\">\"keyup\"</span><span class=\"p\">,</span> <span class=\"kd\">function</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"nx\">text1</span><span class=\"p\">.</span><span class=\"nx\">set</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">value</span><span class=\"p\">);</span>\n<span class=\"p\">});</span>\n\n<span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"s2\">\"#input2\"</span><span class=\"p\">).</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"s2\">\"keyup\"</span><span class=\"p\">,</span> <span class=\"kd\">function</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"nx\">text2</span><span class=\"p\">.</span><span class=\"nx\">set</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">value</span><span class=\"p\">);</span>\n<span class=\"p\">});</span>\n</code></pre>\n</div>\n<p>pen: <a target=\"_blank\" href=\"http://codepen.io/nakajmg/pen/LEGLqE?editors=101\">http://codepen.io/nakajmg/pen/LEGLqE?editors=101</a></p>\n\n<p><code>text1</code>が変更されたときは1と3の<code>autorun</code>が実行され、<code>text2</code>が変更されたときは2と3の<code>autorun</code>が実行される。</p>\n\n<h3 id=\"0-2-1\" name=\"0-2-1\">\n<a class=\"anchor\" href=\"#0-2-1\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"感触\"> &gt; 感触</span></a>感触</h3>\n\n<p>わかりやすいしめんどくさくなくてイイかも？</p>\n",
    "created_at": "2015-07-01T23:44:21+09:00",
    "message": "[skip notice] Imported from Qiita",
    "kind": "stock",
    "comments_count": 0,
    "tasks_count": 0,
    "done_tasks_count": 0,
    "url": "https://pxgrid.esa.io/posts/348",
    "updated_at": "2015-07-01T23:44:21+09:00",
    "tags": [
      "JavaScript"
    ],
    "category": "Imports/Qiita",
    "revision_number": 1,
    "created_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "updated_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "stargazers_count": 0,
    "watchers_count": 1,
    "star": false,
    "watch": true,
    "_uid": 1446574748053,
    "_modified_at": ""
  },
  {
    "number": 287,
    "name": "Autoprefixerでブラウザ毎のプレフィックスの状況を調べる",
    "full_name": "Imports/Qiita/Autoprefixerでブラウザ毎のプレフィックスの状況を調べる #css",
    "wip": false,
    "body_md": "created_at: 2014-10-26 20:45:28 +0900\nuser: nakajmg\n\ngulpとGruntのプラグインでプレフィックスつけるためだけに使ってたけどコンソールで使ってみたら結構色々な機能があるのを知った。\n\n蟹でせこせこ一個ずつ調べるよりヨサソウ。\n\n#### インストール\n\n```\nnpm install -g autoprefixer\n```\n\n## -i(--info)オプションを指定する\n\n```\nautoprefixer -i\n```\n\nを実行すると対象とするブラウザのバージョンと、それに対するプロパティとバリューに必要なプレフィックスを表示してくれる。\n\n```\nBrowsers:\n  IE: 11, 10, 9, 8\n  Firefox: 33, 32, 31\n  Chrome: 38, 37, 36, 35\n  Safari: 8, 7.1, 7\n  iOS: 8.1, 8, 7.1, 7.0\n  Android: 4.4, 4.4.4, 4.4.3, 4.1\n  Opera: 25, 24, 12.1\n  IE Mobile: 10\n\nAt-Rules:\n  @keyframes: webkit\n\nSelectors:\n  ::selection: moz\n  ::placeholder: webkit, moz, ms\n  :fullscreen: webkit, moz, ms\n\nProperties:\n  animation: webkit\n  animation-name: webkit\n  animation-duration: webkit\n  animation-delay: webkit\n  animation-direction: webkit\n  animation-fill-mode: webkit\n  animation-iteration-count: webkit\n  animation-play-state: webkit\n  animation-timing-function: webkit\n  transition: webkit\n  transition-property: webkit\n  transition-duration: webkit\n  transition-delay: webkit\n  transition-timing-function: webkit\n  transform*: webkit, ms\n  transform-origin*: webkit, ms\n  perspective*: webkit\n  perspective-origin*: webkit\n  transform-style: webkit\n  backface-visibility: webkit\n  border-image: webkit, o\n  filter*: webkit\n  columns*: webkit, moz\n  column-width*: webkit, moz\n  column-gap*: webkit, moz\n  column-rule*: webkit, moz\n  column-rule-color*: webkit, moz\n  column-rule-width*: webkit, moz\n  column-count: webkit, moz\n  column-rule-style: webkit, moz\n  column-span: webkit, moz\n  column-fill: webkit, moz\n  break-before: webkit, moz\n  break-after: webkit, moz\n  break-inside: webkit, moz\n  user-select: webkit, moz, ms\n  flex*: -webkit- 2009, webkit, ms\n  flex-grow*: -webkit- 2009, webkit, ms\n  flex-shrink*: -webkit- 2009, webkit, ms\n  flex-basis*: -webkit- 2009, webkit, ms\n  flex-direction: -webkit- 2009, webkit, ms\n  flex-wrap: -webkit- 2009, webkit, ms\n  flex-flow: -webkit- 2009, webkit, ms\n  justify-content: -webkit- 2009, webkit, ms\n  order: -webkit- 2009, webkit, ms\n  align-items: -webkit- 2009, webkit, ms\n  align-self: -webkit- 2009, webkit, ms\n  align-content: -webkit- 2009, webkit, ms\n  font-feature-settings: webkit, moz\n  font-variant-ligatures: webkit, moz\n  font-language-override: webkit, moz\n  font-kerning: webkit, moz\n  hyphens: webkit, moz, ms\n  tab-size: moz, o\n  touch-action: ms\n  text-decoration-style: webkit, moz\n  text-decoration-line: moz\n  text-decoration-color: moz\n  text-size-adjust: webkit, ms\n  clip-path: webkit\n  mask: webkit\n  mask-clip: webkit\n  mask-composite: webkit\n  mask-image: webkit\n  mask-origin: webkit\n  mask-position: webkit\n  mask-repeat: webkit\n  mask-size: webkit\n  * - can be used in transition\n\nValues:\n  linear-gradient: webkit\n  repeating-linear-gradient: webkit\n  radial-gradient: webkit\n  repeating-radial-gradient: webkit\n  flex: -webkit- 2009, webkit, ms\n  inline-flex: -webkit- 2009, webkit, ms\n  max-content: webkit, moz\n  min-content: webkit, moz\n  fit-content: webkit, moz\n  fill-available: webkit, moz\n  zoom-in: webkit\n  zoom-out: webkit\n  grab: webkit\n  grabbing: webkit\n  sticky: webkit\n```\n\nなるほど最近のブラウザが対象なら`box-sizing`とか`box-shadow`のプレフィックスはいらんのか。\n\n\n## ブラウザとバージョンを指定して調べる\n\n`-b`オプションでブラウザを指定。Androidの2.3以上を対象にしてみる。\n\n```\nautoprefixer -i -b \"Android >= 2.3\" \n```\n\n```\nBrowsers:\n  Android: 4.4, 4.3, 4.2, 4.1, 4, 3, 2.3\n\nAt-Rules:\n  @keyframes: webkit\n\nSelectors:\n  ::placeholder: webkit\n\nProperties:\n  transition: webkit\n  transition-property: webkit\n  box-shadow*: webkit\n  animation: webkit\n  animation-name: webkit\n  animation-duration: webkit\n  animation-delay: webkit\n  animation-direction: webkit\n  animation-fill-mode: webkit\n  animation-iteration-count: webkit\n  animation-play-state: webkit\n  animation-timing-function: webkit\n  transition-duration: webkit\n  transition-delay: webkit\n  transition-timing-function: webkit\n  transform*: webkit\n  transform-origin*: webkit\n  perspective*: webkit\n  perspective-origin*: webkit\n  transform-style: webkit\n  backface-visibility: webkit\n  border-image: webkit\n  box-sizing: webkit\n  filter*: webkit\n  columns*: webkit\n  column-width*: webkit\n  column-gap*: webkit\n  column-rule*: webkit\n  column-rule-color*: webkit\n  column-rule-width*: webkit\n  column-count: webkit\n  column-rule-style: webkit\n  column-span: webkit\n  column-fill: webkit\n  break-before: webkit\n  break-after: webkit\n  break-inside: webkit\n  user-select: webkit\n  flex*: -webkit- 2009\n  flex-grow*: -webkit- 2009\n  flex-shrink*: -webkit- 2009\n  flex-basis*: -webkit- 2009\n  flex-direction: -webkit- 2009\n  flex-wrap: -webkit- 2009\n  flex-flow: -webkit- 2009\n  justify-content: -webkit- 2009\n  order: -webkit- 2009\n  align-items: -webkit- 2009\n  align-self: -webkit- 2009\n  align-content: -webkit- 2009\n  background-clip: webkit\n  background-origin: webkit\n  background-size: webkit\n  font-feature-settings: webkit\n  font-variant-ligatures: webkit\n  font-language-override: webkit\n  font-kerning: webkit\n  clip-path: webkit\n  mask: webkit\n  mask-clip: webkit\n  mask-composite: webkit\n  mask-image: webkit\n  mask-origin: webkit\n  mask-position: webkit\n  mask-repeat: webkit\n  mask-size: webkit\n  * - can be used in transition\n\nValues:\n  linear-gradient: -webkit- old, webkit\n  repeating-linear-gradient: -webkit- old, webkit\n  radial-gradient: -webkit- old, webkit\n  repeating-radial-gradient: -webkit- old, webkit\n  flex: -webkit- 2009\n  inline-flex: -webkit- 2009\n  max-content: webkit\n  min-content: webkit\n  fit-content: webkit\n  fill-available: webkit\n```\n\nなるほどねぇという感じ。\n\nAutoprefixer使うならそもそも意識しなくてもよさそうなんだけど、対応状況知りたいときにはそれなりに使えそう。\n\n",
    "body_html": "<p>created_at: 2014-10-26 20:45:28 +0900<br>\nuser: nakajmg</p>\n\n<p>gulpとGruntのプラグインでプレフィックスつけるためだけに使ってたけどコンソールで使ってみたら結構色々な機能があるのを知った。</p>\n\n<p>蟹でせこせこ一個ずつ調べるよりヨサソウ。</p>\n\n<h4>インストール</h4>\n<div class=\"code-block\">\n<pre class=\"highlight plaintext\"><code>npm install -g autoprefixer\n</code></pre>\n</div>\n<h2 id=\"0-1-0\" name=\"0-1-0\">\n<a class=\"anchor\" href=\"#0-1-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"-i(--info)オプションを指定する\"> &gt; -i(--info)オプションを指定する</span></a>-i(--info)オプションを指定する</h2>\n<div class=\"code-block\">\n<pre class=\"highlight plaintext\"><code>autoprefixer -i\n</code></pre>\n</div>\n<p>を実行すると対象とするブラウザのバージョンと、それに対するプロパティとバリューに必要なプレフィックスを表示してくれる。</p>\n<div class=\"code-block\">\n<pre class=\"highlight plaintext\"><code>Browsers:\n  IE: 11, 10, 9, 8\n  Firefox: 33, 32, 31\n  Chrome: 38, 37, 36, 35\n  Safari: 8, 7.1, 7\n  iOS: 8.1, 8, 7.1, 7.0\n  Android: 4.4, 4.4.4, 4.4.3, 4.1\n  Opera: 25, 24, 12.1\n  IE Mobile: 10\n\nAt-Rules:\n  @keyframes: webkit\n\nSelectors:\n  ::selection: moz\n  ::placeholder: webkit, moz, ms\n  :fullscreen: webkit, moz, ms\n\nProperties:\n  animation: webkit\n  animation-name: webkit\n  animation-duration: webkit\n  animation-delay: webkit\n  animation-direction: webkit\n  animation-fill-mode: webkit\n  animation-iteration-count: webkit\n  animation-play-state: webkit\n  animation-timing-function: webkit\n  transition: webkit\n  transition-property: webkit\n  transition-duration: webkit\n  transition-delay: webkit\n  transition-timing-function: webkit\n  transform*: webkit, ms\n  transform-origin*: webkit, ms\n  perspective*: webkit\n  perspective-origin*: webkit\n  transform-style: webkit\n  backface-visibility: webkit\n  border-image: webkit, o\n  filter*: webkit\n  columns*: webkit, moz\n  column-width*: webkit, moz\n  column-gap*: webkit, moz\n  column-rule*: webkit, moz\n  column-rule-color*: webkit, moz\n  column-rule-width*: webkit, moz\n  column-count: webkit, moz\n  column-rule-style: webkit, moz\n  column-span: webkit, moz\n  column-fill: webkit, moz\n  break-before: webkit, moz\n  break-after: webkit, moz\n  break-inside: webkit, moz\n  user-select: webkit, moz, ms\n  flex*: -webkit- 2009, webkit, ms\n  flex-grow*: -webkit- 2009, webkit, ms\n  flex-shrink*: -webkit- 2009, webkit, ms\n  flex-basis*: -webkit- 2009, webkit, ms\n  flex-direction: -webkit- 2009, webkit, ms\n  flex-wrap: -webkit- 2009, webkit, ms\n  flex-flow: -webkit- 2009, webkit, ms\n  justify-content: -webkit- 2009, webkit, ms\n  order: -webkit- 2009, webkit, ms\n  align-items: -webkit- 2009, webkit, ms\n  align-self: -webkit- 2009, webkit, ms\n  align-content: -webkit- 2009, webkit, ms\n  font-feature-settings: webkit, moz\n  font-variant-ligatures: webkit, moz\n  font-language-override: webkit, moz\n  font-kerning: webkit, moz\n  hyphens: webkit, moz, ms\n  tab-size: moz, o\n  touch-action: ms\n  text-decoration-style: webkit, moz\n  text-decoration-line: moz\n  text-decoration-color: moz\n  text-size-adjust: webkit, ms\n  clip-path: webkit\n  mask: webkit\n  mask-clip: webkit\n  mask-composite: webkit\n  mask-image: webkit\n  mask-origin: webkit\n  mask-position: webkit\n  mask-repeat: webkit\n  mask-size: webkit\n  * - can be used in transition\n\nValues:\n  linear-gradient: webkit\n  repeating-linear-gradient: webkit\n  radial-gradient: webkit\n  repeating-radial-gradient: webkit\n  flex: -webkit- 2009, webkit, ms\n  inline-flex: -webkit- 2009, webkit, ms\n  max-content: webkit, moz\n  min-content: webkit, moz\n  fit-content: webkit, moz\n  fill-available: webkit, moz\n  zoom-in: webkit\n  zoom-out: webkit\n  grab: webkit\n  grabbing: webkit\n  sticky: webkit\n</code></pre>\n</div>\n<p>なるほど最近のブラウザが対象なら<code>box-sizing</code>とか<code>box-shadow</code>のプレフィックスはいらんのか。</p>\n\n<h2 id=\"0-2-0\" name=\"0-2-0\">\n<a class=\"anchor\" href=\"#0-2-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"ブラウザとバージョンを指定して調べる\"> &gt; ブラウザとバージョンを指定して調べる</span></a>ブラウザとバージョンを指定して調べる</h2>\n\n<p><code>-b</code>オプションでブラウザを指定。Androidの2.3以上を対象にしてみる。</p>\n<div class=\"code-block\">\n<pre class=\"highlight plaintext\"><code>autoprefixer -i -b \"Android &gt;= 2.3\" \n</code></pre>\n</div>\n<div class=\"code-block\">\n<pre class=\"highlight plaintext\"><code>Browsers:\n  Android: 4.4, 4.3, 4.2, 4.1, 4, 3, 2.3\n\nAt-Rules:\n  @keyframes: webkit\n\nSelectors:\n  ::placeholder: webkit\n\nProperties:\n  transition: webkit\n  transition-property: webkit\n  box-shadow*: webkit\n  animation: webkit\n  animation-name: webkit\n  animation-duration: webkit\n  animation-delay: webkit\n  animation-direction: webkit\n  animation-fill-mode: webkit\n  animation-iteration-count: webkit\n  animation-play-state: webkit\n  animation-timing-function: webkit\n  transition-duration: webkit\n  transition-delay: webkit\n  transition-timing-function: webkit\n  transform*: webkit\n  transform-origin*: webkit\n  perspective*: webkit\n  perspective-origin*: webkit\n  transform-style: webkit\n  backface-visibility: webkit\n  border-image: webkit\n  box-sizing: webkit\n  filter*: webkit\n  columns*: webkit\n  column-width*: webkit\n  column-gap*: webkit\n  column-rule*: webkit\n  column-rule-color*: webkit\n  column-rule-width*: webkit\n  column-count: webkit\n  column-rule-style: webkit\n  column-span: webkit\n  column-fill: webkit\n  break-before: webkit\n  break-after: webkit\n  break-inside: webkit\n  user-select: webkit\n  flex*: -webkit- 2009\n  flex-grow*: -webkit- 2009\n  flex-shrink*: -webkit- 2009\n  flex-basis*: -webkit- 2009\n  flex-direction: -webkit- 2009\n  flex-wrap: -webkit- 2009\n  flex-flow: -webkit- 2009\n  justify-content: -webkit- 2009\n  order: -webkit- 2009\n  align-items: -webkit- 2009\n  align-self: -webkit- 2009\n  align-content: -webkit- 2009\n  background-clip: webkit\n  background-origin: webkit\n  background-size: webkit\n  font-feature-settings: webkit\n  font-variant-ligatures: webkit\n  font-language-override: webkit\n  font-kerning: webkit\n  clip-path: webkit\n  mask: webkit\n  mask-clip: webkit\n  mask-composite: webkit\n  mask-image: webkit\n  mask-origin: webkit\n  mask-position: webkit\n  mask-repeat: webkit\n  mask-size: webkit\n  * - can be used in transition\n\nValues:\n  linear-gradient: -webkit- old, webkit\n  repeating-linear-gradient: -webkit- old, webkit\n  radial-gradient: -webkit- old, webkit\n  repeating-radial-gradient: -webkit- old, webkit\n  flex: -webkit- 2009\n  inline-flex: -webkit- 2009\n  max-content: webkit\n  min-content: webkit\n  fit-content: webkit\n  fill-available: webkit\n</code></pre>\n</div>\n<p>なるほどねぇという感じ。</p>\n\n<p>Autoprefixer使うならそもそも意識しなくてもよさそうなんだけど、対応状況知りたいときにはそれなりに使えそう。</p>\n",
    "created_at": "2015-07-01T23:41:41+09:00",
    "message": "[skip notice] Imported from Qiita",
    "kind": "stock",
    "comments_count": 0,
    "tasks_count": 0,
    "done_tasks_count": 0,
    "url": "https://pxgrid.esa.io/posts/287",
    "updated_at": "2015-07-01T23:41:41+09:00",
    "tags": [
      "css"
    ],
    "category": "Imports/Qiita",
    "revision_number": 1,
    "created_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "updated_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "stargazers_count": 0,
    "watchers_count": 1,
    "star": false,
    "watch": true,
    "_uid": 1446574748055,
    "_modified_at": ""
  },
  {
    "number": 243,
    "name": "DOM elementを画像にする",
    "full_name": "Imports/Qiita/DOM elementを画像にする #JavaScript",
    "wip": false,
    "body_md": "created_at: 2014-09-22 02:23:19 +0900\nuser: nakajmg\n\nhttp://html2canvas.hertzen.com/ を使ってみた\n\n```\nhtml2canvas(element, {\n    onrendered: function(canvas) {\n        document.querySelector('#image').src = canvas.toDataURL('image/png');\n        }\n    }\n});\n```\n\nみたいにやると指定した`element`が`canvas`になる。`toDataURL`でpngにすれば画像の保存ができる。\n\n\n```html\n<html>\n  <head>\n    <title></title>\n    <style media=\"screen\">\n      .box {\n        width: 100px;\n        line-height: 100px;\n        display: inline-block;\n        text-align: center;\n      }\n    </style>\n  </head>\n  <body>\n    <div class=\"elements\">\n      <h2>elements</h2>\n      <div class=\"red box\" style=\"background-color: red;\">\n        red\n      </div>\n      <div class=\"blue box\" style=\"background-color: blue;\">\n        blue\n      </div>\n    </div>\n    \n    <div class=\"images\">\n      <h2>images</h2>\n      <img id=\"red\">\n      <img id=\"blue\">\n      <img id=\"body\">\n    </div>\n  <script src=\"bower_components/html2canvas/build/html2canvas.js\"></script>\n  <script charset=\"utf-8\">\n    window.addEventListener('load', function() {\n       var red = document.querySelector('.red');\n       var blue = document.querySelector('.blue');\n       \n      html2canvas(red, {\n        onrendered: function(canvas) {\n          document.querySelector('#red').src = canvas.toDataURL('image/png');\n        }\n      });\n      \n      html2canvas(blue, {\n        onrendered: function(canvas) {\n          document.querySelector('#blue').src = canvas.toDataURL('image/png');\n        }\n      });\n      \n      html2canvas(document.body, {\n        onrendered: function(canvas) {\n          document.querySelector('#body').src = canvas.toDataURL('image/png');\n        }\n      });\n    });\n  </script>\n  </body>\n</html>\n```\n\n結果\n\nこんな感じ。\n\n![ダウンロード (1).png](https://qiita-image-store.s3.amazonaws.com/778/17969/9fb6caa2-50bd-1e28-aaee-573ae9db7ba3.png)\n\n\n何かに使えそう。何かに。\n\n\n",
    "body_html": "<p>created_at: 2014-09-22 02:23:19 +0900<br>\nuser: nakajmg</p>\n\n<p><a target=\"_blank\" href=\"http://html2canvas.hertzen.com/\">http://html2canvas.hertzen.com/</a> を使ってみた</p>\n<div class=\"code-block\">\n<pre class=\"highlight plaintext\"><code>html2canvas(element, {\n    onrendered: function(canvas) {\n        document.querySelector('#image').src = canvas.toDataURL('image/png');\n        }\n    }\n});\n</code></pre>\n</div>\n<p>みたいにやると指定した<code>element</code>が<code>canvas</code>になる。<code>toDataURL</code>でpngにすれば画像の保存ができる。</p>\n<div class=\"code-block\">\n<pre class=\"highlight html\"><code><span class=\"nt\">&lt;html&gt;</span>\n  <span class=\"nt\">&lt;head&gt;</span>\n    <span class=\"nt\">&lt;title&gt;&lt;/title&gt;</span>\n    <span class=\"nt\">&lt;style </span><span class=\"na\">media=</span><span class=\"s\">\"screen\"</span><span class=\"nt\">&gt;</span>\n      <span class=\"nc\">.box</span> <span class=\"p\">{</span>\n        <span class=\"nl\">width</span><span class=\"p\">:</span> <span class=\"m\">100px</span><span class=\"p\">;</span>\n        <span class=\"nl\">line-height</span><span class=\"p\">:</span> <span class=\"m\">100px</span><span class=\"p\">;</span>\n        <span class=\"nl\">display</span><span class=\"p\">:</span> <span class=\"n\">inline-block</span><span class=\"p\">;</span>\n        <span class=\"nl\">text-align</span><span class=\"p\">:</span> <span class=\"nb\">center</span><span class=\"p\">;</span>\n      <span class=\"p\">}</span>\n    <span class=\"nt\">&lt;/style&gt;</span>\n  <span class=\"nt\">&lt;/head&gt;</span>\n  <span class=\"nt\">&lt;body&gt;</span>\n    <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"elements\"</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;h2&gt;</span>elements<span class=\"nt\">&lt;/h2&gt;</span>\n      <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"red box\"</span> <span class=\"na\">style=</span><span class=\"s\">\"background-color: red;\"</span><span class=\"nt\">&gt;</span>\n        red\n      <span class=\"nt\">&lt;/div&gt;</span>\n      <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"blue box\"</span> <span class=\"na\">style=</span><span class=\"s\">\"background-color: blue;\"</span><span class=\"nt\">&gt;</span>\n        blue\n      <span class=\"nt\">&lt;/div&gt;</span>\n    <span class=\"nt\">&lt;/div&gt;</span>\n\n    <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"images\"</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;h2&gt;</span>images<span class=\"nt\">&lt;/h2&gt;</span>\n      <span class=\"nt\">&lt;img</span> <span class=\"na\">id=</span><span class=\"s\">\"red\"</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;img</span> <span class=\"na\">id=</span><span class=\"s\">\"blue\"</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;img</span> <span class=\"na\">id=</span><span class=\"s\">\"body\"</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;/div&gt;</span>\n  <span class=\"nt\">&lt;script </span><span class=\"na\">src=</span><span class=\"s\">\"bower_components/html2canvas/build/html2canvas.js\"</span><span class=\"nt\">&gt;&lt;/script&gt;</span>\n  <span class=\"nt\">&lt;script </span><span class=\"na\">charset=</span><span class=\"s\">\"utf-8\"</span><span class=\"nt\">&gt;</span>\n    <span class=\"nb\">window</span><span class=\"p\">.</span><span class=\"nx\">addEventListener</span><span class=\"p\">(</span><span class=\"s1\">'load'</span><span class=\"p\">,</span> <span class=\"kd\">function</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n       <span class=\"kd\">var</span> <span class=\"nx\">red</span> <span class=\"o\">=</span> <span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">querySelector</span><span class=\"p\">(</span><span class=\"s1\">'.red'</span><span class=\"p\">);</span>\n       <span class=\"kd\">var</span> <span class=\"nx\">blue</span> <span class=\"o\">=</span> <span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">querySelector</span><span class=\"p\">(</span><span class=\"s1\">'.blue'</span><span class=\"p\">);</span>\n\n      <span class=\"nx\">html2canvas</span><span class=\"p\">(</span><span class=\"nx\">red</span><span class=\"p\">,</span> <span class=\"p\">{</span>\n        <span class=\"na\">onrendered</span><span class=\"p\">:</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">canvas</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n          <span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">querySelector</span><span class=\"p\">(</span><span class=\"s1\">'#red'</span><span class=\"p\">).</span><span class=\"nx\">src</span> <span class=\"o\">=</span> <span class=\"nx\">canvas</span><span class=\"p\">.</span><span class=\"nx\">toDataURL</span><span class=\"p\">(</span><span class=\"s1\">'image/png'</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n      <span class=\"p\">});</span>\n\n      <span class=\"nx\">html2canvas</span><span class=\"p\">(</span><span class=\"nx\">blue</span><span class=\"p\">,</span> <span class=\"p\">{</span>\n        <span class=\"na\">onrendered</span><span class=\"p\">:</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">canvas</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n          <span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">querySelector</span><span class=\"p\">(</span><span class=\"s1\">'#blue'</span><span class=\"p\">).</span><span class=\"nx\">src</span> <span class=\"o\">=</span> <span class=\"nx\">canvas</span><span class=\"p\">.</span><span class=\"nx\">toDataURL</span><span class=\"p\">(</span><span class=\"s1\">'image/png'</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n      <span class=\"p\">});</span>\n\n      <span class=\"nx\">html2canvas</span><span class=\"p\">(</span><span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">body</span><span class=\"p\">,</span> <span class=\"p\">{</span>\n        <span class=\"na\">onrendered</span><span class=\"p\">:</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">canvas</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n          <span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">querySelector</span><span class=\"p\">(</span><span class=\"s1\">'#body'</span><span class=\"p\">).</span><span class=\"nx\">src</span> <span class=\"o\">=</span> <span class=\"nx\">canvas</span><span class=\"p\">.</span><span class=\"nx\">toDataURL</span><span class=\"p\">(</span><span class=\"s1\">'image/png'</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n      <span class=\"p\">});</span>\n    <span class=\"p\">});</span>\n  <span class=\"nt\">&lt;/script&gt;</span>\n  <span class=\"nt\">&lt;/body&gt;</span>\n<span class=\"nt\">&lt;/html&gt;</span>\n</code></pre>\n</div>\n<p>結果</p>\n\n<p>こんな感じ。</p>\n\n<p><a href=\"https://qiita-image-store.s3.amazonaws.com/778/17969/9fb6caa2-50bd-1e28-aaee-573ae9db7ba3.png\" target=\"_blank\"><img src=\"https://qiita-image-store.s3.amazonaws.com/778/17969/9fb6caa2-50bd-1e28-aaee-573ae9db7ba3.png\" alt=\"ダウンロード (1).png\"></a></p>\n\n<p>何かに使えそう。何かに。</p>\n",
    "created_at": "2015-07-01T23:24:13+09:00",
    "message": "[skip notice] Imported from Qiita",
    "kind": "stock",
    "comments_count": 0,
    "tasks_count": 0,
    "done_tasks_count": 0,
    "url": "https://pxgrid.esa.io/posts/243",
    "updated_at": "2015-07-01T23:24:13+09:00",
    "tags": [
      "JavaScript"
    ],
    "category": "Imports/Qiita",
    "revision_number": 1,
    "created_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "updated_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "stargazers_count": 0,
    "watchers_count": 1,
    "star": false,
    "watch": true,
    "_uid": 1446574748056,
    "_modified_at": ""
  },
  {
    "number": 216,
    "name": "gulpで.pipeで流れてくるストリームのファイル名を出力したい",
    "full_name": "Imports/Qiita/gulpで.pipeで流れてくるストリームのファイル名を出力したい #JavaScript",
    "wip": false,
    "body_md": "created_at: 2014-09-05 01:14:40 +0900\nuser: nakajmg\n\n\nやりたかったこと: gulpで`gulp-cached`とか`gulp-remember`とか、`.pipe`で流れてくるストリームを増減する操作を可視化したい。\n\nなんか用意されてるだろうと思って調べても見つけられなかったのでモジュール書いてみた。\n\n```js:filename.js\nvar through2 = require('through2');\nvar path = require('path');\n\nmodule.exports = function() {\n  var arr = [];\n  return through2.obj(function(file, enc, cb) {\n    arr.push(path.basename(file.path));\n    this.push(file);\n    cb();\n  }, function(cb) {\n    console.log(arr);\n    cb();\n  });\n};\n```\n\n```js:gulpfile\nvar gulp = require('gulp');\nvar stylus = require('gulp-stylus');\nvar cached = require('gulp-cached');\nvar filename = require('./filename');\n\ngulp.task('stylus', function() {  \n  return gulp.src('styl/**/*.styl')\n    .pipe(cached())\n    .pipe(filename())\n    .pipe(stylus())\n    .pipe(gulp.dest('css/'));\n});\n\ngulp.task('watch', function(event) {\n  gulp.watch(['styl/**/*.styl'], ['stylus']);\n});\n```\n\n結果\n\n1回目は3つ全部。2回目は1つ。\n\n```\n[01:08:45] Starting 'watch'...\n[01:08:47] Starting 'stylus'...\n[ 'a.styl', 'b.styl', 'c.styl' ]\n[01:08:47] Finished 'stylus' after 77 ms\n[01:08:52] Starting 'stylus'...\n[ 'a.styl' ]\n[01:08:52] Finished 'stylus' after 11 ms\n```\n\n\nできた！\n\n",
    "body_html": "<p>created_at: 2014-09-05 01:14:40 +0900<br>\nuser: nakajmg</p>\n\n<p>やりたかったこと: gulpで<code>gulp-cached</code>とか<code>gulp-remember</code>とか、<code>.pipe</code>で流れてくるストリームを増減する操作を可視化したい。</p>\n\n<p>なんか用意されてるだろうと思って調べても見つけられなかったのでモジュール書いてみた。</p>\n<div class=\"code-block\">\n<div class=\"code-filename\">\n<i class=\"fa fa-file-code-o\"></i>filename.js</div>\n<pre class=\"highlight javascript\"><code><span class=\"kd\">var</span> <span class=\"nx\">through2</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">'through2'</span><span class=\"p\">);</span>\n<span class=\"kd\">var</span> <span class=\"nx\">path</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">'path'</span><span class=\"p\">);</span>\n\n<span class=\"nx\">module</span><span class=\"p\">.</span><span class=\"nx\">exports</span> <span class=\"o\">=</span> <span class=\"kd\">function</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"kd\">var</span> <span class=\"nx\">arr</span> <span class=\"o\">=</span> <span class=\"p\">[];</span>\n  <span class=\"k\">return</span> <span class=\"nx\">through2</span><span class=\"p\">.</span><span class=\"nx\">obj</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">file</span><span class=\"p\">,</span> <span class=\"nx\">enc</span><span class=\"p\">,</span> <span class=\"nx\">cb</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"nx\">arr</span><span class=\"p\">.</span><span class=\"nx\">push</span><span class=\"p\">(</span><span class=\"nx\">path</span><span class=\"p\">.</span><span class=\"nx\">basename</span><span class=\"p\">(</span><span class=\"nx\">file</span><span class=\"p\">.</span><span class=\"nx\">path</span><span class=\"p\">));</span>\n    <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">push</span><span class=\"p\">(</span><span class=\"nx\">file</span><span class=\"p\">);</span>\n    <span class=\"nx\">cb</span><span class=\"p\">();</span>\n  <span class=\"p\">},</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">cb</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">arr</span><span class=\"p\">);</span>\n    <span class=\"nx\">cb</span><span class=\"p\">();</span>\n  <span class=\"p\">});</span>\n<span class=\"p\">};</span>\n</code></pre>\n</div>\n<div class=\"code-block\">\n<div class=\"code-filename\">\n<i class=\"fa fa-file-code-o\"></i>gulpfile</div>\n<pre class=\"highlight javascript\"><code><span class=\"kd\">var</span> <span class=\"nx\">gulp</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">'gulp'</span><span class=\"p\">);</span>\n<span class=\"kd\">var</span> <span class=\"nx\">stylus</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">'gulp-stylus'</span><span class=\"p\">);</span>\n<span class=\"kd\">var</span> <span class=\"nx\">cached</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">'gulp-cached'</span><span class=\"p\">);</span>\n<span class=\"kd\">var</span> <span class=\"nx\">filename</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">'./filename'</span><span class=\"p\">);</span>\n\n<span class=\"nx\">gulp</span><span class=\"p\">.</span><span class=\"nx\">task</span><span class=\"p\">(</span><span class=\"s1\">'stylus'</span><span class=\"p\">,</span> <span class=\"kd\">function</span><span class=\"p\">()</span> <span class=\"p\">{</span>  \n  <span class=\"k\">return</span> <span class=\"nx\">gulp</span><span class=\"p\">.</span><span class=\"nx\">src</span><span class=\"p\">(</span><span class=\"s1\">'styl/**/*.styl'</span><span class=\"p\">)</span>\n    <span class=\"p\">.</span><span class=\"nx\">pipe</span><span class=\"p\">(</span><span class=\"nx\">cached</span><span class=\"p\">())</span>\n    <span class=\"p\">.</span><span class=\"nx\">pipe</span><span class=\"p\">(</span><span class=\"nx\">filename</span><span class=\"p\">())</span>\n    <span class=\"p\">.</span><span class=\"nx\">pipe</span><span class=\"p\">(</span><span class=\"nx\">stylus</span><span class=\"p\">())</span>\n    <span class=\"p\">.</span><span class=\"nx\">pipe</span><span class=\"p\">(</span><span class=\"nx\">gulp</span><span class=\"p\">.</span><span class=\"nx\">dest</span><span class=\"p\">(</span><span class=\"s1\">'css/'</span><span class=\"p\">));</span>\n<span class=\"p\">});</span>\n\n<span class=\"nx\">gulp</span><span class=\"p\">.</span><span class=\"nx\">task</span><span class=\"p\">(</span><span class=\"s1\">'watch'</span><span class=\"p\">,</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">event</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"nx\">gulp</span><span class=\"p\">.</span><span class=\"nx\">watch</span><span class=\"p\">([</span><span class=\"s1\">'styl/**/*.styl'</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s1\">'stylus'</span><span class=\"p\">]);</span>\n<span class=\"p\">});</span>\n</code></pre>\n</div>\n<p>結果</p>\n\n<p>1回目は3つ全部。2回目は1つ。</p>\n<div class=\"code-block\">\n<pre class=\"highlight plaintext\"><code>[01:08:45] Starting 'watch'...\n[01:08:47] Starting 'stylus'...\n[ 'a.styl', 'b.styl', 'c.styl' ]\n[01:08:47] Finished 'stylus' after 77 ms\n[01:08:52] Starting 'stylus'...\n[ 'a.styl' ]\n[01:08:52] Finished 'stylus' after 11 ms\n</code></pre>\n</div>\n<p>できた！</p>\n",
    "created_at": "2015-07-01T23:23:11+09:00",
    "message": "[skip notice] Imported from Qiita",
    "kind": "stock",
    "comments_count": 0,
    "tasks_count": 0,
    "done_tasks_count": 0,
    "url": "https://pxgrid.esa.io/posts/216",
    "updated_at": "2015-07-01T23:23:11+09:00",
    "tags": [
      "JavaScript"
    ],
    "category": "Imports/Qiita",
    "revision_number": 1,
    "created_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "updated_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "stargazers_count": 0,
    "watchers_count": 1,
    "star": false,
    "watch": true,
    "_uid": 1446574748057,
    "_modified_at": ""
  },
  {
    "number": 191,
    "name": "Markdownをレンダリングするx-marked要素を作った",
    "full_name": "Imports/Qiita/Markdownをレンダリングするx-marked要素を作った #JavaScript",
    "wip": false,
    "body_md": "created_at: 2014-08-24 21:24:11 +0900\nuser: nakajmg\n\nWeb Componentsの勉強がてら`<x-marked>`という要素を作った。\n\nデモ: http://nakajmg.github.io/x-marked/\nレポ: https://github.com/nakajmg/x-marked\n\n`<x-marked># マークダウン</x-marked>`とすればマークダウンがレンダリングされる。marked.js使用。\n\n\n## ハマりかけポイント\n\n### importされた先のcontentを取得\n\n`Object.create`の`attachedCallback`のタイミングで`this.textConent`とか`this.innerHTML`でとれた。`createCallback`のタイミングだと取れないことに気づくのに少し時間かかった。\n\n\n### 外部CSS適用したい\n\n普通に`link`要素置いても外部CSSが適用されない仕様らしいので`xhr`で取得してインラインに打ち込んだ。Polymerも似たようなことをやってるらしい。\n\n### importされたときのdocument\n\n`import`されたHTMLは`document`がちがう？ので元の`document`を使う必要あり。\n\n```\nvar currentScript = document._currentScript || document.currentScript;\nvar doc = currentScript.ownerDocument;\n```\n\n## ソース\n\n```html:x-marked.html\n<script src=\"marked.js\"></script>\n<template id=\"x-marked\">\n  <link rel=\"stylesheet\" href=\"github-markdown.css\">\n  <style>\n    :unresolved { display: none; }\n    [data-x-marked-originalText] { display: none; }\n  </style>\n  <section class=\"x-marked\">\n    <div data-x-marked-content></div>\n    <div data-x-marked-originalText>\n      <content></content>\n    </div>\n  </section>\n</template>\n\n<script>\n(function() {\n  var currentScript = document._currentScript || document.currentScript;\n  var doc = currentScript.ownerDocument;\n  \n  var proto = Object.create(HTMLElement.prototype, {\n    createdCallback: {\n      value: function() {\n        var _this = this;\n        var root = this.createShadowRoot();\n        var tmpl = doc.querySelector('#x-marked');\n        var clone = document.importNode(tmpl.content, true);\n        this.createShadowRoot().appendChild(clone);\n        this.applyStyle();\n      }\n    },\n    applyStyle: {\n      value: function() {\n        var _this = this, style, cssHref, xhr;\n        var isApplyStyle = this.hasAttribute('data-apply-style');\n        \n        if(isApplyStyle) {\n          cssHref = this.shadowRoot.querySelector('link[rel=stylesheet]').getAttribute('href');\n          xhr = new XMLHttpRequest();\n          xhr.open('GET', cssHref, true);\n          xhr.onload = function() {\n            if (xhr.status === 200){\n              style = document.createElement('style');\n              style.textContent = xhr.responseText;\n              _this.shadowRoot.appendChild(style);\n              _this.shadowRoot.querySelector('[data-x-marked-content]').classList.add('markdown-body');\n            }\n          }\n          xhr.send();\n        }\n      }\n    },\n    attachedCallback: {\n      value: function() {\n        var originalText = this.innerHTML;\n        var markedContent = this.shadowRoot.querySelector('[data-x-marked-content]');\n        markedContent.innerHTML = marked(originalText)\n      }\n    }\n  });\n\n  document.registerElement('x-marked', {prototype: proto});\n})();\n</script>\n```\n\n```:index.html\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"import\" href=\"x-marked.html\">\n  </head>\n  <body>\n    <x-marked data-apply-style>\n# x-marked\n  \nマークダウンで書かれたテキストをHTMLに変換するウェッブコンポーネンツッ\n\n* リストだって\n* このとおり\n\n`x-marked`タグを指定すれば使える超簡単！\n\n|テーブル|見出し|\n|:-------|:-------:|\n|テーブル|だよ|\n\n\n## 使い方\n\\```\n<x-marked>#markdownテキストをいれるとレンダリングされるよ</x-marked>\n\\\\```\n\nタグに`data-apply-style`をつけるとGitHub風なレンダリングになるよ。\n\n## 使ったもの\n\n* [marked.js](https://github.com/chjj/marked)\n* [github-markdown-css](https://github.com/sindresorhus/github-markdown-css)\n\n    </x-marked>\n  </body>\n</html>\n```\n\nWebコン、まだまだ情報が少ない。あっても古くて使えないのに結構当たった気がする。\n\n",
    "body_html": "<p>created_at: 2014-08-24 21:24:11 +0900<br>\nuser: nakajmg</p>\n\n<p>Web Componentsの勉強がてら<code>&lt;x-marked&gt;</code>という要素を作った。</p>\n\n<p>デモ: <a target=\"_blank\" href=\"http://nakajmg.github.io/x-marked/\">http://nakajmg.github.io/x-marked/</a><br>\nレポ: <a target=\"_blank\" href=\"https://github.com/nakajmg/x-marked\">https://github.com/nakajmg/x-marked</a></p>\n\n<p><code>&lt;x-marked&gt;# マークダウン&lt;/x-marked&gt;</code>とすればマークダウンがレンダリングされる。marked.js使用。</p>\n\n<h2 id=\"0-1-0\" name=\"0-1-0\">\n<a class=\"anchor\" href=\"#0-1-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"ハマりかけポイント\"> &gt; ハマりかけポイント</span></a>ハマりかけポイント</h2>\n\n<h3 id=\"0-1-1\" name=\"0-1-1\">\n<a class=\"anchor\" href=\"#0-1-1\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"importされた先のcontentを取得\"> &gt; importされた先のcontentを取得</span></a>importされた先のcontentを取得</h3>\n\n<p><code>Object.create</code>の<code>attachedCallback</code>のタイミングで<code>this.textConent</code>とか<code>this.innerHTML</code>でとれた。<code>createCallback</code>のタイミングだと取れないことに気づくのに少し時間かかった。</p>\n\n<h3 id=\"0-1-2\" name=\"0-1-2\">\n<a class=\"anchor\" href=\"#0-1-2\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"外部CSS適用したい\"> &gt; 外部CSS適用したい</span></a>外部CSS適用したい</h3>\n\n<p>普通に<code>link</code>要素置いても外部CSSが適用されない仕様らしいので<code>xhr</code>で取得してインラインに打ち込んだ。Polymerも似たようなことをやってるらしい。</p>\n\n<h3 id=\"0-1-3\" name=\"0-1-3\">\n<a class=\"anchor\" href=\"#0-1-3\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"importされたときのdocument\"> &gt; importされたときのdocument</span></a>importされたときのdocument</h3>\n\n<p><code>import</code>されたHTMLは<code>document</code>がちがう？ので元の<code>document</code>を使う必要あり。</p>\n<div class=\"code-block\">\n<pre class=\"highlight plaintext\"><code>var currentScript = document._currentScript || document.currentScript;\nvar doc = currentScript.ownerDocument;\n</code></pre>\n</div>\n<h2 id=\"0-2-0\" name=\"0-2-0\">\n<a class=\"anchor\" href=\"#0-2-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"ソース\"> &gt; ソース</span></a>ソース</h2>\n<div class=\"code-block\">\n<div class=\"code-filename\">\n<i class=\"fa fa-file-code-o\"></i>x-marked.html</div>\n<pre class=\"highlight html\"><code><span class=\"nt\">&lt;script </span><span class=\"na\">src=</span><span class=\"s\">\"marked.js\"</span><span class=\"nt\">&gt;&lt;/script&gt;</span>\n<span class=\"nt\">&lt;template</span> <span class=\"na\">id=</span><span class=\"s\">\"x-marked\"</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;link</span> <span class=\"na\">rel=</span><span class=\"s\">\"stylesheet\"</span> <span class=\"na\">href=</span><span class=\"s\">\"github-markdown.css\"</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;style&gt;</span>\n    <span class=\"nd\">:unresolved</span> <span class=\"p\">{</span> <span class=\"nl\">display</span><span class=\"p\">:</span> <span class=\"nb\">none</span><span class=\"p\">;</span> <span class=\"p\">}</span>\n    <span class=\"o\">[</span><span class=\"nt\">data-x-marked-originalText</span><span class=\"o\">]</span> <span class=\"p\">{</span> <span class=\"nl\">display</span><span class=\"p\">:</span> <span class=\"nb\">none</span><span class=\"p\">;</span> <span class=\"p\">}</span>\n  <span class=\"nt\">&lt;/style&gt;</span>\n  <span class=\"nt\">&lt;section</span> <span class=\"na\">class=</span><span class=\"s\">\"x-marked\"</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;div</span> <span class=\"na\">data-x-marked-content</span><span class=\"nt\">&gt;&lt;/div&gt;</span>\n    <span class=\"nt\">&lt;div</span> <span class=\"na\">data-x-marked-originalText</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;content&gt;&lt;/content&gt;</span>\n    <span class=\"nt\">&lt;/div&gt;</span>\n  <span class=\"nt\">&lt;/section&gt;</span>\n<span class=\"nt\">&lt;/template&gt;</span>\n\n<span class=\"nt\">&lt;script&gt;</span>\n<span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"kd\">var</span> <span class=\"nx\">currentScript</span> <span class=\"o\">=</span> <span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">_currentScript</span> <span class=\"o\">||</span> <span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">currentScript</span><span class=\"p\">;</span>\n  <span class=\"kd\">var</span> <span class=\"nx\">doc</span> <span class=\"o\">=</span> <span class=\"nx\">currentScript</span><span class=\"p\">.</span><span class=\"nx\">ownerDocument</span><span class=\"p\">;</span>\n\n  <span class=\"kd\">var</span> <span class=\"nx\">proto</span> <span class=\"o\">=</span> <span class=\"nb\">Object</span><span class=\"p\">.</span><span class=\"nx\">create</span><span class=\"p\">(</span><span class=\"nx\">HTMLElement</span><span class=\"p\">.</span><span class=\"nx\">prototype</span><span class=\"p\">,</span> <span class=\"p\">{</span>\n    <span class=\"na\">createdCallback</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"na\">value</span><span class=\"p\">:</span> <span class=\"kd\">function</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n        <span class=\"kd\">var</span> <span class=\"nx\">_this</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"p\">;</span>\n        <span class=\"kd\">var</span> <span class=\"nx\">root</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">createShadowRoot</span><span class=\"p\">();</span>\n        <span class=\"kd\">var</span> <span class=\"nx\">tmpl</span> <span class=\"o\">=</span> <span class=\"nx\">doc</span><span class=\"p\">.</span><span class=\"nx\">querySelector</span><span class=\"p\">(</span><span class=\"s1\">'#x-marked'</span><span class=\"p\">);</span>\n        <span class=\"kd\">var</span> <span class=\"nx\">clone</span> <span class=\"o\">=</span> <span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">importNode</span><span class=\"p\">(</span><span class=\"nx\">tmpl</span><span class=\"p\">.</span><span class=\"nx\">content</span><span class=\"p\">,</span> <span class=\"kc\">true</span><span class=\"p\">);</span>\n        <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">createShadowRoot</span><span class=\"p\">().</span><span class=\"nx\">appendChild</span><span class=\"p\">(</span><span class=\"nx\">clone</span><span class=\"p\">);</span>\n        <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">applyStyle</span><span class=\"p\">();</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n    <span class=\"na\">applyStyle</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"na\">value</span><span class=\"p\">:</span> <span class=\"kd\">function</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n        <span class=\"kd\">var</span> <span class=\"nx\">_this</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"p\">,</span> <span class=\"nx\">style</span><span class=\"p\">,</span> <span class=\"nx\">cssHref</span><span class=\"p\">,</span> <span class=\"nx\">xhr</span><span class=\"p\">;</span>\n        <span class=\"kd\">var</span> <span class=\"nx\">isApplyStyle</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">hasAttribute</span><span class=\"p\">(</span><span class=\"s1\">'data-apply-style'</span><span class=\"p\">);</span>\n\n        <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"nx\">isApplyStyle</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n          <span class=\"nx\">cssHref</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">shadowRoot</span><span class=\"p\">.</span><span class=\"nx\">querySelector</span><span class=\"p\">(</span><span class=\"s1\">'link[rel=stylesheet]'</span><span class=\"p\">).</span><span class=\"nx\">getAttribute</span><span class=\"p\">(</span><span class=\"s1\">'href'</span><span class=\"p\">);</span>\n          <span class=\"nx\">xhr</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nx\">XMLHttpRequest</span><span class=\"p\">();</span>\n          <span class=\"nx\">xhr</span><span class=\"p\">.</span><span class=\"nx\">open</span><span class=\"p\">(</span><span class=\"s1\">'GET'</span><span class=\"p\">,</span> <span class=\"nx\">cssHref</span><span class=\"p\">,</span> <span class=\"kc\">true</span><span class=\"p\">);</span>\n          <span class=\"nx\">xhr</span><span class=\"p\">.</span><span class=\"nx\">onload</span> <span class=\"o\">=</span> <span class=\"kd\">function</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">xhr</span><span class=\"p\">.</span><span class=\"nx\">status</span> <span class=\"o\">===</span> <span class=\"mi\">200</span><span class=\"p\">){</span>\n              <span class=\"nx\">style</span> <span class=\"o\">=</span> <span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">createElement</span><span class=\"p\">(</span><span class=\"s1\">'style'</span><span class=\"p\">);</span>\n              <span class=\"nx\">style</span><span class=\"p\">.</span><span class=\"nx\">textContent</span> <span class=\"o\">=</span> <span class=\"nx\">xhr</span><span class=\"p\">.</span><span class=\"nx\">responseText</span><span class=\"p\">;</span>\n              <span class=\"nx\">_this</span><span class=\"p\">.</span><span class=\"nx\">shadowRoot</span><span class=\"p\">.</span><span class=\"nx\">appendChild</span><span class=\"p\">(</span><span class=\"nx\">style</span><span class=\"p\">);</span>\n              <span class=\"nx\">_this</span><span class=\"p\">.</span><span class=\"nx\">shadowRoot</span><span class=\"p\">.</span><span class=\"nx\">querySelector</span><span class=\"p\">(</span><span class=\"s1\">'[data-x-marked-content]'</span><span class=\"p\">).</span><span class=\"nx\">classList</span><span class=\"p\">.</span><span class=\"nx\">add</span><span class=\"p\">(</span><span class=\"s1\">'markdown-body'</span><span class=\"p\">);</span>\n            <span class=\"p\">}</span>\n          <span class=\"p\">}</span>\n          <span class=\"nx\">xhr</span><span class=\"p\">.</span><span class=\"nx\">send</span><span class=\"p\">();</span>\n        <span class=\"p\">}</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n    <span class=\"na\">attachedCallback</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"na\">value</span><span class=\"p\">:</span> <span class=\"kd\">function</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n        <span class=\"kd\">var</span> <span class=\"nx\">originalText</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">innerHTML</span><span class=\"p\">;</span>\n        <span class=\"kd\">var</span> <span class=\"nx\">markedContent</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">shadowRoot</span><span class=\"p\">.</span><span class=\"nx\">querySelector</span><span class=\"p\">(</span><span class=\"s1\">'[data-x-marked-content]'</span><span class=\"p\">);</span>\n        <span class=\"nx\">markedContent</span><span class=\"p\">.</span><span class=\"nx\">innerHTML</span> <span class=\"o\">=</span> <span class=\"nx\">marked</span><span class=\"p\">(</span><span class=\"nx\">originalText</span><span class=\"p\">)</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">});</span>\n\n  <span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">registerElement</span><span class=\"p\">(</span><span class=\"s1\">'x-marked'</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"na\">prototype</span><span class=\"p\">:</span> <span class=\"nx\">proto</span><span class=\"p\">});</span>\n<span class=\"p\">})();</span>\n<span class=\"nt\">&lt;/script&gt;</span>\n</code></pre>\n</div>\n<div class=\"code-block\">\n<div class=\"code-filename\">\n<i class=\"fa fa-file-code-o\"></i>index.html</div>\n<pre class=\"highlight html\"><code><span class=\"nt\">&lt;html&gt;</span>\n  <span class=\"nt\">&lt;head&gt;</span>\n    <span class=\"nt\">&lt;meta</span> <span class=\"na\">charset=</span><span class=\"s\">\"utf-8\"</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;link</span> <span class=\"na\">rel=</span><span class=\"s\">\"import\"</span> <span class=\"na\">href=</span><span class=\"s\">\"x-marked.html\"</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;/head&gt;</span>\n  <span class=\"nt\">&lt;body&gt;</span>\n    <span class=\"nt\">&lt;x-marked</span> <span class=\"na\">data-apply-style</span><span class=\"nt\">&gt;</span>\n# x-marked\n\nマークダウンで書かれたテキストをHTMLに変換するウェッブコンポーネンツッ\n\n* リストだって\n* このとおり\n\n`x-marked`タグを指定すれば使える超簡単！\n\n|テーブル|見出し|\n|:-------|:-------:|\n|テーブル|だよ|\n\n\n## 使い方\n\\```\n<span class=\"nt\">&lt;x-marked&gt;</span>#markdownテキストをいれるとレンダリングされるよ<span class=\"nt\">&lt;/x-marked&gt;</span>\n\\\\```\n\nタグに`data-apply-style`をつけるとGitHub風なレンダリングになるよ。\n\n## 使ったもの\n\n* [marked.js](https://github.com/chjj/marked)\n* [github-markdown-css](https://github.com/sindresorhus/github-markdown-css)\n\n    <span class=\"nt\">&lt;/x-marked&gt;</span>\n  <span class=\"nt\">&lt;/body&gt;</span>\n<span class=\"nt\">&lt;/html&gt;</span>\n</code></pre>\n</div>\n<p>Webコン、まだまだ情報が少ない。あっても古くて使えないのに結構当たった気がする。</p>\n",
    "created_at": "2015-07-01T23:03:54+09:00",
    "message": "[skip notice] Imported from Qiita",
    "kind": "stock",
    "comments_count": 0,
    "tasks_count": 0,
    "done_tasks_count": 0,
    "url": "https://pxgrid.esa.io/posts/191",
    "updated_at": "2015-07-01T23:03:54+09:00",
    "tags": [
      "JavaScript"
    ],
    "category": "Imports/Qiita",
    "revision_number": 1,
    "created_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "updated_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "stargazers_count": 0,
    "watchers_count": 1,
    "star": false,
    "watch": true,
    "_uid": 1446574748058,
    "_modified_at": ""
  },
  {
    "number": 190,
    "name": "Hubotのmsgの中身を確認する",
    "full_name": "Imports/Qiita/Hubotのmsgの中身を確認する #Hubot",
    "wip": false,
    "body_md": "created_at: 2014-08-24 14:37:12 +0900\nuser: nakajmg\n\nコンソールだとユーザ名とかルーム名がどうなるかわからなかったのでチャットに`console.log`ぽいのを返すtestbotを置いて確認した。\n\nチャットで以下のような発言をすると`resond`のコールバックに渡される`msg`のvalueを出力する\n\n↓だと`msg.message`を整形して発言してくれる\n\n```\npxbot test dump message\n```\n\n```:msg.message\n{ user: \n   { id: 'U029ECUDL',\n     name: 'nakajmg',\n     reply_to: 'C029YNKE2',\n     room: 'test_pxgrid_bot' },\n  text: 'pxbot test dump message',\n  id: undefined,\n  done: false,\n  room: 'test_pxgrid_bot' }\n```\n\n`message`以外だと`envelope`の確認に。`match`の確認はコンソールでもよい。\n\n```:msg.envelope\n{ room: 'test_pxgrid_bot',\n  user: \n   { id: 'U029ECUDL',\n     name: 'nakajmg',\n     reply_to: 'C029YNKE2',\n     room: 'test_pxgrid_bot' },\n  message: \n   { user: \n      { id: 'U029ECUDL',\n        name: 'nakajmg',\n        reply_to: 'C029YNKE2',\n        room: 'test_pxgrid_bot' },\n     text: 'pxbot test dump envelope',\n     id: undefined,\n     done: false,\n     room: 'test_pxgrid_bot' } }\n```\n\n",
    "body_html": "<p>created_at: 2014-08-24 14:37:12 +0900<br>\nuser: nakajmg</p>\n\n<p>コンソールだとユーザ名とかルーム名がどうなるかわからなかったのでチャットに<code>console.log</code>ぽいのを返すtestbotを置いて確認した。</p>\n\n<p>チャットで以下のような発言をすると<code>resond</code>のコールバックに渡される<code>msg</code>のvalueを出力する</p>\n\n<p>↓だと<code>msg.message</code>を整形して発言してくれる</p>\n<div class=\"code-block\">\n<pre class=\"highlight plaintext\"><code>pxbot test dump message\n</code></pre>\n</div>\n<div class=\"code-block\">\n<div class=\"code-filename\">\n<i class=\"fa fa-file-code-o\"></i>msg.message</div>\n<pre class=\"highlight json\"><code><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"err\">user:</span><span class=\"w\"> \n   </span><span class=\"err\">{</span><span class=\"w\"> </span><span class=\"err\">id:</span><span class=\"w\"> </span><span class=\"err\">'U029ECUDL',</span><span class=\"w\">\n     </span><span class=\"err\">name:</span><span class=\"w\"> </span><span class=\"err\">'nakajmg',</span><span class=\"w\">\n     </span><span class=\"err\">reply_to:</span><span class=\"w\"> </span><span class=\"err\">'C029YNKE2',</span><span class=\"w\">\n     </span><span class=\"err\">room:</span><span class=\"w\"> </span><span class=\"err\">'test_pxgrid_bot'</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"err\">,</span><span class=\"w\">\n  </span><span class=\"err\">text:</span><span class=\"w\"> </span><span class=\"err\">'pxbot</span><span class=\"w\"> </span><span class=\"err\">test</span><span class=\"w\"> </span><span class=\"err\">dump</span><span class=\"w\"> </span><span class=\"err\">message',</span><span class=\"w\">\n  </span><span class=\"err\">id:</span><span class=\"w\"> </span><span class=\"err\">undefined,</span><span class=\"w\">\n  </span><span class=\"err\">done:</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"err\">,</span><span class=\"w\">\n  </span><span class=\"err\">room:</span><span class=\"w\"> </span><span class=\"err\">'test_pxgrid_bot'</span><span class=\"w\"> </span><span class=\"err\">}</span><span class=\"w\">\n</span></code></pre>\n</div>\n<p><code>message</code>以外だと<code>envelope</code>の確認に。<code>match</code>の確認はコンソールでもよい。</p>\n<div class=\"code-block\">\n<div class=\"code-filename\">\n<i class=\"fa fa-file-code-o\"></i>msg.envelope</div>\n<pre class=\"highlight json\"><code><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"err\">room:</span><span class=\"w\"> </span><span class=\"err\">'test_pxgrid_bot',</span><span class=\"w\">\n  </span><span class=\"err\">user:</span><span class=\"w\"> \n   </span><span class=\"err\">{</span><span class=\"w\"> </span><span class=\"err\">id:</span><span class=\"w\"> </span><span class=\"err\">'U029ECUDL',</span><span class=\"w\">\n     </span><span class=\"err\">name:</span><span class=\"w\"> </span><span class=\"err\">'nakajmg',</span><span class=\"w\">\n     </span><span class=\"err\">reply_to:</span><span class=\"w\"> </span><span class=\"err\">'C029YNKE2',</span><span class=\"w\">\n     </span><span class=\"err\">room:</span><span class=\"w\"> </span><span class=\"err\">'test_pxgrid_bot'</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"err\">,</span><span class=\"w\">\n  </span><span class=\"err\">message:</span><span class=\"w\"> \n   </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"err\">user:</span><span class=\"w\"> \n      </span><span class=\"err\">{</span><span class=\"w\"> </span><span class=\"err\">id:</span><span class=\"w\"> </span><span class=\"err\">'U029ECUDL',</span><span class=\"w\">\n        </span><span class=\"err\">name:</span><span class=\"w\"> </span><span class=\"err\">'nakajmg',</span><span class=\"w\">\n        </span><span class=\"err\">reply_to:</span><span class=\"w\"> </span><span class=\"err\">'C029YNKE2',</span><span class=\"w\">\n        </span><span class=\"err\">room:</span><span class=\"w\"> </span><span class=\"err\">'test_pxgrid_bot'</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"err\">,</span><span class=\"w\">\n     </span><span class=\"err\">text:</span><span class=\"w\"> </span><span class=\"err\">'pxbot</span><span class=\"w\"> </span><span class=\"err\">test</span><span class=\"w\"> </span><span class=\"err\">dump</span><span class=\"w\"> </span><span class=\"err\">envelope',</span><span class=\"w\">\n     </span><span class=\"err\">id:</span><span class=\"w\"> </span><span class=\"err\">undefined,</span><span class=\"w\">\n     </span><span class=\"err\">done:</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"err\">,</span><span class=\"w\">\n     </span><span class=\"err\">room:</span><span class=\"w\"> </span><span class=\"err\">'test_pxgrid_bot'</span><span class=\"w\"> </span><span class=\"err\">}</span><span class=\"w\"> </span><span class=\"err\">}</span><span class=\"w\">\n</span></code></pre>\n</div>",
    "created_at": "2015-07-01T23:03:52+09:00",
    "message": "[skip notice] Imported from Qiita",
    "kind": "stock",
    "comments_count": 0,
    "tasks_count": 0,
    "done_tasks_count": 0,
    "url": "https://pxgrid.esa.io/posts/190",
    "updated_at": "2015-07-01T23:03:52+09:00",
    "tags": [
      "Hubot"
    ],
    "category": "Imports/Qiita",
    "revision_number": 1,
    "created_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "updated_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "stargazers_count": 0,
    "watchers_count": 1,
    "star": false,
    "watch": true,
    "_uid": 1446574748060,
    "_modified_at": ""
  },
  {
    "number": 187,
    "name": "ターミナルでgulpのタスク名を補完できるようにする",
    "full_name": "Imports/Qiita/ターミナルでgulpのタスク名を補完できるようにする",
    "wip": false,
    "body_md": "created_at: 2014-08-22 02:10:09 +0900\nuser: nakajmg\n\n![2014-08-22 02_14_38.gif](https://qiita-image-store.s3.amazonaws.com/778/17969/22cc2cfe-177e-397a-e305-f57ed816ce78.gif)\n\n### zsh\n\n`~/.zshrc`に\n\n```zsh\neval \"$(gulp --completion=zsh)\"\n```\n\n### bash\n\n`~/.bashrc`に\n\n```bash\neval \"$(gulp --completion=bash)\"\n```\n\nhttps://github.com/gulpjs/gulp/tree/master/completion\n\n",
    "body_html": "<p>created_at: 2014-08-22 02:10:09 +0900<br>\nuser: nakajmg</p>\n\n<p><a href=\"https://qiita-image-store.s3.amazonaws.com/778/17969/22cc2cfe-177e-397a-e305-f57ed816ce78.gif\" target=\"_blank\"><img src=\"https://qiita-image-store.s3.amazonaws.com/778/17969/22cc2cfe-177e-397a-e305-f57ed816ce78.gif\" alt=\"2014-08-22 02_14_38.gif\"></a></p>\n\n<h3 id=\"0-0-1\" name=\"0-0-1\">\n<a class=\"anchor\" href=\"#0-0-1\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"zsh\"> &gt; zsh</span></a>zsh</h3>\n\n<p><code>~/.zshrc</code>に</p>\n<div class=\"code-block\">\n<pre class=\"highlight shell\"><code><span class=\"nb\">eval</span> <span class=\"s2\">\"</span><span class=\"k\">$(</span>gulp --completion<span class=\"o\">=</span>zsh<span class=\"k\">)</span><span class=\"s2\">\"</span>\n</code></pre>\n</div>\n<h3 id=\"0-0-2\" name=\"0-0-2\">\n<a class=\"anchor\" href=\"#0-0-2\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"bash\"> &gt; bash</span></a>bash</h3>\n\n<p><code>~/.bashrc</code>に</p>\n<div class=\"code-block\">\n<pre class=\"highlight shell\"><code><span class=\"nb\">eval</span> <span class=\"s2\">\"</span><span class=\"k\">$(</span>gulp --completion<span class=\"o\">=</span>bash<span class=\"k\">)</span><span class=\"s2\">\"</span>\n</code></pre>\n</div>\n<p><a target=\"_blank\" href=\"https://github.com/gulpjs/gulp/tree/master/completion\">https://github.com/gulpjs/gulp/tree/master/completion</a></p>\n",
    "created_at": "2015-07-01T23:03:40+09:00",
    "message": "[skip notice] Imported from Qiita",
    "kind": "stock",
    "comments_count": 0,
    "tasks_count": 0,
    "done_tasks_count": 0,
    "url": "https://pxgrid.esa.io/posts/187",
    "updated_at": "2015-07-01T23:03:40+09:00",
    "tags": [],
    "category": "Imports/Qiita",
    "revision_number": 1,
    "created_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "updated_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "stargazers_count": 0,
    "watchers_count": 1,
    "star": false,
    "watch": true,
    "_uid": 1446574748061,
    "_modified_at": ""
  },
  {
    "number": 183,
    "name": "DevToolsでブラウザ上の色が拾えるようになった",
    "full_name": "Imports/Qiita/DevToolsでブラウザ上の色が拾えるようになった",
    "wip": false,
    "body_md": "created_at: 2014-08-20 10:20:22 +0900\nuser: nakajmg\n\nCanaryで。\n\nしゅごい。\n\n![color_picker.gif](https://qiita-image-store.s3.amazonaws.com/778/17969/cdfc5861-1fb9-e92e-a9f4-5cd252dc378d.gif)\n\n興奮して表にも投稿した\nhttp://qiita.com/nakajmg/items/477728bff8b89664e1a4\n\n",
    "body_html": "<p>created_at: 2014-08-20 10:20:22 +0900<br>\nuser: nakajmg</p>\n\n<p>Canaryで。</p>\n\n<p>しゅごい。</p>\n\n<p><a href=\"https://qiita-image-store.s3.amazonaws.com/778/17969/cdfc5861-1fb9-e92e-a9f4-5cd252dc378d.gif\" target=\"_blank\"><img src=\"https://qiita-image-store.s3.amazonaws.com/778/17969/cdfc5861-1fb9-e92e-a9f4-5cd252dc378d.gif\" alt=\"color_picker.gif\"></a></p>\n\n<p>興奮して表にも投稿した<br>\n<a target=\"_blank\" href=\"http://qiita.com/nakajmg/items/477728bff8b89664e1a4\">http://qiita.com/nakajmg/items/477728bff8b89664e1a4</a></p>\n",
    "created_at": "2015-07-01T23:03:23+09:00",
    "message": "[skip notice] Imported from Qiita",
    "kind": "stock",
    "comments_count": 0,
    "tasks_count": 0,
    "done_tasks_count": 0,
    "url": "https://pxgrid.esa.io/posts/183",
    "updated_at": "2015-07-01T23:03:23+09:00",
    "tags": [],
    "category": "Imports/Qiita",
    "revision_number": 1,
    "created_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "updated_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "stargazers_count": 0,
    "watchers_count": 1,
    "star": false,
    "watch": true,
    "_uid": 1446574748062,
    "_modified_at": ""
  },
  {
    "number": 146,
    "name": "decodeをするText Encoding API",
    "full_name": "Imports/Qiita/JSでテキストのencode/decodeをするText Encoding API #JavaScript",
    "wip": false,
    "body_md": "created_at: 2014-07-29 01:15:26 +0900\nuser: nakajmg\n\nJSでテキストのエンコード/デコードができるAPI。\nCanaryで確認。Firefoxでもいけるらしい。\n\nhttps://plus.google.com/+AddyOsmani/posts/4GgX9CD6c1X\n\n[Spec](http://encoding.spec.whatwg.org/#api)\n\n[chrome://flags](chrome://flags)から`試験運用版のウェブ プラットフォームの機能を有効にする。`を有効に。\n\n```\n// utf-16エンコーダの作成\nvar encoder = new TextEncoder('utf-16');\n// エンコード\nvar encoded = encoder.encode('hello pxg');\n// [104, 0, 101, 0, 108, 0, 108, 0, 111, 0, 32, 0, 112, 0, 120, 0, 103, 0]\n\n// デコーダの作成\nvar decoder = new TextDecoder('utf-16');\ndecoder.decode(encoded);\n// \"hello pxg\"\n```\n\n試したら`new TextEncoder`するときのキーワードが`utf-8`と`utf-16`と`utf-16be`の3種類しか取れないぽい。\n\nこのAPI使う機会が来るんだろうか。\n\n",
    "body_html": "<p>created_at: 2014-07-29 01:15:26 +0900<br>\nuser: nakajmg</p>\n\n<p>JSでテキストのエンコード/デコードができるAPI。<br>\nCanaryで確認。Firefoxでもいけるらしい。</p>\n\n<p><a target=\"_blank\" href=\"https://plus.google.com/+AddyOsmani/posts/4GgX9CD6c1X\">https://plus.google.com/+AddyOsmani/posts/4GgX9CD6c1X</a></p>\n\n<p><a target=\"_blank\" href=\"http://encoding.spec.whatwg.org/#api\">Spec</a></p>\n\n<p><a target=\"_blank\" href=\"chrome://flags\">chrome://flags</a>から<code>試験運用版のウェブ プラットフォームの機能を有効にする。</code>を有効に。</p>\n<div class=\"code-block\">\n<pre class=\"highlight plaintext\"><code>// utf-16エンコーダの作成\nvar encoder = new TextEncoder('utf-16');\n// エンコード\nvar encoded = encoder.encode('hello pxg');\n// [104, 0, 101, 0, 108, 0, 108, 0, 111, 0, 32, 0, 112, 0, 120, 0, 103, 0]\n\n// デコーダの作成\nvar decoder = new TextDecoder('utf-16');\ndecoder.decode(encoded);\n// \"hello pxg\"\n</code></pre>\n</div>\n<p>試したら<code>new TextEncoder</code>するときのキーワードが<code>utf-8</code>と<code>utf-16</code>と<code>utf-16be</code>の3種類しか取れないぽい。</p>\n\n<p>このAPI使う機会が来るんだろうか。</p>\n",
    "created_at": "2015-07-01T23:01:20+09:00",
    "message": "[skip notice] Imported from Qiita",
    "kind": "stock",
    "comments_count": 0,
    "tasks_count": 0,
    "done_tasks_count": 0,
    "url": "https://pxgrid.esa.io/posts/146",
    "updated_at": "2015-07-01T23:01:20+09:00",
    "tags": [
      "JavaScript"
    ],
    "category": "Imports/Qiita/JSでテキストのencode",
    "revision_number": 1,
    "created_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "updated_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "stargazers_count": 0,
    "watchers_count": 1,
    "star": false,
    "watch": true,
    "_uid": 1446574748063,
    "_modified_at": ""
  },
  {
    "number": 134,
    "name": "[CMS] 左サイドバーを隠す",
    "full_name": "Imports/Qiita/[CMS] 左サイドバーを隠す #CMS",
    "wip": false,
    "body_md": "created_at: 2014-07-22 16:31:34 +0900\nuser: nakajmg\n\n常に画面の1/3くらいを独占してて邪魔なので隠す。\n\n### 表示切り替え\n```\n$('.cms-leftSidebar').toggle();\n```\n\n### ブックマークレット用\n```\njavascript:$('.cms-leftSidebar').toggle();\n```\n\n",
    "body_html": "<p>created_at: 2014-07-22 16:31:34 +0900<br>\nuser: nakajmg</p>\n\n<p>常に画面の1/3くらいを独占してて邪魔なので隠す。</p>\n\n<h3 id=\"0-0-1\" name=\"0-0-1\">\n<a class=\"anchor\" href=\"#0-0-1\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"表示切り替え\"> &gt; 表示切り替え</span></a>表示切り替え</h3>\n<div class=\"code-block\">\n<pre class=\"highlight plaintext\"><code>$('.cms-leftSidebar').toggle();\n</code></pre>\n</div>\n<h3 id=\"0-0-2\" name=\"0-0-2\">\n<a class=\"anchor\" href=\"#0-0-2\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"ブックマークレット用\"> &gt; ブックマークレット用</span></a>ブックマークレット用</h3>\n<div class=\"code-block\">\n<pre class=\"highlight plaintext\"><code>javascript:$('.cms-leftSidebar').toggle();\n</code></pre>\n</div>",
    "created_at": "2015-07-01T23:00:07+09:00",
    "message": "[skip notice] Imported from Qiita",
    "kind": "stock",
    "comments_count": 0,
    "tasks_count": 0,
    "done_tasks_count": 0,
    "url": "https://pxgrid.esa.io/posts/134",
    "updated_at": "2015-07-01T23:00:08+09:00",
    "tags": [
      "CMS"
    ],
    "category": "Imports/Qiita",
    "revision_number": 1,
    "created_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "updated_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "stargazers_count": 0,
    "watchers_count": 1,
    "star": false,
    "watch": true,
    "_uid": 1446574748064,
    "_modified_at": ""
  },
  {
    "number": 109,
    "name": "アウト",
    "full_name": "Imports/Qiita/DevToolsのEmulateでピンチイン/アウト",
    "wip": false,
    "body_md": "created_at: 2014-07-03 17:53:09 +0900\nuser: nakajmg\n\n`Emulate touch screen` にチェックを入れた状態で `shift` を押しながら画面をドラッグ。\n\n↑ドラッグでピンチアウト、↓ドラッグでピンチイン。\n\n![2014-07-03 17_50_13.gif](https://qiita-image-store.s3.amazonaws.com/778/17969/8eb142cc-7701-66a8-423d-c389d918657d.gif)\n\n",
    "body_html": "<p>created_at: 2014-07-03 17:53:09 +0900<br>\nuser: nakajmg</p>\n\n<p><code>Emulate touch screen</code> にチェックを入れた状態で <code>shift</code> を押しながら画面をドラッグ。</p>\n\n<p>↑ドラッグでピンチアウト、↓ドラッグでピンチイン。</p>\n\n<p><a href=\"https://qiita-image-store.s3.amazonaws.com/778/17969/8eb142cc-7701-66a8-423d-c389d918657d.gif\" target=\"_blank\"><img src=\"https://qiita-image-store.s3.amazonaws.com/778/17969/8eb142cc-7701-66a8-423d-c389d918657d.gif\" alt=\"2014-07-03 17_50_13.gif\"></a></p>\n",
    "created_at": "2015-07-01T22:58:21+09:00",
    "message": "[skip notice] Imported from Qiita",
    "kind": "stock",
    "comments_count": 0,
    "tasks_count": 0,
    "done_tasks_count": 0,
    "url": "https://pxgrid.esa.io/posts/109",
    "updated_at": "2015-07-01T22:58:21+09:00",
    "tags": [],
    "category": "Imports/Qiita/DevToolsのEmulateでピンチイン",
    "revision_number": 1,
    "created_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "updated_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "stargazers_count": 0,
    "watchers_count": 1,
    "star": false,
    "watch": true,
    "_uid": 1446574748065,
    "_modified_at": ""
  },
  {
    "number": 86,
    "name": "便利なショートカットキー集",
    "full_name": "Imports/Qiita/便利なショートカットキー集",
    "wip": false,
    "body_md": "created_at: 2014-06-20 18:07:35 +0900\nuser: nakajmg\n\nなんでもいいので知ってると便利そうなのを追加していきましょう。\n\n## Chrome, DevTools\n\n#### Cmd + Shift + c\n\n虫眼鏡アイコンをクリックした状態と同じになる。DevToolsが開いてない状態でも有効。\n\n\n## Mac\n\n#### Cmd + Shift + Ctrl + 4\n\nスクリーンショットとってクリップボードにコピーする。GitHubのIssueとかは直接これで撮った画像を Ctrl + v で貼り付けできるのでデスクトップが汚れない。\n\n##### Cmd + Shift + Ctrl + 4 してから Space\n\nカメラアイコンに代わり、スクリーンショット取りたいウィンドウをクリック。\n\n#### Cmd + Shift + 4\n\n任意の範囲のスクリーンショットをとり、ファイルに保存する。\n\nDropbox.appで設定しておくと、スクショがDropboxに保存されつつ、そのURLがクリップボードに入る。\n\n![スクリーンショット 2014-06-20 18.25.30.png](https://qiita-image-store.s3.amazonaws.com/778/29064/2726a754-79fd-a889-621e-a11253d8b606.png)\n\n##### Cmd + Shift + 4 してから Space\n\nカメラアイコンに代わり、スクリーンショット取りたいウィンドウをクリック。\n\n",
    "body_html": "<p>created_at: 2014-06-20 18:07:35 +0900<br>\nuser: nakajmg</p>\n\n<p>なんでもいいので知ってると便利そうなのを追加していきましょう。</p>\n\n<h2 id=\"0-1-0\" name=\"0-1-0\">\n<a class=\"anchor\" href=\"#0-1-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"Chrome, DevTools\"> &gt; Chrome, DevTools</span></a>Chrome, DevTools</h2>\n\n<h4>Cmd + Shift + c</h4>\n\n<p>虫眼鏡アイコンをクリックした状態と同じになる。DevToolsが開いてない状態でも有効。</p>\n\n<h2 id=\"0-2-0\" name=\"0-2-0\">\n<a class=\"anchor\" href=\"#0-2-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"Mac\"> &gt; Mac</span></a>Mac</h2>\n\n<h4>Cmd + Shift + Ctrl + 4</h4>\n\n<p>スクリーンショットとってクリップボードにコピーする。GitHubのIssueとかは直接これで撮った画像を Ctrl + v で貼り付けできるのでデスクトップが汚れない。</p>\n\n<h5>Cmd + Shift + Ctrl + 4 してから Space</h5>\n\n<p>カメラアイコンに代わり、スクリーンショット取りたいウィンドウをクリック。</p>\n\n<h4>Cmd + Shift + 4</h4>\n\n<p>任意の範囲のスクリーンショットをとり、ファイルに保存する。</p>\n\n<p>Dropbox.appで設定しておくと、スクショがDropboxに保存されつつ、そのURLがクリップボードに入る。</p>\n\n<p><a href=\"https://qiita-image-store.s3.amazonaws.com/778/29064/2726a754-79fd-a889-621e-a11253d8b606.png\" target=\"_blank\"><img src=\"https://qiita-image-store.s3.amazonaws.com/778/29064/2726a754-79fd-a889-621e-a11253d8b606.png\" alt=\"スクリーンショット 2014-06-20 18.25.30.png\"></a></p>\n\n<h5>Cmd + Shift + 4 してから Space</h5>\n\n<p>カメラアイコンに代わり、スクリーンショット取りたいウィンドウをクリック。</p>\n",
    "created_at": "2015-07-01T22:56:59+09:00",
    "message": "[skip notice] Imported from Qiita",
    "kind": "stock",
    "comments_count": 0,
    "tasks_count": 0,
    "done_tasks_count": 0,
    "url": "https://pxgrid.esa.io/posts/86",
    "updated_at": "2015-07-01T22:56:59+09:00",
    "tags": [],
    "category": "Imports/Qiita",
    "revision_number": 1,
    "created_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "updated_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "stargazers_count": 0,
    "watchers_count": 1,
    "star": false,
    "watch": true,
    "_uid": 1446574748066,
    "_modified_at": ""
  },
  {
    "number": 79,
    "name": "JSでCPUのコア数を確認する",
    "full_name": "Imports/Qiita/JSでCPUのコア数を確認する #JavaScript",
    "wip": false,
    "body_md": "created_at: 2014-06-17 23:36:54 +0900\nuser: nakajmg\n\nCanaryで。\n\n```\nnavigator.hardwareConcurrency\n```\n\n![スクリーンショット 2014-06-17 23.33.35.png](https://qiita-image-store.s3.amazonaws.com/778/17969/65107705-ea86-938f-3bc1-9dd89db1872e.png)\n\nworkerで処理させるときなんかの指標にするとヨサソウ？\n\n",
    "body_html": "<p>created_at: 2014-06-17 23:36:54 +0900<br>\nuser: nakajmg</p>\n\n<p>Canaryで。</p>\n<div class=\"code-block\">\n<pre class=\"highlight plaintext\"><code>navigator.hardwareConcurrency\n</code></pre>\n</div>\n<p><a href=\"https://qiita-image-store.s3.amazonaws.com/778/17969/65107705-ea86-938f-3bc1-9dd89db1872e.png\" target=\"_blank\"><img src=\"https://qiita-image-store.s3.amazonaws.com/778/17969/65107705-ea86-938f-3bc1-9dd89db1872e.png\" alt=\"スクリーンショット 2014-06-17 23.33.35.png\"></a></p>\n\n<p>workerで処理させるときなんかの指標にするとヨサソウ？</p>\n",
    "created_at": "2015-07-01T22:56:32+09:00",
    "message": "[skip notice] Imported from Qiita",
    "kind": "stock",
    "comments_count": 0,
    "tasks_count": 0,
    "done_tasks_count": 0,
    "url": "https://pxgrid.esa.io/posts/79",
    "updated_at": "2015-07-01T22:56:32+09:00",
    "tags": [
      "JavaScript"
    ],
    "category": "Imports/Qiita",
    "revision_number": 1,
    "created_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "updated_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "stargazers_count": 0,
    "watchers_count": 1,
    "star": false,
    "watch": true,
    "_uid": 1446574748068,
    "_modified_at": ""
  },
  {
    "number": 71,
    "name": "[CMS] 全てのパーツを削除する",
    "full_name": "Imports/Qiita/[CMS] 全てのパーツを削除する #CMS",
    "wip": false,
    "body_md": "created_at: 2014-06-12 23:38:26 +0900\nuser: nakajmg\n\nSlackに投稿したけど埋もれそうなので。\n\n```js\n(function() {\n  if (window.confirm('全てのパーツを削除します') === false) {\n    return;\n  }\n\n  // masterpageの部品を削除\n  var data = cms.co.masterPages.current.get('data');\n  ['main', 'sub', 'footer', 'header'].forEach(function(name) {\n    data[name].forEach(function(items, itemsIndex) {\n      for(var i=0,leng = items.length; i < leng; i++) {\n        data[name][itemsIndex].splice(0,1);\n        cms.co.masterPages.current.set('data', data, { silent: true });\n      }\n    });\n  });\n  cms.co.masterPages.current.save({ manual: true}).done(_resetReloader);\n\n  // pageの部品を削除\n  cms.co.pages.models.forEach(function(page) {\n    var data = page.get('data');\n    ['main', 'sub', 'footer', 'header'].forEach(function(name) {\n      data[name].forEach(function(items, itemsIndex) {\n        for(var i=0,leng = items.length; i < leng; i++) {\n          data[name][itemsIndex].splice(0,1);\n          page.set('data', data, { silent: true });\n        }\n      });\n    });\n    page.save({ manual: true }).done(_resetReloader);\n  });\n\n  // 全てのsaveが終わったらブラウザリロード\n  var _reloadCounter = 0;\n  var _pagesTotalCount = cms.co.pages.models.length + 1;\n  function _resetReloader() {\n    _reloadCounter++;\n    if( _reloadCounter === _pagesTotalCount) {\n      location.reload();\n    }\n  }\n})();\n```\n\n間違えて実行したとき悲しかったので`confirm`を入れた :pensive: \n\n",
    "body_html": "<p>created_at: 2014-06-12 23:38:26 +0900<br>\nuser: nakajmg</p>\n\n<p>Slackに投稿したけど埋もれそうなので。</p>\n<div class=\"code-block\">\n<pre class=\"highlight javascript\"><code><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nb\">window</span><span class=\"p\">.</span><span class=\"nx\">confirm</span><span class=\"p\">(</span><span class=\"s1\">'全てのパーツを削除します'</span><span class=\"p\">)</span> <span class=\"o\">===</span> <span class=\"kc\">false</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"k\">return</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n\n  <span class=\"c1\">// masterpageの部品を削除</span>\n  <span class=\"kd\">var</span> <span class=\"nx\">data</span> <span class=\"o\">=</span> <span class=\"nx\">cms</span><span class=\"p\">.</span><span class=\"nx\">co</span><span class=\"p\">.</span><span class=\"nx\">masterPages</span><span class=\"p\">.</span><span class=\"nx\">current</span><span class=\"p\">.</span><span class=\"nx\">get</span><span class=\"p\">(</span><span class=\"s1\">'data'</span><span class=\"p\">);</span>\n  <span class=\"p\">[</span><span class=\"s1\">'main'</span><span class=\"p\">,</span> <span class=\"s1\">'sub'</span><span class=\"p\">,</span> <span class=\"s1\">'footer'</span><span class=\"p\">,</span> <span class=\"s1\">'header'</span><span class=\"p\">].</span><span class=\"nx\">forEach</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">name</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"nx\">data</span><span class=\"p\">[</span><span class=\"nx\">name</span><span class=\"p\">].</span><span class=\"nx\">forEach</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">items</span><span class=\"p\">,</span> <span class=\"nx\">itemsIndex</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n      <span class=\"k\">for</span><span class=\"p\">(</span><span class=\"kd\">var</span> <span class=\"nx\">i</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"nx\">leng</span> <span class=\"o\">=</span> <span class=\"nx\">items</span><span class=\"p\">.</span><span class=\"nx\">length</span><span class=\"p\">;</span> <span class=\"nx\">i</span> <span class=\"o\">&lt;</span> <span class=\"nx\">leng</span><span class=\"p\">;</span> <span class=\"nx\">i</span><span class=\"o\">++</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"nx\">data</span><span class=\"p\">[</span><span class=\"nx\">name</span><span class=\"p\">][</span><span class=\"nx\">itemsIndex</span><span class=\"p\">].</span><span class=\"nx\">splice</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">);</span>\n        <span class=\"nx\">cms</span><span class=\"p\">.</span><span class=\"nx\">co</span><span class=\"p\">.</span><span class=\"nx\">masterPages</span><span class=\"p\">.</span><span class=\"nx\">current</span><span class=\"p\">.</span><span class=\"nx\">set</span><span class=\"p\">(</span><span class=\"s1\">'data'</span><span class=\"p\">,</span> <span class=\"nx\">data</span><span class=\"p\">,</span> <span class=\"p\">{</span> <span class=\"na\">silent</span><span class=\"p\">:</span> <span class=\"kc\">true</span> <span class=\"p\">});</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">});</span>\n  <span class=\"p\">});</span>\n  <span class=\"nx\">cms</span><span class=\"p\">.</span><span class=\"nx\">co</span><span class=\"p\">.</span><span class=\"nx\">masterPages</span><span class=\"p\">.</span><span class=\"nx\">current</span><span class=\"p\">.</span><span class=\"nx\">save</span><span class=\"p\">({</span> <span class=\"na\">manual</span><span class=\"p\">:</span> <span class=\"kc\">true</span><span class=\"p\">}).</span><span class=\"nx\">done</span><span class=\"p\">(</span><span class=\"nx\">_resetReloader</span><span class=\"p\">);</span>\n\n  <span class=\"c1\">// pageの部品を削除</span>\n  <span class=\"nx\">cms</span><span class=\"p\">.</span><span class=\"nx\">co</span><span class=\"p\">.</span><span class=\"nx\">pages</span><span class=\"p\">.</span><span class=\"nx\">models</span><span class=\"p\">.</span><span class=\"nx\">forEach</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">page</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"kd\">var</span> <span class=\"nx\">data</span> <span class=\"o\">=</span> <span class=\"nx\">page</span><span class=\"p\">.</span><span class=\"nx\">get</span><span class=\"p\">(</span><span class=\"s1\">'data'</span><span class=\"p\">);</span>\n    <span class=\"p\">[</span><span class=\"s1\">'main'</span><span class=\"p\">,</span> <span class=\"s1\">'sub'</span><span class=\"p\">,</span> <span class=\"s1\">'footer'</span><span class=\"p\">,</span> <span class=\"s1\">'header'</span><span class=\"p\">].</span><span class=\"nx\">forEach</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">name</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n      <span class=\"nx\">data</span><span class=\"p\">[</span><span class=\"nx\">name</span><span class=\"p\">].</span><span class=\"nx\">forEach</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">items</span><span class=\"p\">,</span> <span class=\"nx\">itemsIndex</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"k\">for</span><span class=\"p\">(</span><span class=\"kd\">var</span> <span class=\"nx\">i</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"nx\">leng</span> <span class=\"o\">=</span> <span class=\"nx\">items</span><span class=\"p\">.</span><span class=\"nx\">length</span><span class=\"p\">;</span> <span class=\"nx\">i</span> <span class=\"o\">&lt;</span> <span class=\"nx\">leng</span><span class=\"p\">;</span> <span class=\"nx\">i</span><span class=\"o\">++</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n          <span class=\"nx\">data</span><span class=\"p\">[</span><span class=\"nx\">name</span><span class=\"p\">][</span><span class=\"nx\">itemsIndex</span><span class=\"p\">].</span><span class=\"nx\">splice</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">);</span>\n          <span class=\"nx\">page</span><span class=\"p\">.</span><span class=\"nx\">set</span><span class=\"p\">(</span><span class=\"s1\">'data'</span><span class=\"p\">,</span> <span class=\"nx\">data</span><span class=\"p\">,</span> <span class=\"p\">{</span> <span class=\"na\">silent</span><span class=\"p\">:</span> <span class=\"kc\">true</span> <span class=\"p\">});</span>\n        <span class=\"p\">}</span>\n      <span class=\"p\">});</span>\n    <span class=\"p\">});</span>\n    <span class=\"nx\">page</span><span class=\"p\">.</span><span class=\"nx\">save</span><span class=\"p\">({</span> <span class=\"na\">manual</span><span class=\"p\">:</span> <span class=\"kc\">true</span> <span class=\"p\">}).</span><span class=\"nx\">done</span><span class=\"p\">(</span><span class=\"nx\">_resetReloader</span><span class=\"p\">);</span>\n  <span class=\"p\">});</span>\n\n  <span class=\"c1\">// 全てのsaveが終わったらブラウザリロード</span>\n  <span class=\"kd\">var</span> <span class=\"nx\">_reloadCounter</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n  <span class=\"kd\">var</span> <span class=\"nx\">_pagesTotalCount</span> <span class=\"o\">=</span> <span class=\"nx\">cms</span><span class=\"p\">.</span><span class=\"nx\">co</span><span class=\"p\">.</span><span class=\"nx\">pages</span><span class=\"p\">.</span><span class=\"nx\">models</span><span class=\"p\">.</span><span class=\"nx\">length</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">;</span>\n  <span class=\"kd\">function</span> <span class=\"nx\">_resetReloader</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"nx\">_reloadCounter</span><span class=\"o\">++</span><span class=\"p\">;</span>\n    <span class=\"k\">if</span><span class=\"p\">(</span> <span class=\"nx\">_reloadCounter</span> <span class=\"o\">===</span> <span class=\"nx\">_pagesTotalCount</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n      <span class=\"nx\">location</span><span class=\"p\">.</span><span class=\"nx\">reload</span><span class=\"p\">();</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">})();</span>\n</code></pre>\n</div>\n<p>間違えて実行したとき悲しかったので<code>confirm</code>を入れた :pensive: </p>\n",
    "created_at": "2015-07-01T22:41:15+09:00",
    "message": "[skip notice] Imported from Qiita",
    "kind": "stock",
    "comments_count": 0,
    "tasks_count": 0,
    "done_tasks_count": 0,
    "url": "https://pxgrid.esa.io/posts/71",
    "updated_at": "2015-07-01T22:41:15+09:00",
    "tags": [
      "CMS"
    ],
    "category": "Imports/Qiita",
    "revision_number": 1,
    "created_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "updated_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "stargazers_count": 0,
    "watchers_count": 1,
    "star": false,
    "watch": true,
    "_uid": 1446574748069,
    "_modified_at": ""
  },
  {
    "number": 65,
    "name": "画面操作をgifにする",
    "full_name": "Imports/Qiita/画面操作をgifにする",
    "wip": false,
    "body_md": "created_at: 2014-06-12 00:38:39 +0900\nuser: nakajmg\n\n[QuickTimeの新規画面収録](http://hamachan.info/mac/Lion/quick.html)で撮ったやつを\n[GIF Brewey](https://itunes.apple.com/jp/app/gif-brewery/id435989461?mt=12) でgifにしてます。\n\nGIF Breweyは有料だけど開始位置と終了位置決めれたり原色したりdelay入れれたりいろいろ編集できて便利。\n\nお金かけたくない人は編集できないけど[LICEcap](http://www.moongift.jp/2013/09/20130913-3/)ての使うとよいかも。撮る範囲決めてRecord押すだけでgifができます。\n\n",
    "body_html": "<p>created_at: 2014-06-12 00:38:39 +0900<br>\nuser: nakajmg</p>\n\n<p><a target=\"_blank\" href=\"http://hamachan.info/mac/Lion/quick.html\">QuickTimeの新規画面収録</a>で撮ったやつを<br>\n<a target=\"_blank\" href=\"https://itunes.apple.com/jp/app/gif-brewery/id435989461?mt=12\">GIF Brewey</a> でgifにしてます。</p>\n\n<p>GIF Breweyは有料だけど開始位置と終了位置決めれたり原色したりdelay入れれたりいろいろ編集できて便利。</p>\n\n<p>お金かけたくない人は編集できないけど<a target=\"_blank\" href=\"http://www.moongift.jp/2013/09/20130913-3/\">LICEcap</a>ての使うとよいかも。撮る範囲決めてRecord押すだけでgifができます。</p>\n",
    "created_at": "2015-07-01T22:41:05+09:00",
    "message": "[skip notice] Imported from Qiita",
    "kind": "stock",
    "comments_count": 0,
    "tasks_count": 0,
    "done_tasks_count": 0,
    "url": "https://pxgrid.esa.io/posts/65",
    "updated_at": "2015-07-01T22:41:05+09:00",
    "tags": [],
    "category": "Imports/Qiita",
    "revision_number": 1,
    "created_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "updated_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "stargazers_count": 0,
    "watchers_count": 1,
    "star": false,
    "watch": true,
    "_uid": 1446574748070,
    "_modified_at": ""
  },
  {
    "number": 57,
    "name": "接続タイプの判定と、接続切り替え時のイベント",
    "full_name": "Imports/Qiita/接続タイプの判定と、接続切り替え時のイベント #JavaScript",
    "wip": false,
    "body_md": "created_at: 2014-06-10 18:21:11 +0900\nuser: nakajmg\n\n\n__Canary__ で以下のflagを有効に。\n\n\n> 試験運用版のウェブ プラットフォームの機能を有効にする。 Mac, Windows, Linux, Chrome OS, Android\n> 開発中の試験運用版ウェブ プラットフォームの機能を有効にします。 #enable-experimental-web-platform-features\n\n接続タイプは`navigator.connection.type`で取れる。\n\n`type`の値は\n\n* Bluetooth\n* Ethernet\n* Wifi\n* Cellular\n* Other\n* None\n\n\n接続切り替え時のイベントには\n\n```js\nnavigator.connection.addEventListener('typechange`, handler);\n```\nもしくは\n\n```js\nnavigator.connection.ontypechange = handler;\n```\n\nでハンドラを設定できる。\n\n下記のコードを実行後、WiFiを切ったりつけたりすると`alert`が実行されて`type`が変化するのを確認できる。\n\n```js\nalert(navigator.connection.type);\nnavigator.connection.ontypechange = connectionChange;\n\nfunction connectionChange(e) {\n  alert(e.target.type);\n}\n```\n\nモバイルの通信環境チェックして画像だしわけるとか、オフラインになったら〜するみたいなのに使うのかなー。\n\n---\n\n参考\n\n* http://w3c.github.io/netinfo/\n* http://w3c-webmob.github.io/netinfo-usecases/\n* https://docs.google.com/document/d/1LTk9uVMGi4kurzcF5ellsAJReTF31fFJMHrQwSVtBjc/edit?pli=1\n\n",
    "body_html": "<p>created_at: 2014-06-10 18:21:11 +0900<br>\nuser: nakajmg</p>\n\n<p><strong>Canary</strong> で以下のflagを有効に。</p>\n\n<blockquote>\n<p>試験運用版のウェブ プラットフォームの機能を有効にする。 Mac, Windows, Linux, Chrome OS, Android<br>\n開発中の試験運用版ウェブ プラットフォームの機能を有効にします。 #enable-experimental-web-platform-features</p>\n</blockquote>\n\n<p>接続タイプは<code>navigator.connection.type</code>で取れる。</p>\n\n<p><code>type</code>の値は</p>\n\n<ul>\n<li>Bluetooth</li>\n<li>Ethernet</li>\n<li>Wifi</li>\n<li>Cellular</li>\n<li>Other</li>\n<li>None</li>\n</ul>\n\n<p>接続切り替え時のイベントには</p>\n<div class=\"code-block\">\n<pre class=\"highlight javascript\"><code><span class=\"nx\">navigator</span><span class=\"p\">.</span><span class=\"nx\">connection</span><span class=\"p\">.</span><span class=\"nx\">addEventListener</span><span class=\"p\">(</span><span class=\"err\">'</span><span class=\"nx\">typechange</span><span class=\"err\">`</span><span class=\"p\">,</span> <span class=\"nx\">handler</span><span class=\"p\">);</span>\n</code></pre>\n</div>\n<p>もしくは</p>\n<div class=\"code-block\">\n<pre class=\"highlight javascript\"><code><span class=\"nx\">navigator</span><span class=\"p\">.</span><span class=\"nx\">connection</span><span class=\"p\">.</span><span class=\"nx\">ontypechange</span> <span class=\"o\">=</span> <span class=\"nx\">handler</span><span class=\"p\">;</span>\n</code></pre>\n</div>\n<p>でハンドラを設定できる。</p>\n\n<p>下記のコードを実行後、WiFiを切ったりつけたりすると<code>alert</code>が実行されて<code>type</code>が変化するのを確認できる。</p>\n<div class=\"code-block\">\n<pre class=\"highlight javascript\"><code><span class=\"nx\">alert</span><span class=\"p\">(</span><span class=\"nx\">navigator</span><span class=\"p\">.</span><span class=\"nx\">connection</span><span class=\"p\">.</span><span class=\"nx\">type</span><span class=\"p\">);</span>\n<span class=\"nx\">navigator</span><span class=\"p\">.</span><span class=\"nx\">connection</span><span class=\"p\">.</span><span class=\"nx\">ontypechange</span> <span class=\"o\">=</span> <span class=\"nx\">connectionChange</span><span class=\"p\">;</span>\n\n<span class=\"kd\">function</span> <span class=\"nx\">connectionChange</span><span class=\"p\">(</span><span class=\"nx\">e</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"nx\">alert</span><span class=\"p\">(</span><span class=\"nx\">e</span><span class=\"p\">.</span><span class=\"nx\">target</span><span class=\"p\">.</span><span class=\"nx\">type</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre>\n</div>\n<p>モバイルの通信環境チェックして画像だしわけるとか、オフラインになったら〜するみたいなのに使うのかなー。</p>\n\n<hr>\n\n<p>参考</p>\n\n<ul>\n<li><a target=\"_blank\" href=\"http://w3c.github.io/netinfo/\">http://w3c.github.io/netinfo/</a></li>\n<li><a target=\"_blank\" href=\"http://w3c-webmob.github.io/netinfo-usecases/\">http://w3c-webmob.github.io/netinfo-usecases/</a></li>\n<li><a target=\"_blank\" href=\"https://docs.google.com/document/d/1LTk9uVMGi4kurzcF5ellsAJReTF31fFJMHrQwSVtBjc/edit?pli=1\">https://docs.google.com/document/d/1LTk9uVMGi4kurzcF5ellsAJReTF31fFJMHrQwSVtBjc/edit?pli=1</a></li>\n</ul>\n",
    "created_at": "2015-07-01T22:40:53+09:00",
    "message": "[skip notice] Imported from Qiita",
    "kind": "stock",
    "comments_count": 0,
    "tasks_count": 0,
    "done_tasks_count": 0,
    "url": "https://pxgrid.esa.io/posts/57",
    "updated_at": "2015-07-01T22:40:54+09:00",
    "tags": [
      "JavaScript"
    ],
    "category": "Imports/Qiita",
    "revision_number": 1,
    "created_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "updated_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "stargazers_count": 0,
    "watchers_count": 1,
    "star": false,
    "watch": true,
    "_uid": 1446574748071,
    "_modified_at": ""
  },
  {
    "number": 56,
    "name": "DevToolsで目的のCSSプロパティや値を素早く探す",
    "full_name": "Imports/Qiita/DevToolsで目的のCSSプロパティや値を素早く探す #css",
    "wip": false,
    "body_md": "created_at: 2014-06-10 17:02:12 +0900\nuser: nakajmg\n\nElementsパネルのStylesタブに`Find in Styles`って書いてあるところ。ここに入力していくとインクリメンタルサーチ的なのができる。 __プロパティ名と値の両方から絞り込める。__\n\nスタイル継承しまくっててどれ変えたらいいの状態のときとかに便利。\n\n![2014-06-10 16_54_40.gif](https://qiita-image-store.s3.amazonaws.com/778/17969/1cf6805d-5283-c162-7ffe-0376a2472c71.gif)\n\n擬似要素確認したいときに`content`で絞り込んだり、`webkit`とかプレフィックスで絞り込むのもかなりイケてそう。\n\nDevToolsは「これいつからあったの？」系の機能が多すぎ！\n\n",
    "body_html": "<p>created_at: 2014-06-10 17:02:12 +0900<br>\nuser: nakajmg</p>\n\n<p>ElementsパネルのStylesタブに<code>Find in Styles</code>って書いてあるところ。ここに入力していくとインクリメンタルサーチ的なのができる。 <strong>プロパティ名と値の両方から絞り込める。</strong></p>\n\n<p>スタイル継承しまくっててどれ変えたらいいの状態のときとかに便利。</p>\n\n<p><a href=\"https://qiita-image-store.s3.amazonaws.com/778/17969/1cf6805d-5283-c162-7ffe-0376a2472c71.gif\" target=\"_blank\"><img src=\"https://qiita-image-store.s3.amazonaws.com/778/17969/1cf6805d-5283-c162-7ffe-0376a2472c71.gif\" alt=\"2014-06-10 16_54_40.gif\"></a></p>\n\n<p>擬似要素確認したいときに<code>content</code>で絞り込んだり、<code>webkit</code>とかプレフィックスで絞り込むのもかなりイケてそう。</p>\n\n<p>DevToolsは「これいつからあったの？」系の機能が多すぎ！</p>\n",
    "created_at": "2015-07-01T22:40:52+09:00",
    "message": "[skip notice] Imported from Qiita",
    "kind": "stock",
    "comments_count": 0,
    "tasks_count": 0,
    "done_tasks_count": 0,
    "url": "https://pxgrid.esa.io/posts/56",
    "updated_at": "2015-07-01T22:40:52+09:00",
    "tags": [
      "css"
    ],
    "category": "Imports/Qiita",
    "revision_number": 1,
    "created_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "updated_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "stargazers_count": 0,
    "watchers_count": 1,
    "star": false,
    "watch": true,
    "_uid": 1446574748072,
    "_modified_at": ""
  },
  {
    "number": 55,
    "name": "要素に貼られてるイベントハンドラの行に飛ぶ",
    "full_name": "Imports/Qiita/要素に貼られてるイベントハンドラの行に飛ぶ #JavaScript",
    "wip": false,
    "body_md": "created_at: 2014-06-10 16:31:52 +0900\nuser: nakajmg\n\n要素にイベントが貼られてるとElementsパネルの`Event Listeners`のタブで`click`とか貼られてるイベントが見れる。\n\nそこから選択して`handler`のところのfunctionの上で右クリック。`Show Function Definition`を選ぶとそのイベントが発生したときに実行する関数に飛べる。\n\n\n例としてこんなHTMLとJS。\n\n```html\n<body>\n  <div>うぇい</div>\n  <button id=\"btn1\">ぼたん</button>\n  <script src=\"main.js\"></script>\n</body>\n```\n\n```js:main.js\n(function() {\n  document.addEventListener('DOMContentLoaded', function() {\n    document.querySelector('#btn1').addEventListener('click', clickFunc);\n  });\n  clickFunc = function(e) {\n    console.log('クリックされたぁあああ');\n  }\n})();\n```\n\n![2014-06-10 16_20_06.gif](https://qiita-image-store.s3.amazonaws.com/778/17969/d6af0cf9-1afb-af13-a787-971802958f70.gif)\n\nイベント貼ってるとこ探して実行する関数見つけて…みたいなのを省いて目的の箇所に一発で飛べる=効率アップ！\n\n",
    "body_html": "<p>created_at: 2014-06-10 16:31:52 +0900<br>\nuser: nakajmg</p>\n\n<p>要素にイベントが貼られてるとElementsパネルの<code>Event Listeners</code>のタブで<code>click</code>とか貼られてるイベントが見れる。</p>\n\n<p>そこから選択して<code>handler</code>のところのfunctionの上で右クリック。<code>Show Function Definition</code>を選ぶとそのイベントが発生したときに実行する関数に飛べる。</p>\n\n<p>例としてこんなHTMLとJS。</p>\n<div class=\"code-block\">\n<pre class=\"highlight html\"><code><span class=\"nt\">&lt;body&gt;</span>\n  <span class=\"nt\">&lt;div&gt;</span>うぇい<span class=\"nt\">&lt;/div&gt;</span>\n  <span class=\"nt\">&lt;button</span> <span class=\"na\">id=</span><span class=\"s\">\"btn1\"</span><span class=\"nt\">&gt;</span>ぼたん<span class=\"nt\">&lt;/button&gt;</span>\n  <span class=\"nt\">&lt;script </span><span class=\"na\">src=</span><span class=\"s\">\"main.js\"</span><span class=\"nt\">&gt;&lt;/script&gt;</span>\n<span class=\"nt\">&lt;/body&gt;</span>\n</code></pre>\n</div>\n<div class=\"code-block\">\n<div class=\"code-filename\">\n<i class=\"fa fa-file-code-o\"></i>main.js</div>\n<pre class=\"highlight javascript\"><code><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">addEventListener</span><span class=\"p\">(</span><span class=\"s1\">'DOMContentLoaded'</span><span class=\"p\">,</span> <span class=\"kd\">function</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">querySelector</span><span class=\"p\">(</span><span class=\"s1\">'#btn1'</span><span class=\"p\">).</span><span class=\"nx\">addEventListener</span><span class=\"p\">(</span><span class=\"s1\">'click'</span><span class=\"p\">,</span> <span class=\"nx\">clickFunc</span><span class=\"p\">);</span>\n  <span class=\"p\">});</span>\n  <span class=\"nx\">clickFunc</span> <span class=\"o\">=</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">e</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s1\">'クリックされたぁあああ'</span><span class=\"p\">);</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">})();</span>\n</code></pre>\n</div>\n<p><a href=\"https://qiita-image-store.s3.amazonaws.com/778/17969/d6af0cf9-1afb-af13-a787-971802958f70.gif\" target=\"_blank\"><img src=\"https://qiita-image-store.s3.amazonaws.com/778/17969/d6af0cf9-1afb-af13-a787-971802958f70.gif\" alt=\"2014-06-10 16_20_06.gif\"></a></p>\n\n<p>イベント貼ってるとこ探して実行する関数見つけて…みたいなのを省いて目的の箇所に一発で飛べる=効率アップ！</p>\n",
    "created_at": "2015-07-01T22:40:51+09:00",
    "message": "[skip notice] Imported from Qiita",
    "kind": "stock",
    "comments_count": 0,
    "tasks_count": 0,
    "done_tasks_count": 0,
    "url": "https://pxgrid.esa.io/posts/55",
    "updated_at": "2015-07-01T22:40:51+09:00",
    "tags": [
      "JavaScript"
    ],
    "category": "Imports/Qiita",
    "revision_number": 1,
    "created_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "updated_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "stargazers_count": 0,
    "watchers_count": 1,
    "star": false,
    "watch": true,
    "_uid": 1446574748073,
    "_modified_at": ""
  },
  {
    "number": 51,
    "name": "DevToolsでpaddingとかmarginとか変更する方法",
    "full_name": "Imports/Qiita/DevToolsでpaddingとかmarginとか変更する方法 #JavaScript",
    "wip": false,
    "body_md": "created_at: 2014-06-10 14:08:38 +0900\nuser: nakajmg\n\nいつからできるようになったかわかんないけど、Stylesの一番下にあるやつで直接変更できた\n\n![2014-06-10 13_51_56.gif](https://qiita-image-store.s3.amazonaws.com/778/17969/36c73e36-2d59-4ada-4115-dacd6a77e8cc.gif)\n\nwidthとかmargin-leftとかタイプしなくてすむの良い\n\n",
    "body_html": "<p>created_at: 2014-06-10 14:08:38 +0900<br>\nuser: nakajmg</p>\n\n<p>いつからできるようになったかわかんないけど、Stylesの一番下にあるやつで直接変更できた</p>\n\n<p><a href=\"https://qiita-image-store.s3.amazonaws.com/778/17969/36c73e36-2d59-4ada-4115-dacd6a77e8cc.gif\" target=\"_blank\"><img src=\"https://qiita-image-store.s3.amazonaws.com/778/17969/36c73e36-2d59-4ada-4115-dacd6a77e8cc.gif\" alt=\"2014-06-10 13_51_56.gif\"></a></p>\n\n<p>widthとかmargin-leftとかタイプしなくてすむの良い</p>\n",
    "created_at": "2015-07-01T22:40:45+09:00",
    "message": "[skip notice] Imported from Qiita",
    "kind": "stock",
    "comments_count": 0,
    "tasks_count": 0,
    "done_tasks_count": 0,
    "url": "https://pxgrid.esa.io/posts/51",
    "updated_at": "2015-07-01T22:40:45+09:00",
    "tags": [
      "JavaScript"
    ],
    "category": "Imports/Qiita",
    "revision_number": 1,
    "created_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "updated_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "stargazers_count": 0,
    "watchers_count": 1,
    "star": false,
    "watch": true,
    "_uid": 1446574748074,
    "_modified_at": ""
  },
  {
    "number": 44,
    "name": "デバッグ中にコンソールにタイムスタンプを表示する",
    "full_name": "Imports/Qiita/デバッグ中にコンソールにタイムスタンプを表示する #JavaScript",
    "wip": false,
    "body_md": "created_at: 2014-06-06 15:15:07 +0900\nuser: nakajmg\n\nデバッグ的な操作の最中、同じメッセージのログを何回も流すときとかに。\n\n「今コンソールでたっけ」とか「今やったやつのログどれだ」みたいなのが減る。\n\n```js\nconsole.log( (new Date()).getHours() +':'+ (new Date()).getMinutes() + ':' + (new Date()).getSeconds() )\n```\n\nこれをDevToolsの`Add Conditional Breakpoint`で追加する。\n\n![スクリーンショット 2014-06-06 15.09.42.png](https://qiita-image-store.s3.amazonaws.com/778/17969/fb0b6cf4-44be-8705-46e1-c58bec47f3af.png)\n\n![スクリーンショット 2014-06-06 15.07.48.png](https://qiita-image-store.s3.amazonaws.com/778/17969/3ccca962-6825-2302-c589-f6cbb9d667fc.png)\n\n結果こんな感じ\n\n![スクリーンショット 2014-06-06 15.11.58.png](https://qiita-image-store.s3.amazonaws.com/778/17969/bfd9e8cf-f439-4357-cc96-5d3adc20e3d1.png)\n\n目立たせたかったら`log`を`warn`か`error`にする。\n\n",
    "body_html": "<p>created_at: 2014-06-06 15:15:07 +0900<br>\nuser: nakajmg</p>\n\n<p>デバッグ的な操作の最中、同じメッセージのログを何回も流すときとかに。</p>\n\n<p>「今コンソールでたっけ」とか「今やったやつのログどれだ」みたいなのが減る。</p>\n<div class=\"code-block\">\n<pre class=\"highlight javascript\"><code><span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span> <span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"nb\">Date</span><span class=\"p\">()).</span><span class=\"nx\">getHours</span><span class=\"p\">()</span> <span class=\"o\">+</span><span class=\"s1\">':'</span><span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"nb\">Date</span><span class=\"p\">()).</span><span class=\"nx\">getMinutes</span><span class=\"p\">()</span> <span class=\"o\">+</span> <span class=\"s1\">':'</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"nb\">Date</span><span class=\"p\">()).</span><span class=\"nx\">getSeconds</span><span class=\"p\">()</span> <span class=\"p\">)</span>\n</code></pre>\n</div>\n<p>これをDevToolsの<code>Add Conditional Breakpoint</code>で追加する。</p>\n\n<p><a href=\"https://qiita-image-store.s3.amazonaws.com/778/17969/fb0b6cf4-44be-8705-46e1-c58bec47f3af.png\" target=\"_blank\"><img src=\"https://qiita-image-store.s3.amazonaws.com/778/17969/fb0b6cf4-44be-8705-46e1-c58bec47f3af.png\" alt=\"スクリーンショット 2014-06-06 15.09.42.png\"></a></p>\n\n<p><a href=\"https://qiita-image-store.s3.amazonaws.com/778/17969/3ccca962-6825-2302-c589-f6cbb9d667fc.png\" target=\"_blank\"><img src=\"https://qiita-image-store.s3.amazonaws.com/778/17969/3ccca962-6825-2302-c589-f6cbb9d667fc.png\" alt=\"スクリーンショット 2014-06-06 15.07.48.png\"></a></p>\n\n<p>結果こんな感じ</p>\n\n<p><a href=\"https://qiita-image-store.s3.amazonaws.com/778/17969/bfd9e8cf-f439-4357-cc96-5d3adc20e3d1.png\" target=\"_blank\"><img src=\"https://qiita-image-store.s3.amazonaws.com/778/17969/bfd9e8cf-f439-4357-cc96-5d3adc20e3d1.png\" alt=\"スクリーンショット 2014-06-06 15.11.58.png\"></a></p>\n\n<p>目立たせたかったら<code>log</code>を<code>warn</code>か<code>error</code>にする。</p>\n",
    "created_at": "2015-07-01T22:40:35+09:00",
    "message": "[skip notice] Imported from Qiita",
    "kind": "stock",
    "comments_count": 0,
    "tasks_count": 0,
    "done_tasks_count": 0,
    "url": "https://pxgrid.esa.io/posts/44",
    "updated_at": "2015-07-01T22:40:35+09:00",
    "tags": [
      "JavaScript"
    ],
    "category": "Imports/Qiita",
    "revision_number": 1,
    "created_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "updated_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "stargazers_count": 0,
    "watchers_count": 1,
    "star": false,
    "watch": true,
    "_uid": 1446574748075,
    "_modified_at": ""
  },
  {
    "number": 43,
    "name": "[CMS] デバッグ中重いからローディングアイコンを消す",
    "full_name": "Imports/Qiita/[CMS] デバッグ中重いからローディングアイコンを消す #CMS",
    "wip": false,
    "body_md": "created_at: 2014-06-06 14:38:08 +0900\nuser: nakajmg\n\n```js\n$('.cms-throbber').hide();\n```\n\nブレークポイントで止めた時にローディングアイコンが回ってる状態だとめちゃCPU使ってファンが回り出すので非表示にする。\n\n`hide`だと次のセーブ時にまた表示されるから邪魔だったらずっと消しておく。\n\n```js\n$('.cms-throbber').css('cssText', 'display: none !important;');\n```\n\nDevToolsかAlfredのスニペットに登録すると便利。\n\n\n",
    "body_html": "<p>created_at: 2014-06-06 14:38:08 +0900<br>\nuser: nakajmg</p>\n<div class=\"code-block\">\n<pre class=\"highlight javascript\"><code><span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"s1\">'.cms-throbber'</span><span class=\"p\">).</span><span class=\"nx\">hide</span><span class=\"p\">();</span>\n</code></pre>\n</div>\n<p>ブレークポイントで止めた時にローディングアイコンが回ってる状態だとめちゃCPU使ってファンが回り出すので非表示にする。</p>\n\n<p><code>hide</code>だと次のセーブ時にまた表示されるから邪魔だったらずっと消しておく。</p>\n<div class=\"code-block\">\n<pre class=\"highlight javascript\"><code><span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"s1\">'.cms-throbber'</span><span class=\"p\">).</span><span class=\"nx\">css</span><span class=\"p\">(</span><span class=\"s1\">'cssText'</span><span class=\"p\">,</span> <span class=\"s1\">'display: none !important;'</span><span class=\"p\">);</span>\n</code></pre>\n</div>\n<p>DevToolsかAlfredのスニペットに登録すると便利。</p>\n",
    "created_at": "2015-07-01T22:40:33+09:00",
    "message": "[skip notice] Imported from Qiita",
    "kind": "stock",
    "comments_count": 0,
    "tasks_count": 0,
    "done_tasks_count": 0,
    "url": "https://pxgrid.esa.io/posts/43",
    "updated_at": "2015-07-01T22:40:33+09:00",
    "tags": [
      "CMS"
    ],
    "category": "Imports/Qiita",
    "revision_number": 1,
    "created_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "updated_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "stargazers_count": 0,
    "watchers_count": 1,
    "star": false,
    "watch": true,
    "_uid": 1446574748076,
    "_modified_at": ""
  },
  {
    "number": 42,
    "name": "html5jパフォーマンス部",
    "full_name": "Imports/Qiita/html5jパフォーマンス部 #2に参加してきた #勉強会",
    "wip": false,
    "body_md": "created_at: 2014-06-06 00:43:41 +0900\nuser: nakajmg\n\n\nhttp://atnd.org/events/50870\n\n\n### セッション\n* Session 1.【統計学】品質管理と統計学 ― IT業界へどうつなぐ？\n* Session 2.【ソフトウェア工学】ソフトウェア工学の基礎を学ぶ\n\nコードの話はなし。品質管理がパフォーマンスにつながるという趣旨。\n\nへーとかほーとか思ったことをメモり。\n\n## パフォーマンスとは！\n* 部分最適じゃなく全体最適をするもの\n* 表示が早いだけがパフォーマンスではない\n* 一箇所だけを早くしたら他の部分にその影響が出る\n\t* フロントを高速化したらバックエンドがついてこれなくて結局戻した、という話も\n\t* アクセス増えちゃってどかーんみたいな\n* パフォーマンスとは全体最適である！\n\n## ヒヤリハット(危険予知)の法則\n* ヒヤッとしたときは原因を特定してつぶす\n* 良い物につながる\n\n## ばらつきを科学する\nデータ計測とかに適用出来る話\n\n* 目標とする数値を決める\n* 許容する範囲を決める\n* 範囲から外れたデータは原因をさぐれ\n* 内部要因と外部要因に切り分ける\n\t* 内部要因は自分がコントロールできるもの\n\t* 外部要因はコントロールできない\n* ばらつきの種類は主に2つ\n \t* 偶然のもの\n\t* メンテナンスなどで解決できるもの\n\n### 問題を特定して解決する\n* ブレインストーミングする\n* 要因をグループ分けして考える\n* コントロールできる要因を特定する\n* 重要な問題から解決していく\n\t* コントロールできないものが残る\n\n\n## 次回がおもしろそう\n\n「USPを特定してコンテンツを削る」的なテーマ。\n\n> USPとは、自社（自製品）のみが持つ独特の強みのこと。\nユニークで顧客に対して売り込みが効く主張、提案がUSPであり、他社との差別化が主張できる強みのこと。\nマーケティングにおいても、ブランド構築においてもUSPを持つことは極めて重要とされ、マーケティング戦略の立案にあたっては、USPすなわち他社には無い独特の提案を見つけることが重要とされる。\n\n* モバイルではページの重さを100kb以下にしないと5秒で表示できない。データが示している事実\n* でもどこの会社もわかってても100kb以下にできない\n* 「他のサービスにはこういう機能があるから」「他社がこういうデザインだから」とかが理由\n* そうなるのはUSPが特定できていないから\n* USPがわかればコンテンツ削れるぞ → ハイパフォーマンス！\n\nてな感じらしいです。第4回はモバイル通信の仕組みとかそっち系。\n\nパフォーマンス部のサイトもおもしろい\nhttp://perf.html5j.org/\n\n\n",
    "body_html": "<p>created_at: 2014-06-06 00:43:41 +0900<br>\nuser: nakajmg</p>\n\n<p><a target=\"_blank\" href=\"http://atnd.org/events/50870\">http://atnd.org/events/50870</a></p>\n\n<h3 id=\"0-0-1\" name=\"0-0-1\">\n<a class=\"anchor\" href=\"#0-0-1\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"セッション\"> &gt; セッション</span></a>セッション</h3>\n\n<ul>\n<li>Session 1.【統計学】品質管理と統計学 ― IT業界へどうつなぐ？</li>\n<li>Session 2.【ソフトウェア工学】ソフトウェア工学の基礎を学ぶ</li>\n</ul>\n\n<p>コードの話はなし。品質管理がパフォーマンスにつながるという趣旨。</p>\n\n<p>へーとかほーとか思ったことをメモり。</p>\n\n<h2 id=\"0-1-0\" name=\"0-1-0\">\n<a class=\"anchor\" href=\"#0-1-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"パフォーマンスとは！\"> &gt; パフォーマンスとは！</span></a>パフォーマンスとは！</h2>\n\n<ul>\n<li>部分最適じゃなく全体最適をするもの</li>\n<li>表示が早いだけがパフォーマンスではない</li>\n<li>一箇所だけを早くしたら他の部分にその影響が出る\n\n<ul>\n<li>フロントを高速化したらバックエンドがついてこれなくて結局戻した、という話も</li>\n<li>アクセス増えちゃってどかーんみたいな</li>\n</ul>\n</li>\n<li>パフォーマンスとは全体最適である！</li>\n</ul>\n\n<h2 id=\"0-2-0\" name=\"0-2-0\">\n<a class=\"anchor\" href=\"#0-2-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"ヒヤリハット(危険予知)の法則\"> &gt; ヒヤリハット(危険予知)の法則</span></a>ヒヤリハット(危険予知)の法則</h2>\n\n<ul>\n<li>ヒヤッとしたときは原因を特定してつぶす</li>\n<li>良い物につながる</li>\n</ul>\n\n<h2 id=\"0-3-0\" name=\"0-3-0\">\n<a class=\"anchor\" href=\"#0-3-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"ばらつきを科学する\"> &gt; ばらつきを科学する</span></a>ばらつきを科学する</h2>\n\n<p>データ計測とかに適用出来る話</p>\n\n<ul>\n<li>目標とする数値を決める</li>\n<li>許容する範囲を決める</li>\n<li>範囲から外れたデータは原因をさぐれ</li>\n<li>内部要因と外部要因に切り分ける\n\n<ul>\n<li>内部要因は自分がコントロールできるもの</li>\n<li>外部要因はコントロールできない</li>\n</ul>\n</li>\n<li>ばらつきの種類は主に2つ\n\n<ul>\n<li>偶然のもの</li>\n<li>メンテナンスなどで解決できるもの</li>\n</ul>\n</li>\n</ul>\n\n<h3 id=\"0-3-1\" name=\"0-3-1\">\n<a class=\"anchor\" href=\"#0-3-1\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"問題を特定して解決する\"> &gt; 問題を特定して解決する</span></a>問題を特定して解決する</h3>\n\n<ul>\n<li>ブレインストーミングする</li>\n<li>要因をグループ分けして考える</li>\n<li>コントロールできる要因を特定する</li>\n<li>重要な問題から解決していく\n\n<ul>\n<li>コントロールできないものが残る</li>\n</ul>\n</li>\n</ul>\n\n<h2 id=\"0-4-0\" name=\"0-4-0\">\n<a class=\"anchor\" href=\"#0-4-0\"><i class=\"fa fa-link\"></i><span class=\"hidden\" data-text=\"次回がおもしろそう\"> &gt; 次回がおもしろそう</span></a>次回がおもしろそう</h2>\n\n<p>「USPを特定してコンテンツを削る」的なテーマ。</p>\n\n<blockquote>\n<p>USPとは、自社（自製品）のみが持つ独特の強みのこと。<br>\nユニークで顧客に対して売り込みが効く主張、提案がUSPであり、他社との差別化が主張できる強みのこと。<br>\nマーケティングにおいても、ブランド構築においてもUSPを持つことは極めて重要とされ、マーケティング戦略の立案にあたっては、USPすなわち他社には無い独特の提案を見つけることが重要とされる。</p>\n</blockquote>\n\n<ul>\n<li>モバイルではページの重さを100kb以下にしないと5秒で表示できない。データが示している事実</li>\n<li>でもどこの会社もわかってても100kb以下にできない</li>\n<li>「他のサービスにはこういう機能があるから」「他社がこういうデザインだから」とかが理由</li>\n<li>そうなるのはUSPが特定できていないから</li>\n<li>USPがわかればコンテンツ削れるぞ → ハイパフォーマンス！</li>\n</ul>\n\n<p>てな感じらしいです。第4回はモバイル通信の仕組みとかそっち系。</p>\n\n<p>パフォーマンス部のサイトもおもしろい<br>\n<a target=\"_blank\" href=\"http://perf.html5j.org/\">http://perf.html5j.org/</a></p>\n",
    "created_at": "2015-07-01T22:40:31+09:00",
    "message": "[skip notice] Imported from Qiita",
    "kind": "stock",
    "comments_count": 0,
    "tasks_count": 0,
    "done_tasks_count": 0,
    "url": "https://pxgrid.esa.io/posts/42",
    "updated_at": "2015-07-01T22:40:32+09:00",
    "tags": [
      "2に参加してきた",
      "勉強会"
    ],
    "category": "Imports/Qiita",
    "revision_number": 1,
    "created_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "updated_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "stargazers_count": 0,
    "watchers_count": 1,
    "star": false,
    "watch": true,
    "_uid": 1446574748077,
    "_modified_at": ""
  },
  {
    "number": 39,
    "name": "Object.observeをデバッグに使う",
    "full_name": "Imports/Qiita/Object.observeをデバッグに使う #JavaScript",
    "wip": false,
    "body_md": "created_at: 2014-06-05 15:25:28 +0900\nuser: nakajmg\n\n変更してるタイミングとかメソッド探すのがめんどくさいときに使えそう？\n\n```js\nfunction _logs(records) {\n  console.warn('observe logs');\n  console.log(records);\n  // なんか処理\n}\n// 第一引数に監視したいオブジェクト、第二にコールバック\nObject.observe(object, _logs);\n```\n\nコンソールに貼り付けて実行。もしくはDevToolsのスニペットに登録しておく。\n\n![スクリーンショット 2014-06-05 15.20.27.png](https://qiita-image-store.s3.amazonaws.com/778/17969/a12fd534-f91c-46fa-18e4-0489e29f724e.png)\n\nスニペットに登録しておくとブレークポイント打ててちゃんと止まってコールスタック ~~トレース~~ も追えるやったぜ！\n\n",
    "body_html": "<p>created_at: 2014-06-05 15:25:28 +0900<br>\nuser: nakajmg</p>\n\n<p>変更してるタイミングとかメソッド探すのがめんどくさいときに使えそう？</p>\n<div class=\"code-block\">\n<pre class=\"highlight javascript\"><code><span class=\"kd\">function</span> <span class=\"nx\">_logs</span><span class=\"p\">(</span><span class=\"nx\">records</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">warn</span><span class=\"p\">(</span><span class=\"s1\">'observe logs'</span><span class=\"p\">);</span>\n  <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">records</span><span class=\"p\">);</span>\n  <span class=\"c1\">// なんか処理</span>\n<span class=\"p\">}</span>\n<span class=\"c1\">// 第一引数に監視したいオブジェクト、第二にコールバック</span>\n<span class=\"nb\">Object</span><span class=\"p\">.</span><span class=\"nx\">observe</span><span class=\"p\">(</span><span class=\"nx\">object</span><span class=\"p\">,</span> <span class=\"nx\">_logs</span><span class=\"p\">);</span>\n</code></pre>\n</div>\n<p>コンソールに貼り付けて実行。もしくはDevToolsのスニペットに登録しておく。</p>\n\n<p><a href=\"https://qiita-image-store.s3.amazonaws.com/778/17969/a12fd534-f91c-46fa-18e4-0489e29f724e.png\" target=\"_blank\"><img src=\"https://qiita-image-store.s3.amazonaws.com/778/17969/a12fd534-f91c-46fa-18e4-0489e29f724e.png\" alt=\"スクリーンショット 2014-06-05 15.20.27.png\"></a></p>\n\n<p>スニペットに登録しておくとブレークポイント打ててちゃんと止まってコールスタック <del>トレース</del> も追えるやったぜ！</p>\n",
    "created_at": "2015-07-01T22:40:26+09:00",
    "message": "[skip notice] Imported from Qiita",
    "kind": "stock",
    "comments_count": 0,
    "tasks_count": 0,
    "done_tasks_count": 0,
    "url": "https://pxgrid.esa.io/posts/39",
    "updated_at": "2015-07-01T22:40:26+09:00",
    "tags": [
      "JavaScript"
    ],
    "category": "Imports/Qiita",
    "revision_number": 1,
    "created_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "updated_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "stargazers_count": 0,
    "watchers_count": 1,
    "star": false,
    "watch": true,
    "_uid": 1446574748079,
    "_modified_at": ""
  },
  {
    "number": 29,
    "name": "Qiitaの通知が見れるChrome拡張",
    "full_name": "Imports/Qiita/Qiitaの通知が見れるChrome拡張 #Qiita",
    "wip": false,
    "body_md": "created_at: 2014-06-03 22:57:23 +0900\nuser: nakajmg\n\n通知が見れるょ\n\n* [qiita-notifications](https://chrome.google.com/webstore/detail/qiita-notifications/hcnchocfgcldaldkchelnhpidgmfaocc?hl=ja)\n* [Qiita お知らせ](https://chrome.google.com/webstore/detail/qiita-notifications/lfaggijcindkbihlopcogjlihmpdpdaa/related)\n\n\n",
    "body_html": "<p>created_at: 2014-06-03 22:57:23 +0900<br>\nuser: nakajmg</p>\n\n<p>通知が見れるょ</p>\n\n<ul>\n<li><a target=\"_blank\" href=\"https://chrome.google.com/webstore/detail/qiita-notifications/hcnchocfgcldaldkchelnhpidgmfaocc?hl=ja\">qiita-notifications</a></li>\n<li><a target=\"_blank\" href=\"https://chrome.google.com/webstore/detail/qiita-notifications/lfaggijcindkbihlopcogjlihmpdpdaa/related\">Qiita お知らせ</a></li>\n</ul>\n",
    "created_at": "2015-07-01T22:40:12+09:00",
    "message": "[skip notice] Imported from Qiita",
    "kind": "stock",
    "comments_count": 0,
    "tasks_count": 0,
    "done_tasks_count": 0,
    "url": "https://pxgrid.esa.io/posts/29",
    "updated_at": "2015-07-01T22:40:12+09:00",
    "tags": [
      "Qiita"
    ],
    "category": "Imports/Qiita",
    "revision_number": 1,
    "created_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "updated_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "stargazers_count": 0,
    "watchers_count": 1,
    "star": false,
    "watch": true,
    "_uid": 1446574748080,
    "_modified_at": ""
  },
  {
    "number": 25,
    "name": "HTMLのIDがJSからアクセスできるやつ",
    "full_name": "Imports/Qiita/HTMLのIDがJSからアクセスできるやつ #相談",
    "wip": false,
    "body_md": "created_at: 2014-06-03 14:16:55 +0900\nuser: nakajmg\n\n先日Qiitaに投稿したやつ\nhttp://qiita.com/nakajmg/items/c895105afae95bfa8fae\n\nタイトルで「HTML内でIDをつけた要素はJavaScriptのグローバル変数に格納される」て書いちゃったんだけど、よく読んだら「JSで最初にアクセスしたときに自動的に作られる〜」的なことが書いてあるから間違ってるんじゃないかと。\n\n間違ってるなら直したいけど英語が…\n\n> What does that mean? Initially, there is no property window.foo. But the first time it is accessed (either directly or via the global variable foo), it is created automatically.\n\n> 引用元\nhttp://www.2ality.com/2012/08/ids-are-global.html\n\nwhatwgのspecはこんな感じ\n\n> 7.2.4 Named access on the Window object\n\n> Ready for first implementations\nBugs: 21278\nwindow[name]\nReturns the indicated element or collection of elements.\n\n> As a general rule, relying on this will lead to brittle code. Which IDs end up mapping to this API can vary over time, as new features are added to the Web platform, for example. Instead of this, use document.getElementById() or document.querySelector().\n\n> The Window interface supports named properties. The supported property names at any moment consist of the following, in tree order, ignoring later duplicates:\n\n> the browsing context name of any child browsing context of the active document whose name is not the empty string,\nthe value of the name content attribute for all a, applet, area, embed, form, frameset, img, and object elements in the active document that have a non-empty name content attribute, and\nthe value of the id content attribute of any HTML element in the active document with a non-empty id content attribute.\nTo determine the value of a named property name when the Window object is indexed for property retrieval, the user agent must return the value obtained using the following steps:\n\n> Let objects be the list of named objects with the name name in the active document.\n\n> There will be at least one such object, by definition.\nIf objects contains a nested browsing context, then return the WindowProxy object of the nested browsing context corresponding to the first browsing context container in tree order whose browsing context is in objects, and abort these steps.\n\n> Otherwise, if objects has only one element, return that element and abort these steps.\n\n> Otherwise return an HTMLCollection rooted at the Document node, whose filter matches only named objects with the name name. (By definition, these will all be elements.)\n\n> Named objects with the name name, for the purposes of the above algorithm, are those that are either:\n\n> child browsing contexts of the active document whose name is name,\na, applet, area, embed, form, frameset, img, or object elements that have a name content attribute whose value is name, or\nHTML elements that have an id content attribute whose value is name.\n\n> 引用元\nhttp://www.whatwg.org/specs/web-apps/current-work/\n\n\n\n\n\n\n",
    "body_html": "<p>created_at: 2014-06-03 14:16:55 +0900<br>\nuser: nakajmg</p>\n\n<p>先日Qiitaに投稿したやつ<br>\n<a target=\"_blank\" href=\"http://qiita.com/nakajmg/items/c895105afae95bfa8fae\">http://qiita.com/nakajmg/items/c895105afae95bfa8fae</a></p>\n\n<p>タイトルで「HTML内でIDをつけた要素はJavaScriptのグローバル変数に格納される」て書いちゃったんだけど、よく読んだら「JSで最初にアクセスしたときに自動的に作られる〜」的なことが書いてあるから間違ってるんじゃないかと。</p>\n\n<p>間違ってるなら直したいけど英語が…</p>\n\n<blockquote>\n<p>What does that mean? Initially, there is no property window.foo. But the first time it is accessed (either directly or via the global variable foo), it is created automatically.</p>\n\n<p>引用元<br>\n<a target=\"_blank\" href=\"http://www.2ality.com/2012/08/ids-are-global.html\">http://www.2ality.com/2012/08/ids-are-global.html</a></p>\n</blockquote>\n\n<p>whatwgのspecはこんな感じ</p>\n\n<blockquote>\n<p>7.2.4 Named access on the Window object</p>\n\n<p>Ready for first implementations<br>\nBugs: 21278<br>\nwindow[name]<br>\nReturns the indicated element or collection of elements.</p>\n\n<p>As a general rule, relying on this will lead to brittle code. Which IDs end up mapping to this API can vary over time, as new features are added to the Web platform, for example. Instead of this, use document.getElementById() or document.querySelector().</p>\n\n<p>The Window interface supports named properties. The supported property names at any moment consist of the following, in tree order, ignoring later duplicates:</p>\n\n<p>the browsing context name of any child browsing context of the active document whose name is not the empty string,<br>\nthe value of the name content attribute for all a, applet, area, embed, form, frameset, img, and object elements in the active document that have a non-empty name content attribute, and<br>\nthe value of the id content attribute of any HTML element in the active document with a non-empty id content attribute.<br>\nTo determine the value of a named property name when the Window object is indexed for property retrieval, the user agent must return the value obtained using the following steps:</p>\n\n<p>Let objects be the list of named objects with the name name in the active document.</p>\n\n<p>There will be at least one such object, by definition.<br>\nIf objects contains a nested browsing context, then return the WindowProxy object of the nested browsing context corresponding to the first browsing context container in tree order whose browsing context is in objects, and abort these steps.</p>\n\n<p>Otherwise, if objects has only one element, return that element and abort these steps.</p>\n\n<p>Otherwise return an HTMLCollection rooted at the Document node, whose filter matches only named objects with the name name. (By definition, these will all be elements.)</p>\n\n<p>Named objects with the name name, for the purposes of the above algorithm, are those that are either:</p>\n\n<p>child browsing contexts of the active document whose name is name,<br>\na, applet, area, embed, form, frameset, img, or object elements that have a name content attribute whose value is name, or<br>\nHTML elements that have an id content attribute whose value is name.</p>\n\n<p>引用元<br>\n<a target=\"_blank\" href=\"http://www.whatwg.org/specs/web-apps/current-work/\">http://www.whatwg.org/specs/web-apps/current-work/</a></p>\n</blockquote>\n",
    "created_at": "2015-07-01T22:40:04+09:00",
    "message": "[skip notice] Imported from Qiita",
    "kind": "stock",
    "comments_count": 0,
    "tasks_count": 0,
    "done_tasks_count": 0,
    "url": "https://pxgrid.esa.io/posts/25",
    "updated_at": "2015-07-01T22:40:05+09:00",
    "tags": [
      "相談"
    ],
    "category": "Imports/Qiita",
    "revision_number": 1,
    "created_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "updated_by": {
      "name": "中島直博",
      "screen_name": "nakajmg",
      "icon": "https://img.esa.io/uploads/production/users/4496/icon/thumb_m_edcc7dc6067a5af2bf0ad8c40a0ea809.jpg"
    },
    "stargazers_count": 0,
    "watchers_count": 1,
    "star": false,
    "watch": true,
    "_uid": 1446574748081,
    "_modified_at": ""
  }
]
